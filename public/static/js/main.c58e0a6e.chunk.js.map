{"version":3,"sources":["pages/Schdule/Movers/Movers.module.css","pages/Mover/Availability/Availability.module.css","pages/Customer/CustomerDetails/CustomerDetails.module.css","pages/User/CreateUser/CreateUser.module.css","pages/Deposit/DepositList/DepositList.module.css","pages/Deposit/CreateDeposit/CreateDeposit.module.css","components/Navbar/navbar.module.css","pages/Claim/ClaimList/ClaimList.module.css","pages/Mover/MoverCalendar/MoverCalendar.module.css","pages/Schdule/Daily/Daily.module.css","pages/ForgetPassword/ResetPassword/ResetPassword.module.css","components/DateAndTime/DateAndTime.module.css","pages/ForgetPassword/EmailVerification/EmailVerification.module.css","pages/ForgetPassword/CodeVerification/CodeVerification.module.css","components/ActivitiesModal/ActivitiesModal.module.css","components/Truck/Truck.module.css","components/Sidebar/SideBar.module.css","components/DeleteConfirmation/DeleteConfirmation.module.css","pages/Job/JobList/JobsList.module.css","components/BackButton/BackButton.module.css","pages/Customer/CustomerList/CustomerList.module.css","pages/Job/JobDetails/JobDetails.module.css","pages/Mover/JobList/JobList.module.css","pages/Claim/ClaimDetails/ClaimDetails.module.css","components/JobConfirmationModal/JobConfirmationModal.module.css","components/VirtualizedAutocomplete/VirtualizedAutocomplete.module.css","pages/Calendar/Calendar.module.css","pages/Mover/JobDetails/JobDetails.module.css","components/Claims/Claims.module.css","pages/Account/Account.module.css","pages/User/UserList/UserList.module.css","pages/Job/JobConfirmation/JobConfirmation.module.css","components/Blankets/Blankets.module.css","pages/Customer/CreateCustomer/CreateCustomer.module.css","pages/Customer/UpdateCustomer/UpdateCustomer.module.css","pages/Job/UpdateJob/UpdateJob.module.css","utils/private-routes.js","Redux/Common/commonActions.js","Redux/Common/commonConstants.js","Redux/User/userActions.js","Redux/User/userConstants.js","components/Navbar/Navbar.js","components/ErrorBoundary/ErrorBoundary.js","pages/SignIn/SignIn.js","pages/ForgetPassword/EmailVerification/EmailVerification.js","pages/ForgetPassword/CodeVerification/CodeVerification.js","pages/ForgetPassword/ResetPassword/ResetPassword.js","Redux/Customer/customerActions.js","Redux/Customer/customerConstants.js","Redux/Job/jobActions.js","Redux/Job/jobConstants.js","Redux/Mover/moverActions.js","Redux/Mover/moverConstants.js","Redux/Claim/claimActions.js","Redux/Claim/claimConstants.js","Redux/Deposit/DepositActions.js","Redux/Deposit/DepositConstants.js","components/SearchBar/SearchBar.js","components/Pagination/Pagination.js","components/DeleteConfirmation/DeleteConfirmation.js","components/BackButton/BackButton.js","pages/Customer/CustomerList/CustomerList.js","components/ActivitiesModal/ActivitiesModal.js","components/Blankets/Blankets.js","pages/Customer/CustomerDetails/CustomerDetails.js","pages/Customer/CreateCustomer/CreateCustomer.js","Redux/PersistForms/formActions.js","Redux/PersistForms/formConstants.js","pages/Customer/UpdateCustomer/UpdateCustomer.js","pages/Job/JobList/JobList.js","components/PlaceSearch/PlaceSearch.js","components/AddLocation/AddLocation.js","components/DateAndTime/DateAndTime.js","pages/Job/JobConfirmation/JobConfirmation.js","components/JobConfirmationModal/JobConfirmationModal.js","pages/Job/JobDetails/JobDetails.js","components/VirtualizedAutocomplete/VirtualizedAutocomplete.js","components/Truck/Truck.js","pages/Job/CreateJob/CreateJob.js","pages/Job/UpdateJob/UpdateJob.js","components/CalendarApp/CalendarApp.js","pages/Calendar/Calendar.js","components/Sidebar/SideBar.js","pages/Schdule/Unavailable/Unavailable.js","Redux/Unavailable/unavailableAction.js","Redux/Unavailable/unavailableConstant.js","pages/Schdule/Daily/Daily.js","Redux/Schedule/scheduleAction.js","Redux/Schedule/scheduleConstant.js","pages/Schdule/Movers/Movers.js","pages/User/UserList/UserList.js","pages/User/CreateUser/CreateUser.js","pages/User/UpdateUser/UpdateUser.js","pages/Account/Account.js","components/Claims/Claims.js","pages/Claim/ClaimList/ClaimList.js","pages/Claim/ClaimDetails/ClaimDetails.js","pages/Claim/CreateClaim/CreateClaim.js","pages/Deposit/DepositList/DepositList.js","pages/Deposit/CreateDeposit/CreateDeposit.js","pages/Deposit/DepositDetails/DepositDetails.js","pages/Mover/JobList/JobList.js","pages/Mover/JobDetails/JobDetails.js","pages/Mover/Payment/Payment.js","pages/Mover/MoverCalendar/MoverCalendar.js","pages/Mover/Availability/Availability.js","pages/Mover/HolidayCalendar/HolidayCalendar.js","App.js","serviceWorker.js","Redux/Customer/customerReducer.js","Redux/Job/jobReducer.js","Redux/Claim/claimReducers.js","Redux/User/userReducer.js","Redux/Mover/moverReducer.js","Redux/Common/commanReducers.js","Redux/Unavailable/unavailableReducer.js","Redux/Schedule/scheduleReducer.js","Redux/PersistForms/formReducer.js","Redux/Deposit/DepositReducer.js","Redux/rootReducer.js","Redux/store.js","utils/api.js","index.js","pages/SignIn/SignIn.module.css","components/CalendarApp/CalendarApp.module.css","pages/Claim/CreateClaim/CreateClaim.module.css","components/AddLocation/AddLocation.module.css","pages/Mover/Payment/Payment.module.css","pages/Job/CreateJob/CreateJob.module.css","pages/Deposit/DepositDetails/DepositDetails.module.css","pages/Mover/HolidayCalendar/HolidayCalendar.module.css","pages/Schdule/Unavailable/Unavailable.module.css","pages/User/UpdateUser/UpdateUser.module.css"],"names":["module","exports","connect","state","user","users","roles","Component","component","rest","render","props","console","log","localStorage","getItem","includes","role","to","showMessage","message","dispatch","a","setTimeout","type","payload","resetPassword","data","callback","Axios","put","config","handlerEnabled","response","status","getUsers","post","getUser","userId","get","updateUser","action","getLoginUser","compose","withRouter","useEffect","pathname","history","location","getNavLinkClass","path","logOut","clear","window","reload","className","style","elevation","fixedNavBar","logo","src","logoIcon","alt","data-toggle","data-target","id","Fragment","logoutBtn","Button","button","onClick","ErrorBoundary","hasError","error","errorInfo","this","children","SignIn","initialState","email","password","emailError","passwordError","validate","match","setState","formSubmit","e","preventDefault","isValid","login","push","handleFormInput","event","target","name","value","prevProps","signInContainer","image","form","signIn","head","flex","onSubmit","TextField","variant","size","textFields","label","onChange","forgetPs","signinBtn","React","actions","setItem","token","sendCode","useState","setEmail","setEmailError","verificationContainer","verificationContainerContent","required","emailField","sendCodeBtn","res","sessionStorage","verifyCode","headers","Authorization","code","setCode","verificationCode","setVerificationCode","userToken","setUserToken","getToken","removeItem","customStyles","verificationCodeInput","placeholder","codeInString","toString","length","handleVerificationCode","submitCodeBtn","setPasswordError","cpasswordError","setcPasswordError","cpassword","resetForm","setResetForm","resetContainer","passwordReset","passwordField","resetPasswordBtn","getAllCustomers","customersObj","getCustomer","customerId","getAllJobs","jobObj","getJob","jobId","updateJob","getAllClaims","body","page","query","updateClaim","_id","getCustomersAndJobs","deleteClaim","currentPage","delete","params","getDeposits","updateDeposit","moverSearchFilter","searchObj","customers","jobs","searchValue","setSearchValue","handleSearch","fetchCustomersObj","usersObj","fetchJobsOnPageChange","sort","plainname","createdAt","updatedAt","filter","claimStatus","filters","startDate","endDate","movedDate","tag","startYearMonth","onKeyUp","which","handleKeyPress","Pagination","itemCount","pageSize","onPageChange","pageCount","Math","ceil","isNaN","pages","_","range","map","key","DeleteConfirmation","show","handleClose","deleteItem","Modal","onHide","centered","scrollable","Header","closeButton","Title","Body","Footer","modalButtons","BackButton","useHistory","backButtonMain","backButton","icon","faArrowCircleLeft","goBack","deleteCustomer","customerList","totalCount","docs","total","order","setOrder","setCurrentPage","recentlyUpdated","setRecentlyUpdated","recentlyAdded","setRecentlyAdded","sortByName","setSortByName","setShow","customerToDelete","setCustomerToDelete","setValue","plainName","toprow","rowContent","title","href","aria-haspopup","aria-expanded","aria-labelledby","RadioGroup","aria-label","FormControlLabel","control","Radio","sortCustomersObj","btnStyle","link","btn","jumbotron","doc","i","listContainer","listContent","styleLink","item","heading","headingSub","firstName","lastName","phone","Chip","activeClaims","claim","deleteButton","stylePagination","pagination","fetchCustomersOnPageChange","ActivitiesModal","activities","dialogClassName","modal","modalBody","modalHeader","activitiy","modalContent","performer","messageLogs","x","date","timeStamp","items","blanketValue","setBlanketValue","depositValue","deposit","listContentItems","customerName","text","customer","customerJobId","job","quantity","cost","time","depositBtn","openDeleteModal","deleteModal","closeDeleteModal","deleteDeposit","update","setUpdate","updateIndex","setUpdateIndex","claimCount","setClaimCount","claims","setClaims","toggleClaim","setToggleClaim","customerClaims","openClaims","blanketDeposit","TabPanel","index","other","hidden","Box","p","customerDetailsContainer","customerDetails","AppBar","position","Tabs","styleTabs","newValue","Tab","Badge","badgeContent","color","reduce","sum","currentValue","parseInt","customerInfoHeader","customerInfoHeadings","customerInfoDescription","subContacts","aria-controls","data-parent","cardBodyHeader","cardBodyContent","jobCard","jobDetails","jobLink","jobService","clickable","backgroundColor","jobDates","dates","spacing","cardBodyContainer","cardBody___sectionOne","jobType","services","service","cardBodyContainerTwo","assigneeRequired","price","cardBodyContainerThree","trucks","truckSection","number","assignee","jobAssignee","jobDetailContainer","jobDetail","parse","description","locations","list","faMapMarker","default","propertyType","faMapMarkerAlt","note","notes","notes___text","styleEmptyJobs","claimTopRow","newClaimBtn","cardHeader","claimBody","claimDetail","claimHead","protectionRow","protectionRow___colOne","claimType","protectionRow___colTwo","protectionRow___buttons","showUpdateModal","stopPropagation","closeClaim","titleOne","title___textOne","titleTwo","title___textTwo","waitTo","updates","updateHead","updateContent","updateContentContainer","updateContentRow","faCalendarTimes","timestamp","flexEnd","updatedClaims","cloneDeep","updatedCount","newCount","handleCloseClaim","reopenClaim","TextareaAutosize","cols","rows","styleTextArea","ob","Date","newData","unshift","CreateCustomer","firstNameError","lastNameError","phoneError","handlePhoneNumberInput","previousValue","replace","cvLength","slice","handleSubPhoneNumberInput","previousState","prevState","hanldeContactsInput","updatedContacts","mySubmitHandler","addCustomer","isModal","close","handleResetForm","addContacts","resetCustomerForm","subContactPhoneError","subContactEmailError","addForm","setCustomerForm","formStyle","styleFormFields","fullWidth","autoComplete","autoFocus","styleAddBtn","modalAddBtn","addBtn","modalBtn","resetButtons","formResetButton","formButton","formSubmitButton","customerObj","forms","addCustomerForm","UpdateCustomer","addAlternateContact","updateCustomer","alternateContactBtn","alternateContact","anotherContactBtn","anotherContact","updateBtn","updateCustomerObj","filterJobsByDate","deleteJob","jobList","withStyles","theme","popover","pointerEvents","paper","padding","anchorEl","openedPopoverId","openedDatePopoverId","openedAssigneePopoverId","popoverOpen","showDeleteModal","nearestDate","jobToConfirm","modalIndex","jobToDelete","plainTitle","handleSort","handleDateFilter","DateFilters","toDateString","sortLast","handleServicePopoverClose","handleDatePopoverClose","handleAssigneePopoverClose","classes","open","Boolean","styleDates","jobProps","styleSpan","Typography","aria-owns","undefined","onMouseEnter","currentTarget","onMouseLeave","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","autocompleteService","current","useStyles","makeStyles","palette","secondary","marginRight","handleSetLocation","locationValue","inputValue","setInputValue","options","setOptions","loaded","useRef","document","querySelector","script","createElement","setAttribute","appendChild","loadScript","fetch","useMemo","throttle","request","getPlacePredictions","active","google","maps","places","AutocompleteService","input","componentRestrictions","country","results","newOptions","Autocomplete","getOptionLabel","option","filterOptions","includeInputInList","filterSelectedOptions","terms","onInputChange","newInputValue","renderInput","renderOption","matches","structured_formatting","main_text_matched_substrings","parts","main_text","offset","Grid","container","alignItems","xs","part","fontWeight","highlight","secondary_text","AddLocation","locationArr","addLocation","handleLocationChange","newProperty","propertyOptions","choosenLocation","changeCheckBoxState","showLocation","locationInput","radioButtons","rowFlex","updateLocation","handleInputChange","styleRadio","noOptionsText","propertyChanged","limitTags","propertyAdded","random","keyCode","addCustomPropertyType","multiError","inputField","checkBox","Checkbox","checked","checkBoxTick","TrashIcon","alignRight","faTrash","splice","removeLocation","plusIcon","faPlusCircle","DateAndTime","setParentDates","setDates","DateTimeInput","mainDate","utils","DateFnsUtils","minDate","inputVariant","format","newState","handleStartDate","KeyboardButtonProps","handleTimeSelect","centeredIcon","datesArr","removeDate","defaulTime","setHours","setMinutes","setSeconds","root","width","instructions","marginTop","marginBottom","useIconStyles","styles","step","confirmJob","obj","activeStep","setActiveStep","setData","payment","setPayment","steps","iconClasses","loadStripe","parsedDates","startTime","updatedCustomer","getElementById","s","onload","setPublishableKey","changeHandler","updatedPayment","pay","Stripe","card","createToken","exp_month","exp_year","cvc","stringDates","paidInCash","stripeToken","amount","jobToUpdate","handleSubmitWithoutPay","confirmJobModal","stepperLabels","Stepper","Step","StepLabel","StepIconProps","stepperContent","currentYear","skipSubmitBtn","getStepContent","backAndSubmitBtn","disabled","prevActiveStep","back","backStyles","next","JobConfirmationModal","handleCloseAndRefresh","closeJobConfirmationModal","showBooking","setShowBooking","jobEditContainer","containerContent","cards","customerCard","faUser","faMobile","faEnvelope","assigneeCard","assigneehead","faUserShield","activityBtn","center","jobBookBtn","jobHeader","jobHeader___childs","job___IdStatus","numbers","truckSectionType","truckSectionNum","jobDescription","jobDescription___title","jobDescription___text","pickup","locationType","dropoff","notes___title","VirtualizedAutocomplete","cache","CellMeasurerCache","fixedWidth","defaultHeight","selection","setVirtualizedState","onSelect","renderMenu","searchingFor","autocompleteStyle","clearAll","rowHeight","height","rowCount","rowRenderer","parent","Item","rowIndex","cloneElement","whiteSpace","wordBreak","borderBottom","boxSizing","onMouseDown","minWidth","border","maxHeight","overflowY","display","textField","setSelectedCustomerJobs","autoHighlight","inputProps","optionTextValue","disableListWrap","getCustomerJobs","addNewCustomer","Truck","truckOption","setTrucks","handleTrucksInput","inputType","updatedTrucks","movers","moversChild","FormControl","InputLabel","Select","labelId","MenuItem","InputProps","min","truckArr","removeTruck","CreateJob","getDefaultTime","editorState","EditorState","createEmpty","meetTime","from","customerIdError","titleError","descriptionError","dateError","timeError","assigneeError","locationfromError","locationtoError","assigneeList","assigneesId","add","fromTo","assigneeRequiredError","selectedDate","newService","selectedCustomer","newCustomer","showAddCustomer","serviceOptions","truckOptions","componentDidMount","selectedJob","jobTypeError","getCurrentContent","hasText","createJob","loggedInUser","handleResetJob","servicesChanged","arr","uniqBy","addCustomService","serviceAdded","populateNewCustomer","onEditorStateChange","draftToHtml","convertToRaw","resetJobForm","jobForm","setJobForm","styleEditorInValid","styleEditorValid","toolbarClassName","wrapperClassName","editorClassName","multiple","propertyTypeRow","margin","startAdornment","InputAdornment","resetBtns","newJobObj","newJob","addJobForm","UpdateJob","servicesError","moversError","locationFromError","locationToError","newNote","statusOptions","handleDateChange","handleValidation","setInitialState","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","startDateInString","endDateInString","truck","truckSize","handleShow","AddNote","uid","uuidv4","handleDeleteNote","deleteNote","noteToDelete","findIndex","n","handleAddNote","handleJobUpdate","loggedinUser","updatedObj","styleEditor","notesStyle","notesBtn","animation","localizer","momentLocalizer","moment","getJobsByDate","myEventsList","currentDayJobs","count","setCount","getCount","forEach","y","end","start","calenderContainer","calender","calenderContent","styleCalender","selectable","events","startAccessor","endAccessor","views","month","popup","onNavigate","onSelectEvent","onSelectSlot","components","dateCellWrapper","Children","only","sideContent","jobInfo","cardBody","customerMail","jobText","Calendar","calendarContainer","innerWidth","sidebar","routes","sidebarContent","getAllData","approveRequest","unavailable","setStatus","faClock","faBan","unavailableContainer","unavailableContent","unavailableHeader","approveBtn","dropDownMenu","dropDownIcon","changeStatus","unavailableList","approved","handleChange","applicant","k","reason","getalljobs","getalljobsfiveday","schedule","moverList","newDate","common","scheduleDate","newAssignee","setAssignee","showIndex","setShowIndex","today","setToday","modalShow","setModalShow","mover","setMover","moverAssignedJobs","setMoverAssignedJobs","generatePDF","nativeEvent","stopImmediatePropagation","join","jsPDF","imgA","addImage","setFont","setFontSize","formatAMPM","autoTable","dataKey","top","htmlToText","autoPrint","output","hours","getHours","minutes","getMinutes","ampm","updateJobAssignee","badge","Navigate","moverListItem","droppableId","provided","snapshot","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","moverHeader","todayJobs","hideAssigneeId","scheduleContainer","dragContent","onDragEnd","result","destination","source","moverId","moverAssignedDate","some","find","newAssigneeObj","jobContent","styleDatePicker","getSelectedDay","d","labelFormat","selectDate","styleLine","moverAssigneeInfo","dangerClass","toggleCollapse","onDoubleClick","content","hideJobId","assigneeName","closeIcon","assigneeIndex","removeAssignee","faTimes","deleteButtonTwo","deleteButtonOne","jobDetailList","jobTitle","jobsId","jobTypee","jobStatus","jobDescriptionHeader","jobDescriptionText","customerDetailContainer","customerDetailList","customerDetailListContent","contentMail","mov","scroll","scrollBar","scrollContent","crewLeaders","newMovers","attribute","moversList","styleText","styleModalBody","modalBtns","moverObj","updateJobAssigneeList","getAllMover","allMovers","setAllMovers","filteredMovers","setFilteredMovers","setDropDownMenu","moversContainer","moversContent","toLowerCase","weeklySchedule","day","split","userList","filterType","setFilterType","sortUserObj","handleFilter","usersDoc","listTitle","listDetail","address","nameError","typeError","addressError","attributeError","attributeOptions","CreateUser","typeOptions","roleOptions","onTypeSelect","onAttributeSelect","createUser","userContainer","userForm","styleAddress","createBtn","activeStatus","userState","setUserState","disabledFields","setDisabledFields","Switch","userData","disabledForm","setDisabledForm","showModal","setShowModal","confirmPassword","confirmPasswordError","editAccount","setEditAccount","accountContainer","header","updatedUserObj","profile","profilePic","accountHolderName","accountHolderRole","editButton","validateModalInputs","claimToDelete","setClaimToDelete","claimsId","claimList","toLocaleUpperCase","deleteBtn","getClaimsByStatus","getClaim","setWaitTo","claimInput","setClaimInput","claimId","editInput","claimsDetailContainer","claimDetails","claimButton","waiting","waitingInput","handleClaimInput","update___time","handleCloseJob","CreateClaim","fromDate","toDate","locationfrom","locationto","jobIdError","itemError","priceError","fromDateError","toDateError","inputValues","waitToError","addClaim","hanldeClaimsInput","showClaimsDetails","resetClaimForm","setClaimForm","claimContainerPage","claimContainer","claimHeader","claimContent","modalButton","protectionType","rowsMax","buttons","addClaimForm","deleteBlanketDeposit","blankets","depositList","setDeleteModal","depositToDelete","setDepositToDelete","removeBlanketDeposit","submitDepositContainer","submitDeposit","blanketContainer","CreateDeposit","quantityError","costError","handleValidate","handleSearchFormInput","handleSubmit","addDeposit","handleResetDeposit","handleQuantityFormInput","handleCostFormInput","resetDepositForm","setDepositForm","depositFormContainer","depositForm","addDepositForm","getDeposit","toggleEdit","setToggleEdit","updatedDeposit","setUpdatedDeposit","depositId","handleOnChange","depositDetailsContainer","depositDetails","pricing","pricingInput","editButon","getMover","moversObj","moverJobs","isLoading","sortByStatus","filterJobByStatus","fetchMoverJobs","filterJobByDate","onClose","styleCheckBox","markComplete","getMoverJobDetail","payBtns","payOnlineBtn","payCashBtn","payAmount","main","tophead","visaIcon","styleCurrentYear","MoverCalendar","availibityBtns","setAvailability","days","availabilityContainer","availabilityHeader","availabilitySchedule","checkbox","dayName","saveBtn","renderDay","getDate","cellStyle","dateStyle","birthdayStyle","holidayCalendar","setNote","emptyReasonError","setEmptyReasonError","holidayCalendarContainer","canChangeMonth","onDayClick","newDates","handleDayClick","redBorder","blackBorder","displayMessage","totalRequest","notify","toast","useLocation","appRoles","moverRoles","adminRoles","CircularProgress","exact","EmailVerification","CodeVerification","ResetPassword","CustomerList","CustomerDetails","JobList","JobDetails","DailySchedule","UnavailableSchedule","MoversSchedule","UserList","UpdateUser","Account","ClaimList","ClaimDetails","DepositList","DepositDetails","MoversJobList","MoverJobDetails","Payment","MoversCalendar","Availability","RequestHolidays","hostname","customerReducer","jobReducer","dateFilter","claimReducer","userReducer","moverReducer","loading","commonReducer","currentState","currentStates","unavailableReducer","scheduleReducer","phoneNumberError","formsReducer","depositReducer","rootReducer","combineReducers","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","axios","defaults","baseURL","interceptors","use","req","navigator","onLine","Cancel","hasOwnProperty","isHandlerEnabled","err","Promise","reject","isCancel","ReactDOM","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c58e0a6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"moversContainer\":\"Movers_moversContainer__24sFw\",\"moversContent\":\"Movers_moversContent__1fiNH\",\"moverHeader\":\"Movers_moverHeader__3Y3sJ\",\"moverList\":\"Movers_moverList__3elnf\",\"listContent\":\"Movers_listContent__xeTTF\",\"list\":\"Movers_list__3BVsw\",\"dropDownMenu\":\"Movers_dropDownMenu__p3Ili\",\"dropDownIcon\":\"Movers_dropDownIcon__2QKSn\",\"flexEnd\":\"Movers_flexEnd__3a87w\",\"approveBtn\":\"Movers_approveBtn__3X8G1\",\"button\":\"Movers_button__LlCSX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"availabilityContainer\":\"Availability_availabilityContainer__36cSM\",\"availabilityHeader\":\"Availability_availabilityHeader__3QYWp\",\"availabilitySchedule\":\"Availability_availabilitySchedule__aYxcE\",\"scheduleContainer\":\"Availability_scheduleContainer__2rJX5\",\"schedule\":\"Availability_schedule__hoz8h\",\"checkbox\":\"Availability_checkbox__2ud82\",\"dayName\":\"Availability_dayName__1sMUy\",\"saveBtn\":\"Availability_saveBtn__1D4X0\",\"button\":\"Availability_button__3jjSm\",\"flex\":\"Availability_flex__21GZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customerDetailsContainer\":\"CustomerDetails_customerDetailsContainer__1OufC\",\"customerDetails\":\"CustomerDetails_customerDetails__3sf-q\",\"styleTabs\":\"CustomerDetails_styleTabs__2GHeI\",\"customerInfoHeader\":\"CustomerDetails_customerInfoHeader__17519\",\"link\":\"CustomerDetails_link__19GWX\",\"button\":\"CustomerDetails_button__3qgg-\",\"customerInfoHeadings\":\"CustomerDetails_customerInfoHeadings__1G3Ks\",\"customerInfoDescription\":\"CustomerDetails_customerInfoDescription__Tpf3W\",\"cardBodyHeader\":\"CustomerDetails_cardBodyHeader__N33Ab\",\"cardBodyContent\":\"CustomerDetails_cardBodyContent__3_18l\",\"job\":\"CustomerDetails_job__2YBSJ\",\"jobCard\":\"CustomerDetails_jobCard__2dQZC\",\"jumbotron\":\"CustomerDetails_jumbotron__3IpSD\",\"cardBody___sectionOne\":\"CustomerDetails_cardBody___sectionOne__xGwpe\",\"cardBodyContainerTwo\":\"CustomerDetails_cardBodyContainerTwo__HkEHc\",\"truckSection\":\"CustomerDetails_truckSection__3EDd3\",\"cardBodyContainerThree\":\"CustomerDetails_cardBodyContainerThree__2Y0g1\",\"jobDetails\":\"CustomerDetails_jobDetails__17XQL\",\"jobLink\":\"CustomerDetails_jobLink__1WuJ6\",\"jobAssignee\":\"CustomerDetails_jobAssignee__Og8Xk\",\"spacing\":\"CustomerDetails_spacing__1_FYt\",\"cardBodyContainer\":\"CustomerDetails_cardBodyContainer__2SFa4\",\"jobService\":\"CustomerDetails_jobService__IRgk1\",\"jobDates\":\"CustomerDetails_jobDates__1qsHQ\",\"services\":\"CustomerDetails_services__2V7Hd\",\"jobChips\":\"CustomerDetails_jobChips__cZfdV\",\"jobDetailContainer\":\"CustomerDetails_jobDetailContainer__2-UuL\",\"jobDetail\":\"CustomerDetails_jobDetail__34Jj7\",\"notes___text\":\"CustomerDetails_notes___text__38Cff\",\"locations\":\"CustomerDetails_locations__1ZI5y\",\"location\":\"CustomerDetails_location__Y0AT4\",\"notes\":\"CustomerDetails_notes__1Ot66\",\"styleEmptyJobs\":\"CustomerDetails_styleEmptyJobs__2-Xpc\",\"flex\":\"CustomerDetails_flex__Os-CI\",\"claimTopRow\":\"CustomerDetails_claimTopRow__3MDOj\",\"newClaimBtn\":\"CustomerDetails_newClaimBtn__1ku61\",\"claimListHeaderContainer\":\"CustomerDetails_claimListHeaderContainer__1OAho\",\"claimListHeader\":\"CustomerDetails_claimListHeader__sbq8W\",\"cardHeader\":\"CustomerDetails_cardHeader__2McO_\",\"heading\":\"CustomerDetails_heading__3gL5R\",\"headingSub\":\"CustomerDetails_headingSub__dX-_5\",\"claimBody\":\"CustomerDetails_claimBody__xLJQK\",\"claimDetail\":\"CustomerDetails_claimDetail__31Vff\",\"claimHead\":\"CustomerDetails_claimHead__1zIsV\",\"protectionRow\":\"CustomerDetails_protectionRow__2qlPL\",\"protectionRow___colOne\":\"CustomerDetails_protectionRow___colOne__2QCHG\",\"protectionRow___colTwo\":\"CustomerDetails_protectionRow___colTwo__2dF8X\",\"protectionRow___buttons\":\"CustomerDetails_protectionRow___buttons__1mFFH\",\"description\":\"CustomerDetails_description__3DCwd\",\"title\":\"CustomerDetails_title__scFHA\",\"title___textOne\":\"CustomerDetails_title___textOne__2TQov\",\"title___textTwo\":\"CustomerDetails_title___textTwo__3yTpX\",\"waiting\":\"CustomerDetails_waiting__TJ9NW\",\"updates\":\"CustomerDetails_updates__1xMcW\",\"updateHead\":\"CustomerDetails_updateHead__3PWLX\",\"updateContent\":\"CustomerDetails_updateContent__3b2vR\",\"updateContentRow\":\"CustomerDetails_updateContentRow__e5Bkj\",\"timeStamp\":\"CustomerDetails_timeStamp__1w84R\",\"toprow\":\"CustomerDetails_toprow__2Wx-J\",\"btn\":\"CustomerDetails_btn__3R0OT\",\"flexEnd\":\"CustomerDetails_flexEnd__1d136\",\"modal\":\"CustomerDetails_modal__3MOda\",\"styleTextArea\":\"CustomerDetails_styleTextArea__3rfAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userContainer\":\"CreateUser_userContainer__2ZFw9\",\"userForm\":\"CreateUser_userForm__3eP2Z\",\"head\":\"CreateUser_head__2sKa0\",\"styleFormFields\":\"CreateUser_styleFormFields__2ebw8\",\"inputField\":\"CreateUser_inputField__3ABmh\",\"styleAddress\":\"CreateUser_styleAddress__17X4n\",\"createBtn\":\"CreateUser_createBtn__2_OLU\",\"button\":\"CreateUser_button__2wU6g\",\"styleMultiSelect\":\"CreateUser_styleMultiSelect__1aG5U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitDepositContainer\":\"DepositList_submitDepositContainer__3M0xb\",\"submitDeposit\":\"DepositList_submitDeposit__1MJoe\",\"toprow\":\"DepositList_toprow__3FWZ8\",\"btn\":\"DepositList_btn__PKPDZ\",\"link\":\"DepositList_link__1WFYF\",\"button\":\"DepositList_button__7Plsi\",\"stylePagination\":\"DepositList_stylePagination__2tDdf\",\"pagination\":\"DepositList_pagination__ingGr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"CreateDeposit_head__2F1mt\",\"depositFormContainer\":\"CreateDeposit_depositFormContainer__HjPit\",\"depositForm\":\"CreateDeposit_depositForm__31Hud\",\"styleFormFields\":\"CreateDeposit_styleFormFields__18mOj\",\"depositBtn\":\"CreateDeposit_depositBtn__3zUVR\",\"button\":\"CreateDeposit_button__1D-Jw\",\"form\":\"CreateDeposit_form__3PfWn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"elevation\":\"navbar_elevation__3VlIb\",\"logo\":\"navbar_logo__7aEvj\",\"logoIcon\":\"navbar_logoIcon__1L0MC\",\"fixedNavBar\":\"navbar_fixedNavBar__31K15\",\"logoutBtn\":\"navbar_logoutBtn__1nRPe\",\"button\":\"navbar_button__O_Vpg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toprow\":\"ClaimList_toprow__2SoS_\",\"rowContent\":\"ClaimList_rowContent__1S0uC\",\"newClaimBtn\":\"ClaimList_newClaimBtn__3hfFG\",\"link\":\"ClaimList_link__1E90l\",\"button\":\"ClaimList_button__2iVPt\",\"filter\":\"ClaimList_filter__16dCN\",\"flex\":\"ClaimList_flex__1nqlz\",\"stylePagination\":\"ClaimList_stylePagination__17Brz\",\"pagination\":\"ClaimList_pagination__1EWty\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calenderContainer\":\"MoverCalendar_calenderContainer__1Taf3\",\"availibityBtns\":\"MoverCalendar_availibityBtns__3Ag6k\",\"buttons\":\"MoverCalendar_buttons__9pdhA\",\"link\":\"MoverCalendar_link__3biKG\",\"button\":\"MoverCalendar_button__1tazS\",\"calenderContent\":\"MoverCalendar_calenderContent__1aETz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scheduleContainer\":\"Daily_scheduleContainer__Ijyx2\",\"sidebar\":\"Daily_sidebar__1hDdC\",\"dragContent\":\"Daily_dragContent__2auJ4\",\"jobContent\":\"Daily_jobContent__2X6Dq\",\"movers\":\"Daily_movers__1K23w\",\"styleDatePicker\":\"Daily_styleDatePicker__2fmkp\",\"styleLine\":\"Daily_styleLine__3Q74L\",\"moverAssigneeInfo\":\"Daily_moverAssigneeInfo___Ko6h\",\"button\":\"Daily_button__1MiN6\",\"cardHeader\":\"Daily_cardHeader__2KDQu\",\"heading\":\"Daily_heading__8vMX6\",\"content\":\"Daily_content__Gz85n\",\"contentMail\":\"Daily_contentMail__34BU-\",\"dangerClass\":\"Daily_dangerClass__2L4zt\",\"deleteButtonTwo\":\"Daily_deleteButtonTwo__3dQ6t\",\"deleteButtonOne\":\"Daily_deleteButtonOne__10_gE\",\"hideJobId\":\"Daily_hideJobId__2mSrB\",\"hideAssigneeId\":\"Daily_hideAssigneeId__IyzrB\",\"assignee\":\"Daily_assignee__2zIGC\",\"assigneeName\":\"Daily_assigneeName__2o-DV\",\"closeIcon\":\"Daily_closeIcon__1-GlA\",\"styleText\":\"Daily_styleText__f-fbo\",\"styleModalBody\":\"Daily_styleModalBody__2ufhR\",\"styleLink\":\"Daily_styleLink__3aLKr\",\"modalBtns\":\"Daily_modalBtns__1Ed5g\",\"jobDetailList\":\"Daily_jobDetailList__3s9hs\",\"jobTitle\":\"Daily_jobTitle__1xIcG\",\"jobsId\":\"Daily_jobsId__3-hwv\",\"jobTypee\":\"Daily_jobTypee__3_zNq\",\"jobStatus\":\"Daily_jobStatus__2wOin\",\"customerDetailHeader\":\"Daily_customerDetailHeader__3gvo2\",\"customerDetailList\":\"Daily_customerDetailList__3ogIN\",\"jobDescriptionHeader\":\"Daily_jobDescriptionHeader__3-x_J\",\"jobDescription\":\"Daily_jobDescription__2K0qK\",\"jobDescriptionText\":\"Daily_jobDescriptionText__6ju_B\",\"customerDetailListContent\":\"Daily_customerDetailListContent__2okkz\",\"moverHeader\":\"Daily_moverHeader__3nCUe\",\"scroll\":\"Daily_scroll__17KS6\",\"scrollBar\":\"Daily_scrollBar__1_C3D\",\"scrollContent\":\"Daily_scrollContent__1tWu-\",\"movehead\":\"Daily_movehead__2LNQH\",\"mov\":\"Daily_mov__1bGMa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resetContainer\":\"ResetPassword_resetContainer__3G_Ut\",\"passwordReset\":\"ResetPassword_passwordReset__3bjxU\",\"passwordField\":\"ResetPassword_passwordField__36qfM\",\"resetPasswordBtn\":\"ResetPassword_resetPasswordBtn__2z7y9\",\"button\":\"ResetPassword_button__1ryiz\",\"flex\":\"ResetPassword_flex__ZRu59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateAndTime\":\"DateAndTime_DateAndTime__QEKol\",\"DateTimeInput\":\"DateAndTime_DateTimeInput__QGuSp\",\"mainDate\":\"DateAndTime_mainDate__3ujEW\",\"centeredIcon\":\"DateAndTime_centeredIcon__1Y88c\",\"alignRight\":\"DateAndTime_alignRight__1C5OK\",\"plusIcon\":\"DateAndTime_plusIcon__1-eZ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"verificationContainer\":\"EmailVerification_verificationContainer__e67qs\",\"verificationContainerContent\":\"EmailVerification_verificationContainerContent__22ZEA\",\"emailField\":\"EmailVerification_emailField__2KkjS\",\"sendCodeBtn\":\"EmailVerification_sendCodeBtn__2baE8\",\"button\":\"EmailVerification_button__1RbK2\",\"flex\":\"EmailVerification_flex__sGlZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"verificationCode\":\"CodeVerification_verificationCode__15HDo\",\"customStyles\":\"CodeVerification_customStyles__1k0E_\",\"verificationCodeInput\":\"CodeVerification_verificationCodeInput__2Vxvu\",\"ReactInputVerificationCode__item\":\"CodeVerification_ReactInputVerificationCode__item__2Dub7\",\"is-active\":\"CodeVerification_is-active__OP_xX\",\"submitCodeBtn\":\"CodeVerification_submitCodeBtn__3Byyz\",\"button\":\"CodeVerification_button__2edO-\",\"flex\":\"CodeVerification_flex__1IMeN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ActivitiesModal_modal__Ply5s\",\"modalBody\":\"ActivitiesModal_modalBody__14Jn5\",\"modalHeader\":\"ActivitiesModal_modalHeader__jI_Yb\",\"modalContent\":\"ActivitiesModal_modalContent__1YuU3\",\"modalButtons\":\"ActivitiesModal_modalButtons__1yA3z\",\"button\":\"ActivitiesModal_button__1UWN-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movers\":\"Truck_movers__jIYFI\",\"moversChild\":\"Truck_moversChild__2LkUs\",\"styleFormFields\":\"Truck_styleFormFields__1nkqQ\",\"centeredIcon\":\"Truck_centeredIcon__Ffa_9\",\"alignRight\":\"Truck_alignRight__2_smu\",\"plusIcon\":\"Truck_plusIcon__1TFBJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"SideBar_sidebar__dmqec\",\"sidebarContent\":\"SideBar_sidebarContent__22QZO\",\"flex\":\"SideBar_flex__23mW1\",\"active\":\"SideBar_active__UmlcP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalButtons\":\"DeleteConfirmation_modalButtons__2dz0C\",\"button\":\"DeleteConfirmation_button__10l5t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toprow\":\"JobsList_toprow__3IrYA\",\"rowContent\":\"JobsList_rowContent__3NXya\",\"styleDates\":\"JobsList_styleDates__1Bl3i\",\"link\":\"JobsList_link__3mhS9\",\"btnStyle\":\"JobsList_btnStyle__E86gH\",\"btn\":\"JobsList_btn__I8had\",\"jobListHeaderContainer\":\"JobsList_jobListHeaderContainer__3FU0h\",\"jobListHeader\":\"JobsList_jobListHeader__3P7sX\",\"listContainer\":\"JobsList_listContainer__1rP8e\",\"listContent\":\"JobsList_listContent__2zX9e\",\"heading\":\"JobsList_heading__2yc6n\",\"headingSub\":\"JobsList_headingSub__10apy\",\"styleLink\":\"JobsList_styleLink__1cknh\",\"jobList\":\"JobsList_jobList__PEZIR\",\"title\":\"JobsList_title__arrZO\",\"date\":\"JobsList_date__psqMS\",\"styleSpan\":\"JobsList_styleSpan__1sryC\",\"assignee\":\"JobsList_assignee__-eMHW\",\"services\":\"JobsList_services__3yM7y\",\"status\":\"JobsList_status__2MuYC\",\"actions\":\"JobsList_actions__3X5lZ\",\"deleteButton\":\"JobsList_deleteButton__3DFFY\",\"flex\":\"JobsList_flex__1Ir7X\",\"item\":\"JobsList_item__kJVaY\",\"filter\":\"JobsList_filter__3KCyt\",\"stylePagination\":\"JobsList_stylePagination__2fDyQ\",\"pagination\":\"JobsList_pagination__1OLHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backButtonMain\":\"BackButton_backButtonMain__1m_oK\",\"backButton\":\"BackButton_backButton__18SxD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toprow\":\"CustomerList_toprow__NR8vP\",\"rowContent\":\"CustomerList_rowContent__2H4iK\",\"link\":\"CustomerList_link__3i3YV\",\"btnStyle\":\"CustomerList_btnStyle__3ChLS\",\"btn\":\"CustomerList_btn__ypEVe\",\"jumbotron\":\"CustomerList_jumbotron__HLSQf\",\"listheader\":\"CustomerList_listheader__1TFl9\",\"listContainer\":\"CustomerList_listContainer__2pEJb\",\"listContent\":\"CustomerList_listContent__NbF0B\",\"styleLink\":\"CustomerList_styleLink__1OdlQ\",\"customerList\":\"CustomerList_customerList__26pie\",\"name\":\"CustomerList_name__3b-MJ\",\"phone\":\"CustomerList_phone__2mx9Z\",\"email\":\"CustomerList_email__3r3y9\",\"jobs\":\"CustomerList_jobs__21IC0\",\"activeClaims\":\"CustomerList_activeClaims__2iGkz\",\"actions\":\"CustomerList_actions__3guPP\",\"deleteButton\":\"CustomerList_deleteButton__-RUBX\",\"item\":\"CustomerList_item__1X_ES\",\"flex\":\"CustomerList_flex__zFaYg\",\"heading\":\"CustomerList_heading__3NgUM\",\"headingSub\":\"CustomerList_headingSub__1EdnM\",\"filter\":\"CustomerList_filter__36g5v\",\"stylePagination\":\"CustomerList_stylePagination__2c2my\",\"pagination\":\"CustomerList_pagination__1Jj_A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jobEditContainer\":\"JobDetails_jobEditContainer__3xIo8\",\"containerContent\":\"JobDetails_containerContent__txXEO\",\"cards\":\"JobDetails_cards__33FEl\",\"customerCard\":\"JobDetails_customerCard__2YurA\",\"assigneeCard\":\"JobDetails_assigneeCard__2UCpw\",\"assigneehead\":\"JobDetails_assigneehead__23tWk\",\"center\":\"JobDetails_center__1Wyzd\",\"activityBtn\":\"JobDetails_activityBtn__1FTZy\",\"button\":\"JobDetails_button__1F8WQ\",\"jobEditBtns\":\"JobDetails_jobEditBtns__26APh\",\"link\":\"JobDetails_link__2vQmS\",\"buttons\":\"JobDetails_buttons__2QqLv\",\"jobDetail\":\"JobDetails_jobDetail__3nVAR\",\"jobHeader\":\"JobDetails_jobHeader__n1NXZ\",\"jobHeader___childs\":\"JobDetails_jobHeader___childs__1KEiT\",\"jobDates\":\"JobDetails_jobDates__lhc2G\",\"job___IdStatus\":\"JobDetails_job___IdStatus__1W6ui\",\"service\":\"JobDetails_service__2HtXS\",\"numbers\":\"JobDetails_numbers__3FhHK\",\"truckSection\":\"JobDetails_truckSection__17U58\",\"propertySection\":\"JobDetails_propertySection__2Hryd\",\"notes\":\"JobDetails_notes__1ma5h\",\"jobDescription___title\":\"JobDetails_jobDescription___title__3c0bN\",\"notes___title\":\"JobDetails_notes___title__2Hzj-\",\"jobDescription___text\":\"JobDetails_jobDescription___text__35xSH\",\"notes___text\":\"JobDetails_notes___text__3Dmht\",\"locations\":\"JobDetails_locations__3pDJF\",\"location\":\"JobDetails_location__1mMBv\",\"locationType\":\"JobDetails_locationType__3yWMx\",\"dropoff\":\"JobDetails_dropoff__3V1d5\",\"pickup\":\"JobDetails_pickup__2IbPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toprow\":\"JobList_toprow__3in0o\",\"rowContent\":\"JobList_rowContent__2UvK6\",\"styleDates\":\"JobList_styleDates__53aED\",\"link\":\"JobList_link__25RYs\",\"jobListHeaderContainer\":\"JobList_jobListHeaderContainer__63tMi\",\"jobListHeader\":\"JobList_jobListHeader__3GOSn\",\"listContainer\":\"JobList_listContainer__3Tsp-\",\"listContent\":\"JobList_listContent__1A76u\",\"heading\":\"JobList_heading__1n9ff\",\"headingSub\":\"JobList_headingSub__12w5d\",\"styleLink\":\"JobList_styleLink__lDVIg\",\"jobList\":\"JobList_jobList__2WS6z\",\"title\":\"JobList_title__c_20l\",\"date\":\"JobList_date__1JfFf\",\"styleSpan\":\"JobList_styleSpan__1G7Q5\",\"assignee\":\"JobList_assignee__3t0V6\",\"jobStatus\":\"JobList_jobStatus__1VhQO\",\"styleCheckBox\":\"JobList_styleCheckBox__1mqhs\",\"flex\":\"JobList_flex__3N7I3\",\"item\":\"JobList_item__1OTBQ\",\"filter\":\"JobList_filter__3Dow0\",\"stylePagination\":\"JobList_stylePagination__2YH5c\",\"pagination\":\"JobList_pagination__1EEG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"claimsDetailContainer\":\"ClaimDetails_claimsDetailContainer__2pAXu\",\"claimDetails\":\"ClaimDetails_claimDetails__3QLIw\",\"cards\":\"ClaimDetails_cards__1UpeX\",\"link\":\"ClaimDetails_link__2eVvp\",\"customerCard\":\"ClaimDetails_customerCard__3D0ZW\",\"jobCard\":\"ClaimDetails_jobCard__uvy2G\",\"assigneehead\":\"ClaimDetails_assigneehead__1MS9O\",\"claimButton\":\"ClaimDetails_claimButton__2RuMR\",\"claimDetail\":\"ClaimDetails_claimDetail__2FBF_\",\"protectionRow\":\"ClaimDetails_protectionRow__ibNh3\",\"button\":\"ClaimDetails_button__8Cm73\",\"waiting\":\"ClaimDetails_waiting__2iYLI\",\"description\":\"ClaimDetails_description__2kWLD\",\"waitingInput\":\"ClaimDetails_waitingInput__1I4t6\",\"updates\":\"ClaimDetails_updates__bMRZ0\",\"updateHead\":\"ClaimDetails_updateHead__3-jR3\",\"updateContent\":\"ClaimDetails_updateContent__3Vm-q\",\"updateContentRow\":\"ClaimDetails_updateContentRow__3vQBp\",\"update___time\":\"ClaimDetails_update___time__1sjXf\",\"modal\":\"ClaimDetails_modal__3CGwz\",\"flexEnd\":\"ClaimDetails_flexEnd__25JwG\",\"styleTextArea\":\"ClaimDetails_styleTextArea__MYwiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"JobConfirmationModal_modal__3FzwY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"styleFormFields\":\"VirtualizedAutocomplete_styleFormFields__1lnMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendarContainer\":\"Calendar_calendarContainer__3VgFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jobEditContainer\":\"JobDetails_jobEditContainer__2lsvd\",\"containerContent\":\"JobDetails_containerContent__MEv6a\",\"cards\":\"JobDetails_cards__1HYZI\",\"customerCard\":\"JobDetails_customerCard__24-Va\",\"assigneeCard\":\"JobDetails_assigneeCard__3g8Yb\",\"assigneehead\":\"JobDetails_assigneehead__1H1vh\",\"center\":\"JobDetails_center__3sm9i\",\"jobDetail\":\"JobDetails_jobDetail__3oW0c\",\"jobHeader\":\"JobDetails_jobHeader__18I72\",\"jobHeader___childs\":\"JobDetails_jobHeader___childs__3nt6d\",\"jobDates\":\"JobDetails_jobDates__3-H3U\",\"job___IdStatus\":\"JobDetails_job___IdStatus__3QU36\",\"service\":\"JobDetails_service___jj1j\",\"jobDescription\":\"JobDetails_jobDescription__1BX7P\",\"jobDescription___title\":\"JobDetails_jobDescription___title__3bXow\",\"notes___title\":\"JobDetails_notes___title__1aXej\",\"jobDescription___text\":\"JobDetails_jobDescription___text__3lMOw\",\"notes___text\":\"JobDetails_notes___text__1uAcr\",\"notes\":\"JobDetails_notes__p1Pgc\",\"link\":\"JobDetails_link__mtmck\",\"locations\":\"JobDetails_locations__3QSqe\",\"location\":\"JobDetails_location__18tbi\",\"locationType\":\"JobDetails_locationType__2eZWB\",\"payBtns\":\"JobDetails_payBtns__3944Q\",\"payOnlineBtn\":\"JobDetails_payOnlineBtn__1aNzC\",\"payCashBtn\":\"JobDetails_payCashBtn__CqSzp\",\"buttons\":\"JobDetails_buttons__zkWym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"claimListHeaderContainer\":\"Claims_claimListHeaderContainer__8xxWH\",\"claimListHeader\":\"Claims_claimListHeader__2_uQ-\",\"listContainer\":\"Claims_listContainer__x0udl\",\"listContent\":\"Claims_listContent__3kQW1\",\"item\":\"Claims_item__VzsC4\",\"styleLink\":\"Claims_styleLink__1r9-7\",\"actions\":\"Claims_actions__3NRcw\",\"claimList\":\"Claims_claimList__2B5a3\",\"center\":\"Claims_center__1FxDS\",\"title\":\"Claims_title__1LwAo\",\"text\":\"Claims_text__yJSLz\",\"deleteBtn\":\"Claims_deleteBtn__1ch4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accountContainer\":\"Account_accountContainer__1O1mu\",\"form\":\"Account_form__2fYDJ\",\"header\":\"Account_header__trx4J\",\"profile\":\"Account_profile__26LrH\",\"content\":\"Account_content__31_v2\",\"profilePic\":\"Account_profilePic__o_IKq\",\"accountHolderName\":\"Account_accountHolderName__3TkOw\",\"accountHolderRole\":\"Account_accountHolderRole__fLjFy\",\"editButton\":\"Account_editButton__orYMY\",\"button\":\"Account_button__14Yp3\",\"btn\":\"Account_btn__3413G\",\"flex\":\"Account_flex__1oujm\",\"styleFormFields\":\"Account_styleFormFields__1JztL\",\"flexEnd\":\"Account_flexEnd__2v_qv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toprow\":\"UserList_toprow__aVKjX\",\"rowContent\":\"UserList_rowContent__252uk\",\"link\":\"UserList_link__36HwF\",\"btnStyle\":\"UserList_btnStyle__1mnPX\",\"btn\":\"UserList_btn__2UpiM\",\"filter\":\"UserList_filter__3_Bn1\",\"jumbotron\":\"UserList_jumbotron__39X4R\",\"listheader\":\"UserList_listheader__3DInI\",\"listContainer\":\"UserList_listContainer__3K6P3\",\"listContent\":\"UserList_listContent__31ixt\",\"styleLink\":\"UserList_styleLink__1uUAu\",\"item\":\"UserList_item__1_Xl8\",\"userList\":\"UserList_userList__2a59g\",\"flex\":\"UserList_flex__9gt7Z\",\"stylePagination\":\"UserList_stylePagination__15ZhD\",\"pagination\":\"UserList_pagination__4yjjt\",\"listTitle\":\"UserList_listTitle__34RLZ\",\"listDetail\":\"UserList_listDetail__3VTGP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"confirmJobModal\":\"JobConfirmation_confirmJobModal__1NCL-\",\"stepperLabels\":\"JobConfirmation_stepperLabels__3qfNo\",\"stepperContent\":\"JobConfirmation_stepperContent__eI5BC\",\"rowFlex\":\"JobConfirmation_rowFlex__pMcf1\",\"styleRadio\":\"JobConfirmation_styleRadio__3D6Vb\",\"styleFormFields\":\"JobConfirmation_styleFormFields__31VGG\",\"locationInput\":\"JobConfirmation_locationInput__3DlTy\",\"radioButtons\":\"JobConfirmation_radioButtons__8OkTM\",\"inputField\":\"JobConfirmation_inputField__loWwW\",\"checkBox\":\"JobConfirmation_checkBox__1L34O\",\"TrashIcon\":\"JobConfirmation_TrashIcon__3XLPS\",\"locationIcon\":\"JobConfirmation_locationIcon__hGosr\",\"centeredIcon\":\"JobConfirmation_centeredIcon__2Fxmf\",\"dateContainer\":\"JobConfirmation_dateContainer__2SaQ8\",\"flexDates\":\"JobConfirmation_flexDates__E8T1g\",\"dateHeader\":\"JobConfirmation_dateHeader__d-s9V\",\"timeHeader\":\"JobConfirmation_timeHeader__Svsuo\",\"dates\":\"JobConfirmation_dates__1x8RE\",\"addDateBtn\":\"JobConfirmation_addDateBtn__1s81u\",\"time\":\"JobConfirmation_time__obtx6\",\"currentYear\":\"JobConfirmation_currentYear__2fPSh\",\"flex\":\"JobConfirmation_flex__3IFtR\",\"locationBtn\":\"JobConfirmation_locationBtn__36kis\",\"button\":\"JobConfirmation_button__3gEPq\",\"skipSubmitBtn\":\"JobConfirmation_skipSubmitBtn__3Wd6o\",\"flexEnd\":\"JobConfirmation_flexEnd__134EO\",\"backAndSubmitBtn\":\"JobConfirmation_backAndSubmitBtn__20XdW\",\"back\":\"JobConfirmation_back__1jQrT\",\"backStyles\":\"JobConfirmation_backStyles__2dTnz\",\"next\":\"JobConfirmation_next__1gHUr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blanketHeader\":\"Blankets_blanketHeader__2sKHD\",\"listContainer\":\"Blankets_listContainer__1r3SJ\",\"listContent\":\"Blankets_listContent__1H95d\",\"listContentItems\":\"Blankets_listContentItems__3vdqP\",\"customerName\":\"Blankets_customerName__3unX0\",\"title\":\"Blankets_title__2VRrF\",\"text\":\"Blankets_text__1BJ9e\",\"customerJobId\":\"Blankets_customerJobId__30bHI\",\"quantity\":\"Blankets_quantity__JazKN\",\"cost\":\"Blankets_cost__3UeU9\",\"time\":\"Blankets_time__1VEnk\",\"depositBtn\":\"Blankets_depositBtn__3WHEM\",\"customerDepositBtn\":\"Blankets_customerDepositBtn__30vQk\",\"button\":\"Blankets_button__1SJxg\",\"flex\":\"Blankets_flex__1q8eU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyle\":\"CreateCustomer_formStyle__1uze5\",\"form\":\"CreateCustomer_form__DIAfk\",\"head\":\"CreateCustomer_head__1M5cp\",\"styleFormFields\":\"CreateCustomer_styleFormFields__3ag99\",\"styleAddBtn\":\"CreateCustomer_styleAddBtn__DayFO\",\"addBtn\":\"CreateCustomer_addBtn__XeWDy\",\"modalAddBtn\":\"CreateCustomer_modalAddBtn__3yo31\",\"modalBtn\":\"CreateCustomer_modalBtn__3piTP\",\"button\":\"CreateCustomer_button__1-mLH\",\"resetButtons\":\"CreateCustomer_resetButtons__KGXyr\",\"formResetButton\":\"CreateCustomer_formResetButton__1ODMu\",\"formSubmitButton\":\"CreateCustomer_formSubmitButton__3NkWz\",\"formButton\":\"CreateCustomer_formButton__1axKe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyle\":\"UpdateCustomer_formStyle__2lJiY\",\"form\":\"UpdateCustomer_form__gaMOS\",\"head\":\"UpdateCustomer_head__16n2l\",\"styleFormFields\":\"UpdateCustomer_styleFormFields__1oZyv\",\"updateBtn\":\"UpdateCustomer_updateBtn__yXPGS\",\"button\":\"UpdateCustomer_button__1rAo9\",\"alternateContactBtn\":\"UpdateCustomer_alternateContactBtn__1GX0x\",\"alternateContact\":\"UpdateCustomer_alternateContact__3ALxG\",\"btn\":\"UpdateCustomer_btn__1qYm9\",\"anotherContactBtn\":\"UpdateCustomer_anotherContactBtn__H0nq_\",\"anotherContact\":\"UpdateCustomer_anotherContact__22j8A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyle\":\"UpdateJob_formStyle__oeLQU\",\"form\":\"UpdateJob_form__3zPSs\",\"head\":\"UpdateJob_head__3CqDw\",\"centeredIcon\":\"UpdateJob_centeredIcon__3Bh2h\",\"alignRight\":\"UpdateJob_alignRight__2WKmf\",\"styleDate\":\"UpdateJob_styleDate__2f11K\",\"styleEditor\":\"UpdateJob_styleEditor__JA-sO\",\"addLocationBtn\":\"UpdateJob_addLocationBtn__1UMEk\",\"button\":\"UpdateJob_button__1FjKJ\",\"styleFormFields\":\"UpdateJob_styleFormFields__3k9VO\",\"styleTextArea\":\"UpdateJob_styleTextArea__2iXt3\",\"locationInput\":\"UpdateJob_locationInput__DIxMF\",\"radioButtons\":\"UpdateJob_radioButtons__2Akb5\",\"inputField\":\"UpdateJob_inputField__2t5CV\",\"checkBox\":\"UpdateJob_checkBox__CFkJu\",\"TrashIcon\":\"UpdateJob_TrashIcon__18Inx\",\"styleRadio\":\"UpdateJob_styleRadio__3FLUK\",\"propertyTypeRow\":\"UpdateJob_propertyTypeRow__3Puqu\",\"dateTimeInout\":\"UpdateJob_dateTimeInout__27SCr\",\"mainDate\":\"UpdateJob_mainDate__1m_o_\",\"movers\":\"UpdateJob_movers__2rMMs\",\"moversChild\":\"UpdateJob_moversChild__1ZyjJ\",\"rowFlex\":\"UpdateJob_rowFlex__2O7_9\",\"notesStyle\":\"UpdateJob_notesStyle__2U4Op\",\"notesBtn\":\"UpdateJob_notesBtn__QOfDz\",\"modal\":\"UpdateJob_modal__1lwi-\",\"modalButtons\":\"UpdateJob_modalButtons__ZQ4oA\"};","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nfunction PrivateRoute({ user, roles, component: Component, ...rest }) {\n  const isAuthenticated = (props) => {\n    let token = localStorage.getItem(\"athens-token\");\n    if (token) {\n      // return roles.includes(user.role)\n      return true;\n    }\n    return false;\n  };\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        console.log(props);\n        return isAuthenticated(props) ? (\n          user &&\n            (roles.includes(user.role) ? (\n              <Component {...props} />\n            ) : (\n              <Redirect to=\"/\" />\n            ))\n        ) : (\n          <Redirect to=\"/\" />\n        );\n      }}\n    />\n  );\n}\n\nvar mapStateToProps = (state) => ({\n  user: state.users.user,\n});\nexport default connect(mapStateToProps, null)(PrivateRoute);\n","import { START_LOADING, FINISH_LOADING, SHOW_MESSAGE, SCHEDULE_DATE } from \"./commonConstants\"\n\nexport const showLoader = () => (dispatch) => {\n    dispatch({\n        type: START_LOADING\n    })\n}\n\nexport const hideLoader = () => (dispatch) => {\n    dispatch({\n        type: FINISH_LOADING\n    })\n}\n\nexport const showMessage = (message) => async (dispatch) => {\n    setTimeout(() => {\n        dispatch({\n            type: SHOW_MESSAGE,\n            payload: {\n                message: ''\n            }\n        })\n    })\n    dispatch({\n        type: SHOW_MESSAGE,\n        payload: {\n            message\n        }\n    })\n}\n\nexport const changeDate = (date) => (dispatch) => {\n    dispatch({\n        type: SCHEDULE_DATE,\n        payload: date\n    })\n}","export const START_LOADING = \"START_LOADING\"\nexport const FINISH_LOADING = \"FINISH_LOADING\"\nexport const SHOW_MESSAGE = \"SHOW_MESSAGE\"\nexport const SCHEDULE_DATE = \"SCHEDULE_DATE\"\n\n","import { GET_USERS, LOGGEDIN_USER } from \"./userConstants\";\nimport Axios from \"axios\";\nimport { showMessage } from \"../Common/commonActions\";\n\nexport const login = (data, callback) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.post(\"user/login\", data);\n      if (response.data.status === 200) {\n        localStorage.setItem(\"athens-token\", response.data.token);\n        dispatch(showMessage(response.data.message));\n        dispatch({\n          type: LOGGEDIN_USER,\n          payload: response.data.data,\n        });\n        callback();\n      } else {\n        dispatch(showMessage(response.data.message));\n      }\n    } catch (error) {\n      \n    }\n  };\n};\n\nexport const sendCode = (data, callback) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.post(\"user/forgot-password\", data);\n      if (response.data.status === 200) {\n        callback(response);\n      }\n      dispatch(showMessage(response.data.message));\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const verifyCode = (data, callback) => {\n  return async (dispatch) => {\n    try {\n      const config = {\n        headers: { Authorization: data.token },\n      };\n\n      const response = await Axios.post(\"user/verify\", data, config);\n      if (response.data.status === 200) {\n        localStorage.setItem(\"athens-token\", response.data.token);\n        dispatch(showMessage(response.data.message));\n        dispatch({\n          type: LOGGEDIN_USER,\n          payload: response.data.data,\n        });\n        callback();\n      } else {\n        dispatch(showMessage(verifyCode.data.message));\n      }\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const getLoginUser = () => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.get(\"/user\", {\n        config: { handlerEnabled: true },\n      });\n      dispatch({\n        type: LOGGEDIN_USER,\n        payload: response.data.data,\n      });\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const resetPassword = (data, callback) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.put(\"user\", data, {\n        config: { handlerEnabled: true },\n      });\n      if (response.data.status === 200) {\n        dispatch(showMessage(response.data.message));\n        callback();\n      }\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n// get all users\nexport const getUsers = (data) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.post(\"user/all\", data, {\n        config: { handlerEnabled: true }\n      });\n      dispatch({\n        type: GET_USERS,\n        payload: response.data.data,\n      });\n    } catch (error) {\n      \n    }\n  };\n};\n//get single user\nexport const getUser = async (userId, callback) => {\n\n  try {\n    let response = await Axios.get(`user/${userId}`, {\n      config: { handlerEnabled: true }\n    })\n    if (response.data.status === 200) {\n      callback(response)\n    }\n\n  } catch (error) {\n  }\n}\n\n\nexport const updateUser = (data, userId, type, callback) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.put(`user/${userId}`, data, {\n        config: { handlerEnabled: true }\n      });\n      if (response.data.status === 200) {\n        callback();\n        //for accounts page\n        if (type === 'user') {\n          dispatch({\n            type: LOGGEDIN_USER,\n            payload: response.data.data,\n          });\n          dispatch(showMessage(response.data.message));\n\n        } \n        //(type === admin for other pages)\n        else {\n          dispatch(showMessage('User updated successfully'));\n        }\n      }\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const createUser = (data, callback) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.post(\"user\", data, {\n        config: { handlerEnabled: true }\n      });\n      if (response.data.status === 200) {\n        callback(response);\n      }\n      dispatch(showMessage(response.data.message));\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n","export const GET_USERS = \"GET_USERS\"\nexport const LOGGEDIN_USER = \"LOGGEDIN_USER\"\n\n\n","import React, { useEffect } from \"react\";\nimport style from \"./navbar.module.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { getLoginUser } from \"../../Redux/User/userActions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Navbar = (props) => {\n  let { getLoginUser } = props;\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"athens-token\");\n    if (token) {\n      getLoginUser();\n    }\n  }, [getLoginUser]);\n\n  let {\n    history: {\n      location: { pathname },\n    },\n  } = props;\n\n  const getNavLinkClass = (path) => {\n    return props.location.pathname === path ? \"nav-item active\" : \"nav-item\";\n  };\n  let logOut = () => {\n    localStorage.clear();\n    window.location.reload(false);\n  };\n  return (\n    <div>\n      {pathname !== \"/\" && (\n        <nav\n          className={`navbar navbar-expand-md navbar-light ${style.elevation} ${style.fixedNavBar} sticky-top sticky-top`}\n        >\n          <Link className={`navbar-brand ${style.logo}`} to=\"/\">\n            <img src=\"/images/movers-logo.jpg\" className = {style.logoIcon} alt=\"Logo\"></img>\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            {props.user ? (\n              <ul className=\"navbar-nav ml-auto\">\n                {props.user.role !== \"mover\" ? (\n                  <React.Fragment>\n                    <li className={getNavLinkClass(\"/customers\")}>\n                      <Link className={`nav-link`} to=\"/customers\">\n                        Customers\n                      </Link>\n                    </li>\n                    <li className={getNavLinkClass(\"/jobs\")}>\n                      <Link className=\"nav-link\" to=\"/jobs\">\n                        Jobs\n                      </Link>\n                    </li>\n                    <li className={getNavLinkClass(\"/calendar\")}>\n                      <Link className=\"nav-link\" to=\"/calendar\">\n                        Calendar\n                      </Link>\n                    </li>\n                    <li className={getNavLinkClass(\"/schedule\")}>\n                      <Link className=\"nav-link\" to=\"/schedule\">\n                        Schedule\n                      </Link>\n                    </li>\n                    {props.user.role !== \"manager\" ? (\n                      <li className={getNavLinkClass(\"/users\")}>\n                        <Link className=\"nav-link\" to=\"/users\">\n                          Users\n                        </Link>\n                      </li>\n                    ) : null}\n                    <li className={getNavLinkClass(\"/account\")}>\n                      <Link className=\"nav-link\" to=\"/account\">\n                        Account\n                      </Link>\n                    </li>\n                    <li className={getNavLinkClass(\"/claims\")}>\n                      <Link className=\"nav-link\" to=\"/claims\">\n                        Claims\n                      </Link>\n                    </li>\n                    <li className={getNavLinkClass(\"/deposits\")}>\n                      <Link className=\"nav-link\" to=\"/deposits\">\n                        Blankets\n                      </Link>\n                    </li>\n                    <li className={style.logoutBtn}>\n                      <Button className={style.button} onClick={logOut}>\n                        Log Out\n                      </Button>\n                    </li>\n                  </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                      <li className={getNavLinkClass(\"/mover\")}>\n                        <Link className=\"nav-link\" to=\"/mover\">\n                          Jobs\n                      </Link>\n                      </li>\n                      <li className={getNavLinkClass(\"/mover/calendar\")}>\n                        <Link className=\"nav-link\" to=\"/mover/calendar\">\n                          Calendar\n                      </Link>\n                      </li>\n                      <li className={style.logoutBtn}>\n                        <Button className={style.button} onClick={logOut}>\n                          Log Out\n                      </Button>\n                      </li>\n                    </React.Fragment>\n                  )}\n              </ul>\n            ) : (\n                <ul className=\"navbar-nav ml-auto\">\n                  <React.Fragment>\n                    <li className={getNavLinkClass(\"/\")}>\n                      <Link className={`nav-link`} to=\"/\">\n                        Sign In\n                    </Link>\n                    </li>\n                  </React.Fragment>\n                </ul>\n              )}\n          </div>\n        </nav>\n      )}\n    </div>\n  );\n};\n\nconst action = {\n  getLoginUser,\n};\n\nvar mapStateToProps = (state) => ({\n  user: state.users.user,\n});\n\nexport default compose(withRouter, connect(mapStateToProps, action))(Navbar);\n","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <div className=\"text-center\">\n          <img src=\"/images/swr.png\" alt=\"\" />\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport style from \"./SignIn.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../Redux/User/userActions\";\nimport { Button, TextField } from \"@material-ui/core\";\n\nclass SignIn extends React.Component {\n  initialState = {\n    email: \"\",\n    password: \"\",\n    emailError: \"\",\n    passwordError: \"\",\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem(\"athens-token\");\n    if (token) {\n      if (this.props.user) {\n        this.props.user.role === \"mover\"\n          ? this.props.history.push(\"/mover\")\n          : this.props.history.push(\"/customers\");\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.user) {\n      this.props.user.role === \"mover\"\n        ? this.props.history.push(\"/mover\")\n        : this.props.history.push(\"/customers\");\n    }\n  }\n\n  validate = () => {\n    let emailError = \"\";\n    let passwordError = \"\";\n\n    let mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    if (!this.state.email.match(mailformat)) {\n      emailError = \"Invalid Email\";\n    }\n\n    if (this.state.password === \"\") {\n      passwordError = \"Password should not be empty\";\n    }\n\n    if (emailError || passwordError) {\n      this.setState({ emailError, passwordError });\n      return false;\n    }\n\n    return true;\n  };\n\n  formSubmit = (e) => {\n    e.preventDefault();\n\n    const isValid = this.validate();\n    let { login } = this.props;\n    if (isValid) {\n      let obj = {\n        email: this.state.email,\n        password: this.state.password,\n      };\n      login(obj, () => {\n        if (this.props.user) {\n          this.props.user.role === \"mover\"\n            ? this.props.history.push(\"/mover\")\n            : this.props.history.push(\"/customers\");\n        }\n      });\n    }\n  };\n\n  handleFormInput = (event) => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n    if (!value) {\n      this.setState({ [name + \"Error\"]: name + \" is required\" });\n    } else {\n      this.setState({ [name + \"Error\"]: \"\" });\n    }\n  };\n\n  render() {\n    return (\n      <div className={style.signInContainer}>\n        <div className={style.image}></div>\n        <div className={style.form}>\n          <div className={`${style.signIn} `}>\n            <div className={`${style.head} ${style.flex}`}>\n              <h3>Sign In</h3>\n            </div>\n\n            <form onSubmit={this.formSubmit}>\n              <div className={`${style.email} ${style.flex}`}>\n                <TextField\n                  variant=\"outlined\"\n                  size=\"small\"\n                  id=\"email\"\n                  className={style.textFields}\n                  label=\"Email Address\"\n                  name=\"email\"\n                  value={this.state.email}\n                  onChange={this.handleFormInput}\n                  error={this.state.emailError ? true : false}\n                />\n              </div>\n              <div className={`${style.password} ${style.flex}`}>\n                <TextField\n                  variant=\"outlined\"\n                  size=\"small\"\n                  id=\"password\"\n                  label=\"Password\"\n                  name=\"password\"\n                  className={style.textFields}\n                  value={this.state.password}\n                  onChange={this.handleFormInput}\n                  error={this.state.passwordError ? true : false}\n                  type=\"password\"\n                />\n              </div>\n              <Link to=\"/email-verification\">\n                <div className={`${style.forgetPs} ${style.flex}`}>\n                  Forgot Password?\n                </div>\n              </Link>\n              <div className={`${style.signinBtn} ${style.flex}`}>\n                <Button className={style.button} type=\"submit\">\n                  Sign In\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nvar actions = {\n  login,\n};\n\nvar mapStateToProps = (state) => ({\n  user: state.users.user,\n});\n\nexport default connect(mapStateToProps, actions)(SignIn);\n","import { Button, TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport style from \"./EmailVerification.module.css\";\nimport { sendCode } from \"../../../Redux/User/userActions\";\nimport { connect } from \"react-redux\";\n\nconst EmailVerification = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const handleFormInput = (e) => {\n    let { value } = e.target;\n    setEmail(value);\n  };\n\n  const navigateToCode = () => {\n    let { history, sendCode } = props;\n    if (email !== \"\") {\n      let emailObj = {\n        email: email,\n      };\n\n      sendCode(emailObj, (res) => {\n        sessionStorage.setItem(\"token\", res.data.token);\n        history.push(\"/verifycode\");\n      });\n    } else {\n      setEmailError(\"Email should not be empty\");\n    }\n  };\n  return (\n    <div className={`${style.verificationContainer} `}>\n      <div className={`${style.verificationContainerContent} ${style.flex}`}>\n        <div>\n          <h4>Enter your email address</h4>\n        </div>\n\n        <div>\n          <form>\n            <TextField\n              variant=\"outlined\"\n              required\n              className={style.emailField}\n              size=\"small\"\n              id=\"email\"\n              label=\"Enter Email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => handleFormInput(e)}\n              error={emailError ? true : false}\n            />\n          </form>\n        </div>\n\n        <div className={style.sendCodeBtn}>\n          <Button onClick={navigateToCode} className={style.button}>\n            Send Verification Code\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\nvar actions = {\n  sendCode\n};\nexport default connect(null, actions)(EmailVerification);\n","import React, { useEffect, useState } from \"react\";\nimport style from \"./CodeVerification.module.css\";\nimport ReactInputVerificationCode from \"react-input-verification-code\";\nimport { Button } from \"@material-ui/core\";\nimport { verifyCode } from \"../../../Redux/User/userActions\";\nimport { connect } from \"react-redux\";\n\nconst CodeVerification = (props) => {\n  const [code, setCode] = useState(\"\");\n\n  const [verificationCode, setVerificationCode] = useState(\"\");\n  const [userToken, setUserToken] = useState(\"\");\n  let { history } = props;\n\n  useEffect(() => {\n    let getToken = sessionStorage.getItem(\"token\");\n    setUserToken(getToken);\n    if (getToken) {\n      //remove email from sessionStorage\n      sessionStorage.removeItem(\"token\");\n    } else {\n      history.push(\"/email-verification\");\n    }\n  }, [history]);\n\n  const navigateResetPassword = () => {\n    let { verifyCode } = props;\n    if (verificationCode !== \"\") {\n      // history.push(\"/verifyCode\")\n    } else {\n      let verifyCodeObj = {\n        code: code,\n        token: userToken,\n      };\n      verifyCode(verifyCodeObj, () => history.push(\"/rest-password\"));\n    }\n  };\n\n  const handleVerificationCode = (e) => {\n    let codeInString = e.toString();\n    setCode(e);\n    if (codeInString.length !== 4) {\n      setVerificationCode(\"You must enter correct verification code\");\n    } else {\n      setVerificationCode(\"\");\n    }\n  };\n\n  return (\n    <div className={style.verificationCode}>\n      <div className={`${style.customStyles} ${style.flex}`}>\n        <div>\n          <h4>Enter Verification Code</h4>\n        </div>\n        <div className={style.verificationCodeInput}>\n          <ReactInputVerificationCode\n            placeholder=\"\"\n            onChange={(e) => handleVerificationCode(e)}\n          />\n        </div>\n        <div className={style.submitCodeBtn}>\n          <Button className={style.button} onClick={navigateResetPassword}>\n            Submit\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\nvar actions = {\n  verifyCode,\n};\nexport default connect(null, actions)(CodeVerification);\n","import { Button, TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\"\nimport { resetPassword } from \"../../../Redux/User/userActions\";\nimport style from \"./ResetPassword.module.css\";\n\nconst ResetPassword = (props) => {\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [cpasswordError, setcPasswordError] = useState(\"\");\n  const [resetForm, setResetForm] = useState({\n    password: \"\",\n    cpassword: \"\",\n  });\n  let userToken = localStorage.getItem(\"athens-token\");\n  \n  if (!userToken) {\n    let { history } = props;\n    history.push(\"/\");\n  }\n\n  const handleFormInput = (e) => {\n    let { name, value } = e.target;\n    setResetForm({\n      ...resetForm,\n      [name]: value,\n    });\n  };\n\n  const navigateToCustomer = () => {\n    let { history, resetPassword, user } = props;\n    if (password !== \"\") {\n      setPasswordError(\"\");\n\n      if (password !== cpassword) {\n        setcPasswordError(\"Passwords do not match\");\n      } else {\n        setPasswordError(\"\");\n        let passwordObj = {\n          password: password,\n          token: userToken,\n        };\n        resetPassword(passwordObj, () => {\n          if (user.role === \"mover\") {\n            history.push(\"/mover\");\n          } else {\n            history.push(\"/customers\");\n          }\n        });\n      }\n    } else {\n      setPasswordError(\"Password should not be empty\");\n    }\n  };\n  let { password, cpassword } = resetForm;\n  return (\n    <div className={style.resetContainer}>\n      <div className={`${style.passwordReset} ${style.flex}`}>\n        <div>\n          <h4>Enter New Password</h4>\n        </div>\n\n        <div>\n          <form>\n            <div>\n              <TextField\n                variant=\"outlined\"\n                required\n                type=\"password\"\n                className={style.passwordField}\n                size=\"small\"\n                id=\"password\"\n                label=\"Enter New Password\"\n                name=\"password\"\n                value={password}\n                onChange={(e) => handleFormInput(e)}\n                error={passwordError ? true : false}\n              />\n            </div>\n            <div>\n              <TextField\n                variant=\"outlined\"\n                required\n                type=\"password\"\n                className={style.passwordField}\n                size=\"small\"\n                id=\"cpassword\"\n                label=\"Confirm Password\"\n                name=\"cpassword\"\n                value={cpassword}\n                onChange={(e) => handleFormInput(e)}\n                error={cpasswordError ? true : false}\n              />\n            </div>\n          </form>\n        </div>\n\n        <div className={style.resetPasswordBtn}>\n          <Button className={style.button} onClick={navigateToCustomer}>\n            Reset Password\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\nvar actions = {\n  resetPassword\n};\nvar mapStateToProps = (state) => ({\n  user: state.users.user\n});\nexport default connect(mapStateToProps, actions)(ResetPassword);\n","import { GET_CUSTOMERS, GET_CUSTOMER, DELETE_CUSTOMER } from \"./customerConstants\";\nimport Axios from \"axios\";\nimport { showMessage } from \"../../Redux/Common/commonActions\";\n\nexport const getAllCustomers = (customersObj) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.post(\n        \"customer/all\",\n        customersObj, {\n        config: { handlerEnabled: true }\n      }\n      );\n\n      //update app's state\n      dispatch({\n        type: GET_CUSTOMERS,\n        payload: response.data.data,\n\n      });\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const getCustomer = (customerId) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.get(`customer/details/${customerId}`, {\n        config: { handlerEnabled: true }\n      });\n      dispatch({\n        type: GET_CUSTOMER,\n        payload: response.data.data,\n\n      });\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const addCustomer = (customerObj, callback) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.post(\n        \"customer\",\n        customerObj, {\n        config: { handlerEnabled: true }\n      }\n      );\n      if (response.data.status === 200) {\n        callback(response);\n      }\n      dispatch(showMessage(response.data.message));\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const updateCustomer = (updateCustomerObj, id, callback) => {\n  let body = {\n    firstName: updateCustomerObj.firstName,\n    lastName: updateCustomerObj.lastName,\n    email: updateCustomerObj.email,\n    phone: updateCustomerObj.phone,\n    subContacts: updateCustomerObj.subContacts,\n  };\n  return async (dispatch) => {\n    try {\n      let response = await Axios.put(\n        \"customer/\" + id,\n        body, {\n        config: { handlerEnabled: true }\n      }\n      );\n      if (response.data.status === 200) {\n        callback();\n      }\n      dispatch(showMessage(response.data.message));\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const deleteCustomer = (id, currentPage) => {\n\n  return async (dispatch) => {\n    try {\n      let body = {\n        page: currentPage,\n        id\n      }\n      let response = await Axios.delete(`customer`, {\n        params: body,\n        config: {\n          handlerEnabled: true\n        }\n      })\n      if (response.data.status === 200) {\n        dispatch({\n          type: DELETE_CUSTOMER,\n          payload: response.data.data\n\n        })\n      }\n      dispatch(showMessage(response.data.message))\n    }\n    catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  }\n}","export const GET_CUSTOMERS = \"GET_CUSTOMERS\"\nexport const GET_CUSTOMER = \"GET_CUSTOMER\"\n\nexport const UPDATE_JOB = \"UPDATE_JOB\"\nexport const DELETE_CUSTOMER = \"DELETE_CUSTOMER\"","import { GET_JOBS, GET_JOB, DELETE_JOB } from \"./jobConstants\";\nimport Axios from \"axios\";\nimport { showMessage } from \"../../Redux/Common/commonActions\";\n\nexport const getAllJobs = (jobObj) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.post(\"job/all\", jobObj, {\n        config: { handlerEnabled: true }\n      });\n      dispatch({\n        type: GET_JOBS,\n        payload: response.data.data,\n      });\n    } catch (error) {\n      \n    }\n  };\n};\n\nexport const getJob = (jobId) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.get(`job/${jobId}`, {\n        config: { handlerEnabled: true }\n      });\n      dispatch({\n        type: GET_JOB,\n        payload: response.data.data,\n      });\n    } catch (error) {\n      \n    }\n  };\n};\n\nexport const createJob = (newJobObj, callback) => {\n  return async (dispatch) => {\n    try {\n      let newJob = await Axios.post(\"job\", newJobObj, {\n        config: { handlerEnabled: true }\n      });\n      if (newJob.data.status === 200) {\n        callback(newJob);\n        dispatch(showMessage(newJob.data.message));\n      } else {\n        dispatch(showMessage(newJob.data.message));\n      }\n    } catch (error) {\n      \n    }\n  };\n};\n\nexport const updateJob = (jobId, jobObj, callback) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.put(`job/${jobId}`, jobObj, {\n        config: { handlerEnabled: true }\n      });\n      if (response.data.status === 200) {\n        callback(response);\n      }\n      dispatch(showMessage(response.data.message));\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const getAllJobsOnDate = async (date) => {\n  try {\n    let data = {\n      date: date.toString(),\n    };\n    let currentDayJobs = await Axios.post(\"schedule/current-jobs\", data, {\n      config: { handlerEnabled: true }\n    });\n\n    return currentDayJobs;\n  } catch (error) {\n    \n  }\n};\n\nexport const getJobsByDate = (body, callback) => {\n  return async (dispatch) => {\n    try {\n      let jobs = await Axios.post(\"job/monthly-jobs\", body, {\n        config: { handlerEnabled: true }\n      });\n      callback(jobs);\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const filterJobsByDate = (date) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.post(\"job/filter\", date, {\n        config: { handlerEnabled: true }\n      });\n      dispatch({\n        type: GET_JOBS,\n        payload: response.data.data,\n      });\n    } catch (error) {\n      \n    }\n  };\n};\n\nexport const confirmJob = (obj) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.post(`job/book`, obj, {\n        config: { handlerEnabled: true }\n      });\n      if (response.data.status === 200) {\n        dispatch(showMessage(response.data.message));\n\n        dispatch({\n          type: GET_JOB,\n          payload: response.data.data,\n        });\n      }\n    } catch (error) {\n      \n    }\n  };\n};\n\nexport const deleteJob = (id, currentPage) => {\n  return async (dispatch) => {\n    try {\n      let body = {\n        page: currentPage,\n        id,\n      };\n      let response = await Axios.delete(`job`, {\n        params: body,\n        config: {\n          handlerEnabled: true\n        }\n      });\n      if (response.data.status === 200) {\n        dispatch(showMessage(response.data.message));\n        dispatch({\n          type: DELETE_JOB,\n          payload: response.data.data,\n        });\n      }\n    } catch (error) {\n      \n    }\n  };\n};\n\n//fetch calendar currentDay Jobs\nexport const getCurrentDayJob = async (jobId) => {\n  try {\n    let getJob = await Axios.get(`job/${jobId}`, {\n      config: { handlerEnabled: true }\n    });\n    return getJob;\n  } catch (error) {\n    \n  }\n};\n","export const GET_JOBS = \"GET_JOBS\"\nexport const GET_JOB = \"GET_JOB\"\nexport const FILTER_JOB = \"FILTER_JOB\"\nexport const DELETE_JOB = \"DELETE_JOB\"","import {\n  GET_MOVER,\n  GET_MOVER_JOB_DETAIL,\n  GET_UPDATED_JOB_LIST,\n  SEARCH_FILTER,\n} from \"./moverConstants\";\nimport Axios from \"axios\";\nimport { showMessage } from \"../Common/commonActions\";\nimport { LOGGEDIN_USER } from \"../User/userConstants\";\n\nexport const getMover = (moversObj) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.post(`mover/jobs`, moversObj, {\n        config: { handlerEnabled: true },\n      });\n      dispatch({\n        type: GET_MOVER,\n        payload: response.data.data.docs,\n      });\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const updateJob = (jobId, status, callback) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.put(`job/status/${jobId}`, status, {\n        config: { handlerEnabled: true }\n      });\n      if (response.data.status === 200) {\n       dispatch({\n         type:GET_UPDATED_JOB_LIST,\n         payload: response.data.data\n       })\n      }\n      dispatch(showMessage(response.data.message));\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const holidayCalendar = (obj, callback) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.post(`schedule`, obj, {\n        config: { handlerEnabled: true },\n      });\n      if (response.data.status === 200) {\n        callback(response);\n      }\n      dispatch(showMessage(response.data.message));\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const setAvailability = (obj, _id) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.put(`mover/${_id}`, obj, {\n        config: { handlerEnabled: true }\n      });\n      dispatch({\n        type: LOGGEDIN_USER,\n        payload: response.data.data,\n      });\n      dispatch(showMessage(response.data.message));\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const payAmount = (obj, callback) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.post(`job/payment`, obj, {\n        config: { handlerEnabled: true }\n      });\n      if (response.data.status === 200) {\n        callback();\n      }\n      dispatch(showMessage(response.data.message));\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const getMoverJobDetail = (jobId) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.get(`job/${jobId}`, {\n        config: { handlerEnabled: true }\n      });\n      dispatch({\n        type: GET_MOVER_JOB_DETAIL,\n        payload: response.data.data,\n      });\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const moverSearchFilter = (searchObj) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.post(`mover/search`, searchObj, {\n        config: { handlerEnabled: true },\n      });\n      dispatch({\n        type: SEARCH_FILTER,\n        payload: response.data.data,\n      });\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n","export const GET_MOVER = \"GET_MOVER\";\nexport const SEARCH_FILTER = \"SEARCH_FILTER\";\nexport const GET_MOVER_JOB_DETAIL = \"GET_MOVER_JOB_DETAIL\";\nexport const GET_UPDATED_JOB_LIST = \"GET_UPDATED_JOB_LIST\"\n\n","import { GET_CLAIMS, GET_CLAIM, DELETE_CLAIM } from \"./claimConstants\";\nimport Axios from \"axios\";\nimport { showMessage } from \"../Common/commonActions\";\n\nexport const getAllClaims = (data) => {\n  let body = {\n    page: data.page,\n    query: data.query\n  };\n  return async (dispatch) => {\n    try {\n      let response = await Axios.post(\"claim/\" + data.status,\n        body, {\n        config: { handlerEnabled: true }\n      });\n      //update app's state\n      dispatch({\n        type: GET_CLAIMS,\n        payload: response.data.data\n\n      });\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\n\nexport const addClaim = (data, callback) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.post(`claim`, data, {\n        config: { handlerEnabled: true }\n      });\n      if (response.data.status === 200) {\n        callback(response)\n      }\n      dispatch(showMessage(response.data.message));\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  }\n};\n\nexport const updateClaim = (data, callback) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.put(`claim/${data._id}`, data, {\n        config: { handlerEnabled: true }\n      });\n      if (response.data.status === 200) {\n        dispatch({\n          type: GET_CLAIM,\n          payload: response.data.data\n\n        })\n        callback(response)\n      }\n      dispatch(showMessage(response.data.message));\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  }\n};\n\nexport const getCustomersAndJobs = (callback) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.get(`customer/jobs`, {\n        config: { handlerEnabled: true }\n      });\n      if (response.data.status === 200) {\n        callback(response)\n      }\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  }\n};\n\nexport const getClaim = (id) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.get(`claim`, {\n        config: { handlerEnabled: true },\n        params: {\n          id\n        }\n      })\n      dispatch({\n        type: GET_CLAIM,\n        payload: response.data.data\n\n      })\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  }\n}\n\nexport const deleteClaim = (id, currentPage) => {\n\n  return async (dispatch) => {\n    try {\n      let body = {\n        page: currentPage,\n        id\n      }\n      let response = await Axios.delete(`claim`, {\n        params: body,\n        config: {\n          handlerEnabled: true\n        }\n      })\n      if (response.data.status === 200) {\n        dispatch(showMessage(response.data.message))\n        dispatch({\n          type: DELETE_CLAIM,\n          payload: response.data.data\n\n        })\n      }\n\n    }\n    catch (error) {\n    }\n  }\n\n}","export const GET_CLAIMS = \"GET_CLAIMS\"\nexport const GET_CLAIM = \"GET_CLAIM\"\nexport const GET_CLAIMS_BY_ID = \"GET_CLAIMS_BY_ID\"\nexport const DELETE_CLAIM = \"DELETE_CLAIM\"","import Axios from \"axios\";\nimport { showMessage } from \"../Common/commonActions\";\nimport { EDIT_DEPOSIT, GET_ALL_DEPOSITS, GET_DEPOSIT } from \"./DepositConstants\";\n\nexport const getDeposits = (body) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.post(`deposit/all`, body, {\n        config: { handlerEnabled: true },\n      });\n      dispatch({\n        type: GET_ALL_DEPOSITS,\n        payload: response.data.data,\n      });\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const getDeposit = (id) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.get(`deposit/${id}`, {\n        config: { handlerEnabled: true },\n      });\n      dispatch({\n        type: GET_DEPOSIT,\n        payload: response.data.data,\n      });\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const addDeposit = (data, callback) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.post(`deposit`, data, {\n        config: { handlerEnabled: true },\n      });\n      if (response.data.status === 200) {\n        callback();\n      }\n      dispatch(showMessage(response.data.message));\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const deleteBlanketDeposit = (id, currentPage) => {\n  return async (dispatch) => {\n    try {\n      let body = {\n        page: currentPage,\n        id,\n      };\n      let response = await Axios.delete(`deposit`, {\n        params: body,\n        config: {\n          handlerEnabled: true,\n        },\n      });\n      dispatch({\n        type: GET_ALL_DEPOSITS,\n        payload: response.data.data,\n      });\n      dispatch(showMessage(response.data.message));\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const updateDeposit = (data) => {\n  return async (dispatch) => {\n    try {\n      let response = await Axios.put(`deposit`, data, {\n        config: { handlerEnabled: true }\n      });\n      dispatch(showMessage(response.data.message));\n      dispatch({\n        type: GET_DEPOSIT,\n        payload: response.data.data,\n      });\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\n","export const GET_ALL_DEPOSITS = \"GET_ALL_DEPOSITS\";\nexport const GET_DEPOSIT = \"GET_DEPOSIT\";\nexport const EDIT_DEPOSIT = \"EDIT_DEPOSIT\";\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllCustomers } from \"../../Redux/Customer/customerActions\";\nimport { getAllJobs } from \"../../Redux/Job/jobActions\";\nimport { getUsers } from \"../../Redux/User/userActions\";\nimport { moverSearchFilter } from \"../../Redux/Mover/moverActions\";\nimport { getAllClaims } from \"../../Redux/Claim/claimActions\";\nimport { getDeposits } from \"../../Redux/Deposit/DepositActions\";\n\nconst SearchBar = (props) => {\n  let {\n    getAllCustomers,\n    getAllJobs,\n    getUsers,\n    moverSearchFilter,\n    getAllClaims,\n    getDeposits\n  } = props;\n\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  function handleSearch(e) {\n    let fetchCustomersObj;\n    let usersObj;\n    let fetchJobsOnPageChange;\n    if (props.type === \"customer\") {\n      if (searchValue === \"\" || searchValue) {\n        fetchCustomersObj = {\n          query: e.target.value,\n          sort: {\n            plainname: null,\n            createdAt: null,\n            updatedAt: null,\n          },\n        };\n        getAllCustomers(fetchCustomersObj);\n      } else {\n        fetchCustomersObj = {\n          query: \"\",\n          sort: {\n            plainname: null,\n            createdAt: -1,\n            updatedAt: null,\n          },\n        };\n        getAllCustomers(fetchCustomersObj);\n      }\n    } else if (props.type === \"user\") {\n      if (searchValue === \"\" || searchValue) {\n        usersObj = {\n          query: e.target.value,\n          filter: {\n            type: \"\",\n          },\n        };\n        getUsers(usersObj);\n      } else {\n        usersObj = {\n          query: \"\",\n          filter: {\n            type: \"\",\n          },\n        };\n        getUsers(usersObj);\n      }\n    } else if (props.type === \"claims\") {\n      if (searchValue === \"\" || searchValue) {\n        usersObj = {\n          query: e.target.value,\n          status: props.claimStatus,\n          page: 1,\n        };\n        getAllClaims(usersObj);\n      } else {\n        usersObj = {\n          query: \"\",\n          status: props.claimStatus,\n          page: 1,\n        };\n        getAllClaims(usersObj);\n      }\n    } \n    else if (props.type === \"mover\") {\n      if (searchValue === \"\" || searchValue) {\n        fetchJobsOnPageChange = {\n          query: e.target.value,\n\n          page: 1,\n        };\n      } else {\n        fetchJobsOnPageChange = {\n          query: \"\",\n          page: 1,\n        };\n      }\n      moverSearchFilter(fetchJobsOnPageChange);\n    }\n\n    else if (props.type === \"deposit\") {\n      if (searchValue === \"\" || searchValue) {\n        fetchJobsOnPageChange = {\n          query: e.target.value,\n\n          page: 1,\n        };\n      } else {\n        fetchJobsOnPageChange = {\n          query: \"\",\n          page: 1,\n        };\n      }\n      getDeposits(fetchJobsOnPageChange);\n    }\n\n     else {\n      if (searchValue === \"\" || searchValue) {\n        fetchJobsOnPageChange = {\n          query: e.target.value,\n          filters: {\n            startDate: \"\",\n            endDate: \"\",\n            movedDate: \"\",\n            tag: \"\",\n            startYearMonth: \"\",\n          },\n          sort: {\n            createdAt: -1,\n          },\n          page: 1,\n        };\n      } else {\n        fetchJobsOnPageChange = {\n          query: \"\",\n          filters: {\n            startDate: \"\",\n            endDate: \"\",\n            movedDate: \"\",\n            tag: \"\",\n            startYearMonth: \"\",\n          },\n          sort: {\n            createdAt: -1,\n          },\n          page: 1,\n        };\n      }\n      getAllJobs(fetchJobsOnPageChange);\n    }\n  }\n\n  const handleKeyPress = (e) => {\n    e.preventDefault();\n    if (e.which === 13) {\n      handleSearch(e);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"input-group\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search\"\n          onChange={(e) => {\n            setSearchValue(e.target.value);\n            handleSearch(e);\n          }}\n          onKeyUp={(e) => handleKeyPress(e)}\n        />\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-secondary\"\n            type=\"button\"\n          >\n            <i className=\"fa fa-search\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nvar mapStateToProps = (state) => ({\n  customers: state.customers,\n  jobs: state.jobs,\n  users: state.users,\n});\n\nvar actions = {\n  getAllCustomers,\n  getAllJobs,\n  getUsers,\n  moverSearchFilter,\n  getAllClaims,\n  getDeposits\n};\nexport default connect(mapStateToProps, actions)(SearchBar);\n","import React from \"react\";\nimport _ from \"lodash\";\n\nimport \"./Pagination.css\";\n\nconst Pagination = (props) => {\n  const { itemCount, pageSize, currentPage, onPageChange } = props;\n  const pageCount = Math.ceil(itemCount / pageSize);\n  if (pageCount < 2 || isNaN(pageCount)) {\n    return null;\n  }\n  const pages = _.range(1, pageCount + 1);\n  //generate array with thesse numbers\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={page === currentPage ? `page-item active` : \"page-item\"}\n          >\n            <p\n              className=\"page-link\"\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import { Modal } from \"react-bootstrap\";\nimport React from \"react\";\nimport style from \"./DeleteConfirmation.module.css\";\nimport { Button } from \"@material-ui/core\";\n\nconst DeleteConfirmation = ({ show, handleClose, type, deleteItem }) => {\n \n  return (\n    <div>\n      <Modal show={show} onHide={handleClose} centered scrollable>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirmation</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>{`Are you sure you want to delete ${type}`}?</Modal.Body>\n        <Modal.Footer>\n          <div className={style.modalButtons}>\n            <Button className={style.button} onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button className={style.button} onClick={() => deleteItem()}>\n              Confirm\n            </Button>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default DeleteConfirmation;\n","import { faArrowCircleLeft, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React from 'react'\nimport style from \"./BackButton.module.css\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst BackButton = () => {\n    let history = useHistory();\n    return (\n        <div className={style.backButtonMain}>\n            <div className={style.backButton}>\n                <FontAwesomeIcon icon={faArrowCircleLeft} onClick={()=> history.goBack()} />\n            </div>\n        </div>\n    )\n}\n\nexport default BackButton\n","import React, { useEffect } from \"react\";\nimport style from \"./CustomerList.module.css\";\nimport SearchBar from \"../../../components/SearchBar/SearchBar\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  deleteCustomer,\n  getAllCustomers,\n} from \"../../../Redux/Customer/customerActions\";\nimport { useState } from \"react\";\nimport Pagination from \"../../../components/Pagination/Pagination\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { Chip, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\nimport DeleteConfirmation from \"../../../components/DeleteConfirmation/DeleteConfirmation\";\nimport BackButton from \"../../../components/BackButton/BackButton\";\n\nconst CustomerList = (props) => {\n  //defining variables\n  let { getAllCustomers, customers } = props;\n  let totalCount = 0;\n  if (customers) {\n    var { docs } = customers;\n    totalCount = customers.total;\n  }\n  //defining state variables\n  const [order, setOrder] = useState(-1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recentlyUpdated, setRecentlyUpdated] = useState(false);\n  const [recentlyAdded, setRecentlyAdded] = useState(false);\n  const [sortByName, setSortByName] = useState(false);\n  const [show, setShow] = useState(false);\n  const [customerToDelete, setCustomerToDelete] = useState(\"\");\n  const [value, setValue] = useState(\"recently added\");\n\n  //fetch customerList on ComponentDidMount\n  useEffect(() => {\n    let fetchCustomersObj = {\n      query: \"\",\n      sort: {\n        plainName: \"\",\n        createdAt: -1,\n        updatedAt: null,\n      },\n      page: 1,\n    };\n\n    getAllCustomers(fetchCustomersObj);\n  }, [getAllCustomers]);\n\n  //fetch/get customers when the page is changed\n  const handlePageChange = (page) => {\n    let fetchCustomersOnPageChange;\n    if (recentlyUpdated === true) {\n      fetchCustomersOnPageChange = {\n        query: \"\",\n        sort: {\n          plainName: \"\",\n          createdAt: null,\n          updatedAt: -1,\n        },\n        page: page,\n      };\n      setCurrentPage(page);\n    } else if (recentlyAdded === true) {\n      fetchCustomersOnPageChange = {\n        query: \"\",\n        sort: {\n          plainName: \"\",\n          createdAt: -1,\n          updatedAt: null,\n        },\n        page: page,\n      };\n      setCurrentPage(page);\n    } else if (sortByName === true) {\n      if (order === 1) {\n        fetchCustomersOnPageChange = {\n          query: \"\",\n          sort: {\n            plainName: 1,\n            createdAt: null,\n            updatedAt: null,\n          },\n          page: page,\n        };\n        setCurrentPage(page);\n      } else if (order === -1) {\n        fetchCustomersOnPageChange = {\n          query: \"\",\n          sort: {\n            plainName: -1,\n            createdAt: null,\n            updatedAt: null,\n          },\n          page: page,\n        };\n        setCurrentPage(page);\n      }\n    } else {\n      //sort by recently added by default\n      fetchCustomersOnPageChange = {\n        query: \"\",\n        sort: {\n          plainName: \"\",\n          createdAt: -1,\n          updatedAt: null,\n        },\n        page: page,\n      };\n      setCurrentPage(page);\n    }\n    getAllCustomers(fetchCustomersOnPageChange);\n  };\n\n  const removeCustomer = () => {\n    //remove customer from the list and database too\n    let { deleteCustomer } = props;\n    deleteCustomer(customerToDelete, currentPage);\n    //close delete modal\n    setShow(false);\n  };\n  //sort the by list by name in ascending/descending order\n  const handleSortByName = () => {\n    //set the field to true which is selected(set other fields to false too)\n    setSortByName(true);\n    setRecentlyAdded(false);\n    setRecentlyUpdated(false);\n    let sortCustomersObj;\n    if (order === 1) {\n      setOrder(-1);\n      sortCustomersObj = {\n        query: \"\",\n        sort: {\n          plainName: -1,\n          createdAt: null,\n          updatedAt: null,\n        },\n        page: 1,\n      };\n      setCurrentPage(1);\n    } else if (order === -1) {\n      setOrder(1);\n      sortCustomersObj = {\n        query: \"\",\n        sort: {\n          plainName: 1,\n          createdAt: null,\n          updatedAt: null,\n        },\n        page: 1,\n      };\n      setCurrentPage(1);\n    }\n    getAllCustomers(sortCustomersObj);\n  };\n\n  const handleRecentlyAdded = () => {\n    //set the field to true which is selected(set other fields to false or null too)\n    setRecentlyAdded(true);\n    setRecentlyUpdated(false);\n    setSortByName(null);\n    let sortCustomersObj = {\n      query: \"\",\n      sort: {\n        plainName: \"\",\n        createdAt: -1,\n        updatedAt: null,\n      },\n      page: 1,\n    };\n    setCurrentPage(1);\n    getAllCustomers(sortCustomersObj);\n  };\n\n  const handleRecentlyUpdated = () => {\n    //set the field to true which is selected(set other fields to false or null too)\n    setRecentlyUpdated(true);\n    setRecentlyAdded(false);\n    setSortByName(null);\n    let sortCustomersObj = {\n      query: \"\",\n      sort: {\n        plainName: \"\",\n        createdAt: null,\n        updatedAt: -1,\n      },\n      page: 1,\n    };\n    setCurrentPage(1);\n    getAllCustomers(sortCustomersObj);\n  };\n\n  //show delete modal\n  const handleShow = (i, jobId) => {\n    //set the customerid of the of customer you want to delete\n    setCustomerToDelete(jobId);\n    //show the delete modal\n    setShow(true);\n  };\n\n  //close the delete modal\n  const handleClose = () => {\n    setShow(false);\n  };\n  //change Handler of radio buttons\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <div>\n      {/* <BackButton/> */}\n      <div>\n        <div className={`${style.toprow}`}>\n          <div className={style.rowContent}>\n            <div>\n              <h3>Customer List</h3>\n            </div>\n\n            <div>\n              <SearchBar type=\"customer\" title=\"Type first name or email\" />\n            </div>\n            <div className={style.filter}>\n              <i\n                className=\"fa fa-filter dropdown-toggle\"\n                href=\"#\"\n                role=\"button\"\n                id=\"dropdownMenuLink\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              ></i>\n              {/* Dropdown list */}\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                {/* Radio buttons */}\n                <RadioGroup\n                  aria-label=\"gender\"\n                  name=\"gender1\"\n                  value={value}\n                  onChange={handleChange}\n                >\n                  <FormControlLabel\n                    value=\"recently added\"\n                    control={<Radio />}\n                    className=\"dropdown-item\"\n                    label=\"Recently Added\"\n                    onClick={handleRecentlyAdded}\n                  />\n\n                  <FormControlLabel\n                    value=\"recently updated\"\n                    control={<Radio />}\n                    className=\"dropdown-item\"\n                    label=\"Recently Updated\"\n                    onClick={handleRecentlyUpdated}\n                  />\n                  <FormControlLabel\n                    value=\"sort by name\"\n                    control={<Radio />}\n                    label=\"Sort By Name\"\n                    className=\"dropdown-item\"\n                    onClick={handleSortByName}\n                  />\n                </RadioGroup>\n              </div>\n            </div>\n            {/* Create New Button */}\n            <div className={style.btnStyle}>\n              <Link to=\"/customer/add\" className={style.link}>\n                {\" \"}\n                <Button className={style.btn}>Create New</Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n        {docs && docs.length > 0 ? (\n          <div>\n            <div className={` ${style.jumbotron}`}>\n              {/* <div className={style.listheader}>\n                <div>Name</div>\n                <div>Phone</div>\n\n                <div>Email</div>\n\n                <div>Jobs</div>\n                <div>Claims</div>\n\n                {props.user && props.user.role === \"admin\" && (\n                  <div>Actions</div>\n                )}\n              </div> */}\n            </div>\n            <div>\n              <div>\n                {docs.map((doc, i) => {\n                  return (\n                    <div className={style.listContainer} key={i}>\n                      <div className={`${style.listContent} `}>\n                        <Link\n                          key={i}\n                          to={`/customer/detail/${doc._id}`}\n                          className={style.styleLink}\n                        >\n                          <div className={`${style.customerList} `}>\n                            <div\n                              className={`${style.name} ${style.item} ${style.flex}`}\n                            >\n                              <div className={`text-muted ${style.heading}`}>{`Name:`}</div>\n                              <div className={`text-capitalize ${style.headingSub}`}>{doc.firstName} {doc.lastName}</div>\n                            </div>\n\n                            <div\n                              className={`${style.phone} ${style.item} ${style.flex}`}\n                            >\n                              <div className={`text-muted ${style.heading}`}>{`Phone:`}</div>\n                              <div className={`${style.headingSub}`}>{doc.phone}</div>\n\n\n                            </div>\n                            <div\n                              className={`${style.email} ${style.item} ${style.flex}`}\n                            >\n                              <div className={`text-muted ${style.heading}`}>{`E-mail:`}</div>\n                              <div className={`${style.headingSub}`}>{doc.email}</div>\n\n                            </div>\n                            <div\n                              className={`${style.jobs} ${style.item} ${style.flex}`}\n                            >\n                              <div className={`text-muted ${style.heading}`}>{`Jobs:`}</div>\n                              <div className={`${style.headingSub}`}>\n                                <Chip\n                                  label={doc.jobs.length}\n                                />\n\n                              </div>\n\n                            </div>\n                            <div\n                              className={`${style.activeClaims} ${style.item} ${style.flex}`}\n                            >\n                              <div className={`text-muted ${style.heading}`}>{`Claims:`}</div>\n                              <div className={style.headingSub}>\n                                <Chip\n                                  label={doc.claim.length > 0 ? (\n                                    <div>\n                                      {\n                                        doc.claim.filter(\n                                          (claim) => claim.status === \"open\"\n                                        ).length\n                                      }\n                                    </div>\n                                  ) : (\n                                    0\n                                  )}\n                                /></div>\n\n                            </div>\n                          </div>\n                        </Link>\n\n                        {props.user && props.user.role === \"admin\" && (\n                          <div className={`${style.actions} ${style.flex}`}>\n                            <Button\n                              className={style.deleteButton}\n                              onClick={() => handleShow(i, doc._id)}\n                            >\n                              Delete\n                            </Button>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div className={style.stylePagination}>\n                <div className={style.pagination}>\n                  <Pagination\n                    itemCount={totalCount}\n                    pageSize={10}\n                    currentPage={currentPage}\n                    onPageChange={handlePageChange}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (docs && docs.length == 0 ? <div className=\"text-center\">\n          <img src=\"/images/no-data-found.png\" alt=\"No data found\" />\n        </div> : null\n        )}\n      </div>\n\n      <DeleteConfirmation\n        show={show}\n        handleClose={handleClose}\n        type=\"customer\"\n        deleteItem={removeCustomer}\n      />\n    </div>\n  );\n};\n\nvar mapStateToProps = (state) => ({\n  customers: state.customers.customerList,\n  user: state.users.user,\n});\n\nvar actions = {\n  getAllCustomers,\n  deleteCustomer,\n};\n\nexport default connect(mapStateToProps, actions)(CustomerList);\n","import React from \"react\";\nimport style from \"./ActivitiesModal.module.css\";\nimport { Modal } from \"react-bootstrap\";\nimport TimeAgo from \"react-timeago\";\nimport { Button } from \"@material-ui/core\";\n\nconst ActivitiesModal = ({ show, activities, handleClose }) => {\n\n  return (\n\n    <div>\n      {/* Activities Modal */}\n      <Modal\n        dialogClassName={`${style.modal}`}\n        show={show}\n        onHide={handleClose}\n        centered\n        scrollable\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Activities</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className={\"bg-light\"}>\n          {activities && activities.length > 0 ? (\n            <div className={style.modalBody}>\n              <div className={`text-muted ${style.modalHeader}`}>\n                <div>Performer</div>\n                <div>Message</div>\n                <div>Timestamp</div>\n              </div>\n\n              {activities && activities.map((activitiy, i) => (\n                <div key={i} className={`font-weight-bold ${style.modalContent}`}>\n                  <div className={\"text-capitalize\"}> {activitiy.performer.name}</div>\n                  <div>\n                    {activitiy.messageLogs.map((x, i) => (\n                      <label key={i}>* {x}</label>\n                    ))}\n                  </div>\n\n                  <TimeAgo className={\"text-muted text-capitalize\"} date={activitiy.timeStamp} />\n                </div>\n              ))}\n            </div>\n          ) : <h3 className=\"text-center\">No activity yet.</h3>}\n\n        </Modal.Body>\n        <Modal.Footer>\n          <div className={style.modalButtons}>\n            <Button className={`${style.button}`} onClick={handleClose}>\n              Close\n            </Button>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ActivitiesModal;\n","import { Button, Chip } from \"@material-ui/core\";\nimport { cloneDeep } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport style from \"./Blankets.module.css\";\nimport TimeAgo from \"react-timeago\";\nimport { connect } from \"react-redux\";\nimport { updateDeposit } from \"../../Redux/Deposit/DepositActions\";\nimport ActivitiesModal from \"../ActivitiesModal/ActivitiesModal\";\nimport DeleteConfirmation from \"../DeleteConfirmation/DeleteConfirmation\";\n\nconst Blankets = (props) => {\n  let [blanketValue, setBlanketValue] = useState(props.items);\n  const [show, setShow] = useState(false);\n  const [depositValue, setDepositValue] = useState(\"\");\n\n  let { user } = props;\n\n  useEffect(() => {\n    setBlanketValue(props.items);\n  }, [props.items]);\n\n  const handleShow = (deposit) => {\n    setDepositValue(deposit);\n    setShow(true);\n  };\n\n  const closeEdit = (i, type) => {\n    let newData = cloneDeep(blanketValue);\n    newData[i].edit = !newData[i].edit;\n    setBlanketValue(newData);\n    if (type === \"save\") {\n      // Call Api\n      let obj = {\n        id: newData[i]._id,\n        userId: user._id,\n        quantity: newData[i].quantity,\n        cost: newData[i].cost,\n        page: props.page,\n      };\n      let { updateDeposit } = props;\n      updateDeposit(obj)\n    }\n  };\n\n  const makeInputFieldsEditible = (i) => {\n    let newData = cloneDeep(blanketValue);\n    newData.map((data) => (data.edit = true));\n    newData[i].edit = !newData[i].edit;\n    setBlanketValue(newData);\n  };\n\n  const handleInput = (e, i) => {\n    let newData = cloneDeep(blanketValue);\n    if (newData[i].edit === false) {\n      newData[i].quantity = e.target.value;\n      newData[i].cost = parseInt(e.target.value) * 15;\n      setBlanketValue(newData);\n    }\n  };\n\n  const changeCost = (e, i) => {\n    let { value } = e.target;\n    let newData = cloneDeep(blanketValue);\n    newData[i].cost = value;\n    setBlanketValue(newData);\n  };\n\n  // close activities modal\n  const handleClose = () => {\n    setShow(false);\n  };\n  let { firstName, lastName,\n    location: { pathname },\n  } = props;\n  return (\n    <div>\n\n\n      {blanketValue &&\n        blanketValue.map((deposit, i) => {\n          return (\n            <div key={i}>\n\n              <div className={style.listContainer}>\n                <div className={`${style.listContent} `}>\n                  <Link\n                    key={i}\n                    to={`/deposit/detail/${deposit._id}`}>\n                    <div className={style.listContentItems}>\n                      <div className={style.customerName}>\n                        <div className={`text-muted ${style.title}`}>{`Name:`}</div>\n                        <div className={`text-capitalize ${style.text}`}>\n                          {pathname === `/deposits` ? `${deposit.customer.firstName} ${deposit.customer.lastName}` : `${firstName} ${lastName}`}\n                        </div>\n                      </div>\n                      <div className={style.customerJobId}>\n                        <div className={`text-muted ${style.title}`}>{`Job ID:`}</div>\n                        <Link className={style.text} to={`/job/detail/${deposit.job._id}`}>\n                          <Chip\n                            label={deposit.job.jobId}\n                          />\n\n                        </Link>\n                      </div>\n                      <div className={style.quantity}>\n                        <div className={`text-muted ${style.title}`}>{`Quantity:`}</div>\n                        <div className={style.text}>\n                          <Chip\n                            label={deposit.quantity}\n                          /></div>\n                      </div>\n                      <div className={style.cost}>\n                        <div className={`text-muted ${style.title}`}>{`Deposit:`}</div>\n                        <div className={style.text}>\n                          <Chip\n                            label={deposit.cost}\n                          />\n                        </div>\n                      </div>\n                      <div className={style.time}>\n                        <div className={`text-muted ${style.title}`}>{`Last Updated:`}</div>\n                        <div className={`text-capitalize ${style.text}`}>\n                          <TimeAgo date={deposit.updatedAt} />\n                        </div>\n\n                      </div>\n                    </div>\n                  </Link>\n                  <div className={style.depositBtn}>\n                    {user && user.role === \"admin\" && pathname === \"/deposits\" && (\n                      <Button\n                        onClick={() => props.openDeleteModal(i, deposit._id)}\n                        className={`text-uppercase  ${style.depositBtn} ${style.button}`}\n                      >\n                        Delete\n                      </Button>\n                    )}\n                  </div>\n                </div>\n\n\n              </div>\n\n            </div>\n          );\n        })}\n\n      <ActivitiesModal\n        show={show}\n        activities={depositValue.activities}\n        handleClose={handleClose}\n      />\n      {pathname === \"/deposits\" && (\n        <DeleteConfirmation\n          show={props.deleteModal}\n          handleClose={props.closeDeleteModal}\n          type=\"deposit\"\n          deleteItem={props.deleteDeposit}\n        />\n      )}\n    </div>\n  );\n};\n\nvar mapStateToProps = (state) => ({\n  user: state.users.user,\n});\nvar actions = {\n  updateDeposit\n};\n\nexport default connect(mapStateToProps, actions)(withRouter(Blankets));","import React, { useEffect, useState } from \"react\";\nimport style from \"./CustomerDetails.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getCustomer } from \"../../../Redux/Customer/customerActions\";\nimport { Modal } from \"react-bootstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport parse from \"html-react-parser\";\nimport { AppBar, Box, Tab, Tabs, TextareaAutosize } from \"@material-ui/core\";\nimport { updateClaim } from \"../../../Redux/Claim/claimActions\";\nimport Badge from \"@material-ui/core/Badge\";\nimport TimeAgo from \"react-timeago\";\nimport { cloneDeep } from \"lodash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarTimes, faDotCircle, faMapMarker, faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport Blankets from \"../../../components/Blankets/Blankets\";\n\nconst CustomerDetails = (props) => {\n  let { customer, getCustomer } = props;\n  //delearing state variables\n  const [show, setShow] = useState(false);\n  const [update, setUpdate] = useState(\"\");\n  const [updateIndex, setUpdateIndex] = useState(0);\n  const [blanketValue, setBlanketValue] = useState([]);\n  const [claimCount, setClaimCount] = useState(0);\n  const [value, setValue] = useState(0);\n  const [claims, setClaims] = useState([]);\n  const [toggleClaim, setToggleClaim] = useState(false)\n\n\n  //get customerId from props\n  let {\n    match: {\n      params: { customerId },\n    },\n  } = props;\n\n  useEffect(() => {\n    //getCustomer on ComponentDidMount\n    getCustomer(customerId);\n  }, [getCustomer, customerId]);\n\n  useEffect(() => {\n    //calculate blanket and claim Count whwn state of customer is updated\n    if (customer) {\n      let customerClaims = customer.claim;\n      if (customerClaims.length > 0) {\n        setClaims(customerClaims);\n        let openClaims = customerClaims.filter(\n          (claim) => claim.status === \"open\"\n        ).length;\n        setClaimCount(openClaims);\n      } else {\n        setClaims([])\n        setClaimCount(0);\n      }\n      //set the blanket value to the total # of blankets\n      setBlanketValue(customer.blanketDeposit);\n    }\n  }, [customer]);\n\n  //close modal\n  const handleClose = () => setShow(false);\n\n  //update the claim data(whwn update button is clicked through modal)\n  const updateClaimData = () => {\n    let ob = {\n      timestamp: new Date(),\n      value: update,\n    };\n    let newData = cloneDeep(claims);\n\n    newData[updateIndex].updates.unshift(ob);\n    let { updateClaim } = props;\n    //Call Update Claim Api to update claim\n    updateClaim(newData[updateIndex], (res) => {\n      newData[updateIndex].updates = res.data.data.updates;\n      setClaims(newData);\n      setShow(false);\n      setUpdate(\"\");\n    })\n  };\n\n  //onChange handler of textarea of modal\n  const handleAddUpdate = (e) => {\n    setUpdate(e.target.value);\n  };\n\n  //onChange handler of material-ui tabs\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  //add new update modal\n  const showUpdateModal = (i) => {\n    setUpdateIndex(i);\n    setShow(true);\n  };\n\n\n\n  //tabPanel of material ui\n  const TabPanel = (props) => {\n    let { children, value, index, ...other } = props;\n    return (\n      <div\n        // role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </div>\n    );\n  };\n\n  //close the claim\n  const handleCloseClaim = (i) => {\n    let { updateClaim } = props;\n    let updatedClaims = cloneDeep(claims);\n    updatedClaims[i].status = \"closed\";\n    updateClaim(updatedClaims[i], (res) => {\n      let updatedCount = cloneDeep(claimCount)\n      let newCount = --updatedCount;\n      updatedClaims[i].updatedAt = res.data.data.updatedAt;\n      setClaimCount(newCount);\n      setClaims(updatedClaims);\n      setToggleClaim(false)\n    })\n  };\n\n  const reopenClaim = (i) => {\n    let { updateClaim } = props;\n    let updatedClaims = cloneDeep(claims);\n\n    updatedClaims[i].status = 'open';\n    updateClaim(updatedClaims[i], (res) => {\n      let updatedCount = cloneDeep(claimCount)\n      let newCount = ++updatedCount;\n      updatedClaims[i].updatedAt = res.data.data.updatedAt;\n      setClaimCount(newCount);\n      setClaims(updatedClaims);\n      setToggleClaim(false)\n    })\n\n\n  }\n  const updateBlanket = (data) => {\n    setBlanketValue(data);\n  };\n\n  const closeClaim = (e) => {\n\n    e.preventDefault();\n    e.stopPropagation();\n    setToggleClaim(true)\n\n  }\n  return (\n    <div className={style.customerDetailsContainer}>\n      {customer && (\n        <div className={style.customerDetails}>\n          {/* defining AppBar for material ui tabs */}\n          <AppBar position=\"static\">\n            <Tabs\n              className={style.styleTabs}\n              onChange={handleChange}\n              value={value}\n              aria-label=\"simple tabs example\"\n              centered\n            >\n              <Tab label=\"Customer Information\" />\n              <Tab\n                label={\n                  <Badge badgeContent={claimCount} color=\"primary\">\n                    Claims\n                  </Badge>\n                }\n              />{\" \"}\n              <Tab\n                label={\n                  <Badge\n                    badgeContent={customer.blanketDeposit.reduce(\n                      (sum, currentValue) =>\n                        sum + parseInt(currentValue.quantity),\n                      0\n                    )}\n                    color=\"primary\"\n                  >\n                    Blankets\n                  </Badge>\n                }\n              />\n            </Tabs>\n          </AppBar>\n          {/* Tab Panel of customer */}\n          <TabPanel value={value} index={0}>\n            <div className={style.customerInfoHeader}>\n              <div>\n                <h3>Customer Information</h3>\n              </div>\n              <div>\n                <Link\n                  className={style.link}\n                  to={{\n                    pathname: \"/job/add\",\n                    customerId: customer.email,\n                    customerName: customer.firstName + \" \" + customer.lastName,\n                    jobs: customer.jobs,\n                  }}\n                >\n                  {\" \"}\n                  <Button className={style.button}>Create Job</Button>{\" \"}\n                </Link>\n              </div>\n              <div>\n                <Link\n                  className={style.link}\n                  to={{\n                    pathname: `/customer/update/${customerId}`,\n                    customerId: customer.email,\n                  }}\n                >\n                  {\" \"}\n                  <Button className={style.button}>Edit</Button>{\" \"}\n                </Link>\n              </div>\n            </div>\n            <hr />\n            <div className={style.customerInfoHeadings}>\n              <div>\n                <h6>Name</h6>\n              </div>\n              <div>\n                <h6>Phone</h6>\n              </div>\n              <div>\n                <h6>Email</h6>\n              </div>\n            </div>\n            <div className={style.customerInfoDescription}>\n              <div className=\"text-capitalize\">\n                {customer.firstName} {customer.lastName}\n              </div>\n              <div>{customer.phone}</div>\n              <div>{customer.email}</div>\n            </div>\n\n            {customer.subContacts.length !== 0 ? (\n              <div>\n                <h4>Alternate Contact</h4>\n\n                <div className=\"accordion\" id=\"accordionExample\">\n                  {customer.subContacts.map((x, i) => (\n                    <div key={i} className={`card`}>\n                      <div className=\"card-header\" id=\"headingOne\">\n                        <div\n                          className={`btn-link`}\n                          type=\"button\"\n                          data-toggle=\"collapse\"\n                          data-target={`#collapse${i}`}\n                          aria-expanded=\"true\"\n                          aria-controls=\"collapse\"\n                        >\n                          {`Contact No. ${i + 1}`}\n                        </div>\n                      </div>\n                      <div\n                        id={`collapse${i}`}\n                        className=\"collapse show\"\n                        aria-labelledby=\"headingOne\"\n                        data-parent=\"#accordionExample\"\n                      >\n                        <div className=\"card-body\">\n                          <div className={style.cardBodyHeader}>\n                            <div>{x.length !== 0 && <h6>Name</h6>}</div>\n                            <div>{x.length !== 0 && <h6>Email</h6>}</div>\n                            <div>{x.length !== 0 && <h6>Phone</h6>}</div>\n                          </div>\n                          <div className={style.cardBodyContent}>\n                            <div className=\"text-capitalize\">{x.name !== \"\" ? x.name : \"N/A\"}</div>\n                            <div>{x.email !== \"\" ? x.email : \"N/A\"}</div>\n                            <div>{x.phone !== \"\" ? x.phone : \"N/A\"}</div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : null}\n\n            <div >\n              {customer.jobs && customer.jobs.length > 0 ? (\n                <div>\n                  <h3 className={`${style.job}`}>Jobs</h3>\n                  <div id=\"accordion\">\n                    {customer.jobs.map((job, i) => {\n                      return (\n                        <div key={i} className={style.jumbotron} >\n                          <div\n                            className={`card-header ${style.jobCard}`}\n                            aria-expanded=\"true\"\n                            data-toggle=\"collapse\"\n                            data-target={`#jobCollapse${i}`}\n                            aria-controls=\"collapse\"\n                            id=\"headingOne\"\n                          >\n\n                            <div className={style.jobDetails}>\n                              <div className={style.jobLink}>\n                                <Link\n                                  className={style.link}\n                                  to={{\n                                    pathname: \"/job/detail/\" + job._id,\n                                  }}\n                                >\n                                  <h5>{job.title}</h5>\n                                </Link>\n                              </div>\n                              <div className={style.jobService}>\n                                <span><Chip\n                                  size=\"medium\"\n                                  label={job.jobId}\n                                  clickable\n                                  style={{ color: \"white\", backgroundColor: \"var(--color-blue)\" }}\n                                /></span>\n                                <span><Chip\n                                  size=\"medium\"\n                                  label={job.status}\n                                  clickable\n                                  style={{ color: \"white\", backgroundColor: \"var(--color-blue)\" }}\n                                /></span>\n                              </div>\n                            </div>\n                            <div className={`${style.jobDates} text-muted`}>\n                              {job.dates.map((x, i) => (\n                                <div key={i}>\n                                  {i === 0 ? (\n                                    <div key={i}>{x.date}</div>\n                                  ) : (\n                                    <div key={i}>\n                                      <span className={style.spacing}>|</span>\n                                      {x.date}\n                                    </div>\n                                  )}\n                                </div>\n                              ))}\n                            </div>\n\n                          </div>\n\n                          <div\n                            id={`jobCollapse${i}`}\n                            className=\"collapse\"\n                            aria-labelledby=\"headingOne\"\n                            data-parent=\"#accordion\"\n                          >\n                            <div className={`card-body ${style.cardBodyContainer}`}>\n\n                              {/* show services, type */}\n                              <div className={style.cardBody___sectionOne}>\n                                <div>\n                                  <h5>Job Type:</h5>\n                                  <Chip\n                                    clickable\n                                    size=\"small\"\n                                    label={job.jobType}\n                                    color=\"primary\"\n                                    variant=\"outlined\"\n                                  /></div>\n                                <div>\n\n                                  <h5>Service:</h5>\n                                  {job.services.map((service, i) => (\n                                    <Chip\n                                      key={i}\n                                      size=\"small\"\n                                      label={service.name}\n                                      clickable\n                                      color=\"primary\"\n                                      variant=\"outlined\"\n                                    />\n                                  ))}</div>\n\n\n\n                              </div>\n\n                              <div className={style.cardBodyContainerTwo}>\n                                <div>\n                                  <h5>Movers Required:</h5>\n                                  <Chip\n                                    clickable\n                                    color=\"primary\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    label={job.assigneeRequired}\n                                  />\n                                </div>\n                                <div>\n                                  <h5>Price:</h5>\n                                  <Chip\n                                    clickable\n                                    color=\"primary\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    label={`$${job.price}`}\n                                  />\n                                </div>\n\n                              </div>\n                              <div className={style.cardBodyContainerThree}>\n                               \n                                {job.trucks.map((x, i) =>\n                                  <div className={style.truckSection}>\n                                     <h5>Truck Details</h5>\n                                    <div>\n                                      {`Type: `}\n                                      <Chip\n                                        clickable\n                                        color=\"primary\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        label={x.type}\n                                      />\n                                    </div>\n                                    <div>\n                                      {`No. Of Trucks: `}\n                                      <Chip\n                                        clickable\n                                        color=\"primary\"\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                        label={x.number}\n                                      />\n                                    </div>\n\n                                  </div>\n                                )}\n\n                              </div>\n                              <div className={style.cardBodyContainerThree}>\n                                <h5>Assignees:</h5>\n                                {job.assignee.length > 0 ? (\n                                  <div className=\"text-capitalize\" >\n\n                                    {job.assignee.map((assignee, i) =>\n                                      i === 0 ? (\n                                        <span key={i} className={style.jobAssignee}>\n                                          {assignee.name}\n                                        </span>\n                                      ) : (\n                                        <span key={i} className={style.jobAssignee}>\n                                          <span className={style.spacing}> | </span>\n                                          {assignee.name}\n                                        </span>\n                                      )\n                                    )}\n                                  </div>\n                                ) : (\n\n                                  <div>\n                                    {`Not Assigned`}</div>\n                                )}\n                              </div>\n                              {/* show job Description */}\n                              <div className={style.jobDetailContainer}>\n                                <h5>Job Details:</h5>\n                                <div className={style.jobDetail}>\n                                  {parse(job.description)}\n                                </div>\n                              </div>\n                              {job.locations && (\n                                <div className={style.locations}>\n                                  {job.locations.map((list, i) =>\n                                    list.type === \"pickup\" ? (\n                                      <div key={i}>\n                                        <FontAwesomeIcon icon={faMapMarker} />{\" \"}\n                                        <span>{`Pickup`} </span>{\" \"}\n                                        <div className={style.location}>\n                                          {list.value} {list.default ? '(Load Only / IA)' : null}\n                                        </div>\n                                        <div className=\"text-muted\">\n                                          {`Property Type: `}\n                                          <Chip\n                                            clickable\n                                            color=\"primary\"\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            label={list.propertyType}\n                                          /></div>\n                                      </div>\n                                    ) : list.type === \"dropoff\" ? (\n                                      <div key={i}>\n                                        <FontAwesomeIcon icon={faMapMarkerAlt} />{\" \"}\n                                        <span>{`Dropoff`}</span>\n                                        <div className={style.location}>\n                                          {list.value} {list.default ? '(Unload Only)' : null}\n                                        </div>\n                                        <div className=\"text-muted\">\n                                          {`Property Type: `}\n                                          <Chip\n                                            clickable\n                                            color=\"primary\"\n                                            variant=\"outlined\"\n                                            size=\"small\"\n                                            label={list.propertyType}\n                                          /></div>\n                                      </div>\n                                    ) : <div className={style.location}>\n                                      <span>{`Location: `}</span> {list.value}\n                                    </div>\n                                  )}\n                                </div>\n                              )}\n\n                              {job.note.length !== 0 && (\n                                <div className={style.notes}>\n                                  <div>\n                                    <h5>Notes:</h5>\n                                  </div>\n                                  <div className={style.notes___text}>\n                                    {job.note.map((x, i) => (\n                                      <div key={i}>{x.text}</div>\n                                    ))}\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              ) : (\n                <h4 className={`${style.flex} ${style.styleEmptyJobs}`}>\n                  No job added yet\n                </h4>\n              )}\n            </div>\n          </TabPanel>\n          {/* Tab Panel of claim */}\n          <TabPanel value={value} index={1}>\n            <div className={style.claimTopRow}>\n              <div>\n                <h3>Claims</h3>\n              </div>\n              <div className={style.newClaimBtn}>\n                <Link\n                  className={style.link}\n                  to={{\n                    pathname: \"/claim/add\",\n                    customerId: customer.email,\n                    customerName: customer.firstName + \" \" + customer.lastName,\n                    jobs: customer.jobs,\n                  }}\n                >\n                  {\" \"}\n                  <Button className={style.button}>New Claim</Button>{\" \"}\n                </Link>\n              </div>\n            </div>\n            <hr />\n            <div id=\"accordion\">\n              {claims.length > 0 ? (\n                claims.map((claim, i) => {\n\n                  return (\n                    <div key={i}>\n                      <div\n                        className={`card-header ${style.cardHeader}`}\n                        aria-expanded=\"true\"\n                        data-toggle=\"collapse\"\n                        data-target={`#collapse${i}`}\n                        aria-controls=\"collapse\"\n                        id=\"headingOne\"\n                      >\n                        <div>\n                          <div className={`text-muted ${style.heading}`}>Job ID</div>\n                          <div className={style.headingSub}>{claim.job && claim.job.jobId}</div>\n\n                        </div>\n                        <div>\n                          <div className={`text-muted ${style.heading}`}>Status</div>\n                          <div className={`text-capitalize ${style.headingSub}`}>{claim.status}</div>\n\n                        </div>\n                        <div>\n                          <div className={`text-muted ${style.heading}`}>Last Updated</div>\n                          <TimeAgo className={`text-capitalize ${style.headingSub}`} date={claim.updatedAt} />\n                        </div>\n                      </div>\n                      <div\n                        id={`collapse${i}`}\n                        className=\"collapse\"\n                        aria-labelledby=\"headingOne\"\n                        data-parent=\"#accordion\"\n                      >\n                        <div className={`card-body ${style.claimBody}`}>\n                          <div key={i} className={style.claimDetail}>\n                            <div className={style.claimHead}>\n                              <div className={`${style.protectionRow}`}>\n                                <div className={style.protectionRow___colOne}>\n                                  <div>\n                                    <h6>{`Protection Type: `}</h6>\n                                    {claim.claimType}\n                                  </div>\n                                  <div>\n                                    <h6>{`Total: `}</h6>\n                                    ${claim.price}\n                                  </div>\n                                  <div>\n                                    <h6>{`Title: `}</h6>\n                                    {claim.title}\n                                  </div>\n                                </div>\n\n                                <div className={style.protectionRow___colTwo}>\n                                  <h6>{`Actions`}</h6>\n                                  <div className={style.protectionRow___buttons} >\n                                    <div>\n                                      {claim.status === \"open\" ? (\n                                        <Button\n                                          className={style.button}\n                                          onClick={() => showUpdateModal(i)}\n\n                                        >\n                                          Add Update\n                                        </Button>\n                                      ) : null}\n                                    </div>\n                                    <div>\n                                      {claim.status === \"open\" ? (\n                                        <Button\n                                          type=\"button\"\n                                          className={style.button}\n                                          onClick={(e) => closeClaim(e)}\n                                        >\n                                          Close Claim\n                                        </Button>\n                                      ) : (\n                                        <Button\n                                          className={style.button}\n                                          onClick={() => setToggleClaim(true)}\n                                        >\n                                          Reopen Claim\n                                        </Button>\n                                      )}\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <div className={`${style.title}`}>\n                              <div className={style.titleOne}>\n                                <h5>Description:</h5>\n                                <div className={style.title___textOne}>\n                                  {claim.description}\n                                </div>\n                              </div>\n                              <div className={style.titleTwo}>\n                                <h5>Waiting To:</h5>\n                                <div className={style.title___textTwo}>\n                                  {claim.waitTo}\n                                </div>\n                              </div>\n                            </div>\n\n                            {claim.updates.length > 0 ? (\n                              <div className={style.updates}>\n                                <div className={style.updateHead}>\n                                  <h5>Updates:</h5>\n                                </div>\n                                <div className={style.updateContent}>\n                                  {claim.updates.map((x, i) => (\n                                    <div className={style.updateContentContainer}>\n                                      <div\n                                        key={i}\n                                        className={style.updateContentRow}\n                                      >\n                                        {/* {\" \"} */}\n                                        <div>{`${x.value}`}</div>\n                                        <div className={`text-muted ${style.timeStamp}`}>\n                                          <FontAwesomeIcon icon={faCalendarTimes} />\n                                          <TimeAgo date={x.timestamp} />\n                                        </div>\n                                      </div>\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            ) : null}\n                          </div>\n                        </div>\n                      </div>\n                      {/* modal for close and reopen claims */}\n                      <Modal\n\n                        show={toggleClaim}\n                        onHide={() => setToggleClaim(false)}\n                        scrollable\n                        centered\n                      >\n                        <Modal.Header closeButton>\n                          <Modal.Title>Confirmation</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                          {claim.status === 'open' ? `Do you want to close this claim ?` : `Do you want to reopen this claim ?`}\n                        </Modal.Body>\n                        <Modal.Footer>\n                          <div className={style.flexEnd}>\n                            <Button className={style.button} onClick={() => setToggleClaim(false)}>\n                              Close\n                                </Button>\n                            {claim.status === 'open' ? <Button className={style.button} onClick={() => handleCloseClaim(i)}>\n                              Confirm\n                                </Button>\n                              : <Button className={style.button} onClick={() => reopenClaim(i)}>\n                                Confirm\n                                </Button>\n                            }\n                          </div>\n                        </Modal.Footer>\n                      </Modal>\n                    </div>\n                  )\n\n                })\n              ) : (\n                <div className=\"text-center\">\n                  <img src=\"/images/no-data-found.png\" alt=\"Data not found\" />\n                </div>\n              )}\n            </div>\n          </TabPanel>\n\n          {/* Tab Panel of blankets */}\n          <TabPanel value={value} index={2}>\n            <div className={style.toprow}>\n              <div>\n                <h3>Blanket Deposit</h3>\n              </div>\n              <div className={style.btn}>\n                <Link\n                  className={style.link}\n                  to={{\n                    pathname: \"/deposit/add\",\n                    customerId: customer.email,\n                    customerName: customer.firstName + \" \" + customer.lastName,\n                    jobs: customer.jobs,\n                  }}\n                >\n                  {\" \"}\n                  <Button className={style.button}>Deposit</Button>{\" \"}\n                </Link>\n              </div>\n            </div>\n            <hr />\n            {blanketValue && blanketValue.length > 0 ? (\n              <Blankets\n                firstName={customer.firstName}\n                lastName={customer.lastName}\n                items={blanketValue} update={updateBlanket} />\n            ) : (\n              <div className=\"text-center\">\n                <img src=\"/images/no-data-found.png\" alt=\"Data not found\" />\n              </div>\n            )}\n          </TabPanel>\n\n          <br />\n        </div>\n      )}\n      <Modal\n        show={show}\n        onHide={handleClose}\n        dialogClassName={style.modal}\n        scrollable\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add Update</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <TextareaAutosize\n            id=\"\"\n            cols=\"65\"\n            rows=\"5\"\n            name=\"Note\"\n            value={update}\n            onChange={handleAddUpdate}\n            className={style.styleTextArea}\n          ></TextareaAutosize>\n        </Modal.Body>\n        <Modal.Footer>\n          <div className={style.flexEnd}>\n            <Button className={style.button} onClick={handleClose}>\n              Close\n            </Button>\n            <Button\n              className={style.button}\n              type=\"button\"\n              onClick={updateClaimData}\n            >\n              Add\n            </Button>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\nvar mapStateToProps = (state) => ({\n  customer: state.customers.customer,\n  user: state.users.user,\n});\n\nvar actions = {\n  getCustomer,\n  updateClaim,\n};\nexport default connect(mapStateToProps, actions)(CustomerDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addCustomer } from \"../../../Redux/Customer/customerActions\";\nimport { resetCustomerForm, setCustomerForm } from \"../../../Redux/PersistForms/formActions\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { TextField } from \"@material-ui/core\";\nimport style from \"./CreateCustomer.module.css\";\nimport Button from \"@material-ui/core/Button\";\n\nclass CreateCustomer extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      firstName: \"\",\n      lastName: \"\",\n      phone: \"\",\n      email: \"\",\n      subContacts: [\n        {\n          name: \"\",\n          phone: \"\",\n          email: \"\",\n        },\n      ],\n      firstNameError: \"\",\n      lastNameError: \"\",\n      emailError: \"\",\n      phoneError: \"\",\n      subContactPhoneError: \"\",\n      subContactEmailError: \"\",\n    };\n\n    this.state = { ...this.props.addForm };\n  }\n  //validate(check if the form fields are empty or not)\n  validate = () => {\n    let emailError = \"\";\n    let firstNameError = \"\";\n    let lastNameError = \"\";\n    let phoneError = \"\";\n\n    const mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    if (!this.state.email.match(mailformat)) {\n      emailError = \"Invalid Email\";\n    }\n\n    if (!this.state.firstName) {\n      firstNameError = \"First Name should not be empty\";\n    }\n\n    if (!this.state.lastName) {\n      lastNameError = \"Last Name should not be empty\";\n    }\n\n    if (!this.state.phone) {\n      phoneError = \"Phone Number should not be empty\";\n    }\n\n    if (emailError || firstNameError || lastNameError || phoneError) {\n      this.setState({\n        firstNameError,\n        lastNameError,\n        emailError,\n        phoneError,\n      });\n      return false;\n    }\n    return true;\n  };\n\n  handlePhoneNumberInput = (value, previousValue) => {\n    // return nothing if no value\n    if (!value) return value;\n\n    // only allows 0-9 inputs\n    const currentValue = value.replace(/[^\\d]/g, '');\n    const cvLength = currentValue.length;\n\n    if (!previousValue || value.length > previousValue.length) {\n\n      // returns: \"x\", \"xx\", \"xxx\"\n      if (cvLength < 4) return currentValue;\n\n      // returns: \"(xxx)\", \"(xxx) x\", \"(xxx) xx\", \"(xxx) xxx\",\n      if (cvLength < 7) return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`;\n\n      // returns: \"(xxx) xxx-\", (xxx) xxx-x\", \"(xxx) xxx-xx\", \"(xxx) xxx-xxx\", \"(xxx) xxx-xxxx\"\n      return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3, 6)}-${currentValue.slice(6, 10)}`;\n    }\n  }\n\n  handleSubPhoneNumberInput = (value, previousState, i) => {\n    let subContacts = previousState.subContacts.slice();\n    let previousValue = subContacts[i].phone;\n    subContacts[i].phone = this.handlePhoneNumberInput(value, previousValue)\n    return subContacts\n  }\n\n  //onChange handler of form\n  handleFormInput = (event) => {\n    const { name, value } = event.target;\n    if (name === 'phone') {\n      this.setState(prevState => ({ phone: this.handlePhoneNumberInput(value, prevState.phone) }))\n    } else {\n      this.setState({ [name]: value });\n      if (value === \"\") {\n        this.setState({ [name + \"Error\"]: \"Field Should not be empty\" });\n      } else {\n        this.setState({ [name + \"Error\"]: \"\" });\n      }\n    }\n  };\n\n  //onChange handler of subContact\n  hanldeContactsInput = (event, i) => {\n    const { name, value } = event.target;\n    let updatedContacts = this.state.subContacts.slice();\n    if (name === 'phone') {\n      this.setState(prevState => ({ subContacts: this.handleSubPhoneNumberInput(value, prevState, i) }))\n    } else {\n      updatedContacts[i][name] = value;\n      this.setState({ subContacts: updatedContacts });\n    }\n  };\n  //this handler is clicked when the form is submitted\n  mySubmitHandler = (event) => {\n    let { addCustomer, history } = this.props;\n    event.preventDefault();\n\n    const isValid = this.validate();\n    if (isValid) {\n      let { firstName, lastName, email, phone, subContacts } = this.state;\n      //check if the subContacts fields are empty\n      if (\n        this.state.subContacts[0].name === \"\" &&\n        this.state.subContacts[0].phone === \"\" &&\n        this.state.subContacts[0].email === \"\"\n      ) {\n        subContacts = [];\n      }\n\n      let addCustomerObj = {\n        firstName,\n        lastName,\n        phone,\n        email,\n        subContacts,\n      };\n      //Call addCustomer Api\n      addCustomer(addCustomerObj, (res) => {\n        if (this.props.isModal) {\n          this.props.close(res);\n        } else {\n          //reset form to its original state\n          this.handleResetForm()\n          history.push(\"/customer/detail/\" + res.data.data._id);\n        }\n      });\n    }\n  };\n  //function to addSubContacts(if the subContacts are greater 1)\n  addContacts = () => {\n    let { subContacts } = this.state;\n    if (subContacts[0].name && subContacts[0].phone && subContacts[0].email) {\n      this.setState({\n        subContacts: [\n          ...this.state.subContacts,\n          {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n          },\n        ],\n      });\n    }\n  };\n\n  componentWillUnmount() {\n    //set the values of form fields in redux state\n    let { setCustomerForm } = this.props;\n    setCustomerForm({ ...this.state });\n  }\n  //reset form (clear values from all fields)\n  handleResetForm = () => {\n    let { resetCustomerForm } = this.props;\n\n    resetCustomerForm();\n    this.setState({ ...this.initialState });\n  };\n\n  render() {\n    return (\n      <div className={this.props.isModal !== true && `${style.formStyle}`}>\n        <div className={this.props.isModal !== true && `${style.form}`}>\n          {this.props.isModal !== true && (\n            <h3 className={style.head}>Create Customer</h3>\n          )}\n          <div>\n            <form onSubmit={this.mySubmitHandler}>\n              <TextField\n                variant=\"outlined\"\n                className={style.styleFormFields}\n                required\n                id=\"firstName\"\n                size=\"small\"\n                label=\"First Name\"\n                fullWidth\n                name=\"firstName\"\n                autoComplete=\"firstName\"\n                autoFocus\n                error={this.state.firstNameError ? true : false}\n                value={this.state.firstName}\n                onChange={this.handleFormInput}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                required\n                className={style.styleFormFields}\n                id=\"lastName\"\n                fullWidth\n                size=\"small\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lastName\"\n                error={this.state.lastNameError ? true : false}\n                value={this.state.lastName}\n                onChange={this.handleFormInput}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                required\n                className={style.styleFormFields}\n                size=\"small\"\n                fullWidth\n                id=\"phone\"\n                label=\"Phone Number\"\n                name=\"phone\"\n                autoComplete=\"phone\"\n                error={this.state.phoneError ? true : false}\n                value={this.state.phone}\n                onChange={this.handleFormInput}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                required\n                className={style.styleFormFields}\n                size=\"small\"\n                id=\"email\"\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                error={this.state.emailError ? true : false}\n                value={this.state.email}\n                onChange={this.handleFormInput}\n              />\n            </form>\n            <h5>Alternate Contact</h5>\n            {this.state.subContacts.map((x, i) => {\n              return (\n                <div key={i}>\n                  <form>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      size=\"small\"\n                      className={style.styleFormFields}\n                      fullWidth\n                      id=\"name\"\n                      label=\"Name\"\n                      name=\"name\"\n                      autoComplete=\"name\"\n                      value={this.state.subContacts[i].name}\n                      onChange={(e) => this.hanldeContactsInput(e, i)}\n                    />\n\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      size=\"small\"\n                      id=\"phone_number\"\n                      label=\"Phone Number\"\n                      className={style.styleFormFields}\n                      name=\"phone\"\n                      fullWidth\n                      autoComplete=\"phone_number\"\n                      value={this.state.subContacts[i].phone}\n                      onChange={(e) => this.hanldeContactsInput(e, i)}\n                    />\n\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      id=\"emailalt\"\n                      label=\"Email Address\"\n                      size=\"small\"\n                      className={style.styleFormFields}\n                      name=\"email\"\n                      fullWidth\n                      autoComplete=\"emailalt\"\n                      value={this.state.subContacts[i].email}\n                      onChange={(e) => this.hanldeContactsInput(e, i)}\n                    />\n                  </form>\n                </div>\n              );\n            })}\n\n            <div\n              className={\n                this.props.isModal !== true\n                  ? style.styleAddBtn\n                  : style.modalAddBtn\n              }\n            >\n              <div\n                className={\n                  this.props.isModal !== true ? style.addBtn : style.modalBtn\n                }\n              >\n                <Button onClick={this.addContacts} className={style.button}>\n                  Add Another\n                </Button>\n              </div>\n            </div>\n\n            <div className={style.resetButtons}>\n              <div className={style.formResetButton}>\n                <Button\n                  onClick={this.handleResetForm}\n                  className={`${style.formButton}`}\n                >\n                  Reset\n                </Button>\n              </div>\n              <div className={style.formSubmitButton}>\n                <Button\n                  onClick={this.mySubmitHandler}\n                  className={`${style.formButton}`}\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nvar mapStateToProps = (state) => ({\n  addForm: state.forms.addCustomerForm\n});\n\nvar actions = {\n  addCustomer,\n  setCustomerForm,\n  resetCustomerForm\n};\n\nexport default connect(mapStateToProps, actions)(CreateCustomer);\n","import { SET_CUSTOMER_FORM, SET_JOB_FORM, SET_CLAIM_FORM, SET_DEPOSIT_FORM, RESET_CUSTOMER_FORM, RESET_JOB_FORM, RESET_CLAIM_FORM, RESET_DEPOSIT_FORM } from \"./formConstants\";\n\nexport const setCustomerForm = (data) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_CUSTOMER_FORM,\n            payload: data\n        });\n    };\n};\nexport const resetCustomerForm = () => {\n    return async (dispatch) => {\n        dispatch({\n            type: RESET_CUSTOMER_FORM\n        })\n    }\n}\n\nexport const setJobForm = (data) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_JOB_FORM,\n            payload: data\n        });\n    };\n};\nexport const resetJobForm = () => {\n    return async (dispatch) => {\n        dispatch({\n            type: RESET_JOB_FORM\n        })\n    }\n}\n\nexport const setClaimForm = (data) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_CLAIM_FORM,\n            payload: data\n        });\n    };\n};\nexport const resetClaimForm = () => {\n    return async (dispatch) => {\n        dispatch({\n            type: RESET_CLAIM_FORM\n        })\n    }\n}\n\nexport const setDepositForm = (data) => {\n    return (dispatch) => {\n        dispatch({\n            type: SET_DEPOSIT_FORM,\n            payload: data\n        });\n    };\n};\n\nexport const resetDepositForm = () => {\n    return async (dispatch) => {\n        dispatch({\n            type: RESET_DEPOSIT_FORM\n        })\n    }\n}","export const GET_CUSTOMER_FORM = \"GET_CUSTOMER_FORM\"\nexport const SET_CUSTOMER_FORM = \"SET_CUSTOMER_FORM\"\nexport const RESET_CUSTOMER_FORM = \"RESET_CUSTOMER_FORM\"\n\n\nexport const GET_JOB_FORM = \"GET_JOB_FORM\"\nexport const SET_JOB_FORM = \"SET_JOB_FORM\"\nexport const RESET_JOB_FORM = \"RESET_JOB_FORM\"\n\nexport const GET_CLAIM_FORM = \"GET_CLAIM_FORM\"\nexport const SET_CLAIM_FORM = \"SET_CLAIM_FORM\"\nexport const RESET_CLAIM_FORM = \"RESET_CLAIM_FORM\"\n\nexport const SET_DEPOSIT_FORM = \"SET_DEPOSIT_FORM\"\nexport const GET_DEPOSIT_FORM = \"GET_DEPOSIT_FORM\"\nexport const  RESET_DEPOSIT_FORM = \"RESET_DEPOSIT_FORM\"\n\n\n\n\n","import { Button, TextField } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  updateCustomer,\n  getCustomer,\n} from \"../../../Redux/Customer/customerActions\";\n\nimport style from \"./UpdateCustomer.module.css\";\nclass UpdateCustomer extends Component {\n  //fetch customer info (whose id is passed on mount)\n  constructor(props) {\n    super(props);\n    this.state = {\n      customer: '',\n      firstName: '',\n      lastName: '',\n      phone: '',\n      email: '',\n      subContacts: '',\n    }\n  }\n\n  componentDidMount() {\n    let {\n      getCustomer,\n      match: {\n        params: { customerId },\n      },\n    } = this.props;\n    getCustomer(customerId);\n  };\n\n  componentDidUpdate(prevProps) {\n    let { customer } = this.props;\n    if (customer && customer !== this.state.customer) {\n      this.setState({\n        customer,\n        firstName: customer.firstName,\n        lastName: customer.lastName,\n        phone: customer.phone,\n        email: customer.email,\n        subContacts: customer.subContacts,\n      });\n    }\n  }\n\n  handlePhoneNumberInput = (value, previousValue) => {\n    // return nothing if no value\n    if (!value) return value;\n\n    // only allows 0-9 inputs\n    const currentValue = value.replace(/[^\\d]/g, '');\n    const cvLength = currentValue.length;\n\n    if (!previousValue || value.length > previousValue.length) {\n\n      // returns: \"x\", \"xx\", \"xxx\"\n      if (cvLength < 4) return currentValue;\n\n      // returns: \"(xxx)\", \"(xxx) x\", \"(xxx) xx\", \"(xxx) xxx\",\n      if (cvLength < 7) return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`;\n\n      // returns: \"(xxx) xxx-\", (xxx) xxx-x\", \"(xxx) xxx-xx\", \"(xxx) xxx-xxx\", \"(xxx) xxx-xxxx\"\n      return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3, 6)}-${currentValue.slice(6, 10)}`;\n    }\n  }\n\n  handleSubPhoneNumberInput = (value, previousState, i) => {\n    let subContacts = previousState.subContacts.slice();\n    let previousValue = subContacts[i].phone;\n    subContacts[i].phone = this.handlePhoneNumberInput(value, previousValue)\n    return subContacts\n  }\n\n  // form onChangeHandler\n  handleFormInput = (event) => {\n    let { name, value } = event.target;\n    if (name === 'phone') {\n      this.setState(prevState => ({ phone: this.handlePhoneNumberInput(value, prevState.phone) }))\n    } else {\n      this.setState({ [name]: value });\n    }\n    if (value === \"\") {\n      this.setState({ [name + \"Error\"]: \"Field Should not be empty\" });\n    } else {\n      this.setState({ [name + \"Error\"]: \"\" });\n    }\n  };\n\n  // alternateContact onChange handler\n  hanldeContactsInput = (event, i) => {\n    const { name, value } = event.target;\n    if (name === 'phone') {\n      this.setState(prevState => ({ subContacts: this.handleSubPhoneNumberInput(value, prevState, i) }))\n    } else {\n      let updatedContacts = this.state.subContacts.slice();\n      updatedContacts[i][name] = value;\n      this.setState({ subContacts: updatedContacts });\n    }\n  };\n\n  // add alternateContacts (when no alternateContacts is added)\n  addAlternateContact = () => {\n    this.setState({\n      subContacts: [\n        {\n          name: \"\",\n          phone: \"\",\n          email: \"\",\n        },\n      ],\n    });\n  };\n  // add another alternate contact (when atleast alternateContact already exists)\n  addContacts = () => {\n      this.setState({\n        subContacts: [\n          ...this.state.subContacts,\n          {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n          },\n        ],\n      });\n  };\n  // validate if the form fields are empty or not\n  validate = () => {\n    // let {username,password,emailError,passwordError} = this.state\n    let emailError = \"\";\n    let firstNameError = \"\";\n    let lastNameError = \"\";\n    let phoneError = \"\";\n\n    let mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    if (!this.state.email.match(mailformat)) {\n      emailError = \"Invalid Email\";\n    }\n\n    if (!this.state.firstName) {\n      firstNameError = \"First Name should not be empty\";\n    }\n\n    if (!this.state.lastName) {\n      lastNameError = \"Last Name should not be empty\";\n    }\n\n    if (!this.state.phone) {\n      phoneError = \"Phone Number should not be empty\";\n    }\n\n    if (emailError || firstNameError || lastNameError || phoneError) {\n      this.setState({\n        firstNameError,\n        lastNameError,\n        emailError,\n        phoneError,\n      });\n      return false;\n    }\n\n    return true;\n  };\n  //form onSubmit handler\n  mySubmitHandler = (event) => {\n    let { history, updateCustomer } = this.props;\n    event.preventDefault();\n    let { subContacts } = this.state;\n    let {\n      match: {\n        params: { customerId },\n      },\n    } = this.props;\n\n    const isValid = this.validate();\n    if (isValid) {\n      let { firstName, lastName, email, phone } = this.state;\n      if (\n        this.state.subContacts[0].name === \"\" &&\n        this.state.subContacts[0].phone === \"\" &&\n        this.state.subContacts[0].email === \"\"\n      ) {\n        subContacts = [];\n      }\n      let updateCustomerObj = {\n        firstName,\n        lastName,\n        phone,\n        email,\n        subContacts,\n      };\n\n      updateCustomer(updateCustomerObj, customerId, () => {\n        history.push(`/customer/detail/${customerId}`);\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className={style.formStyle}>\n        <div className={style.form}>\n          <h3 className={style.head}>Edit Customer</h3>\n          {/* edit customer form */}\n          <div>\n            <form onSubmit={this.mySubmitHandler}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                className={style.styleFormFields}\n                id=\"firstName\"\n                size=\"small\"\n                label=\"First Name\"\n                name=\"firstName\"\n                autoComplete=\"firstName\"\n                autoFocus\n                error={this.state.firstNameError ? true : false}\n                value={this.state.firstName}\n                onChange={this.handleFormInput}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                className={style.styleFormFields}\n                id=\"lastName\"\n                size=\"small\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lastName\"\n                error={this.state.lastNameError ? true : false}\n                value={this.state.lastName}\n                onChange={this.handleFormInput}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                className={style.styleFormFields}\n                size=\"small\"\n                id=\"phone\"\n                label=\"Phone Number\"\n                name=\"phone\"\n                autoComplete=\"phone\"\n                error={this.state.phoneError ? true : false}\n                value={this.state.phone}\n                onChange={this.handleFormInput}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                className={style.styleFormFields}\n                size=\"small\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                error={this.state.emailError ? true : false}\n                value={this.state.email}\n                onChange={this.handleFormInput}\n              />\n            </form>\n            <h5>Alternate Contact</h5>\n            {this.state.subContacts.length > 0 ? (\n              this.state.subContacts.map((x, i) => {\n                return (\n                  <div key={i}>\n                    <form>\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        className={style.styleFormFields}\n                        size=\"small\"\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        autoComplete=\"name\"\n                        value={this.state.subContacts[i].name}\n                        onChange={(e) => this.hanldeContactsInput(e, i)}\n                      />\n\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        className={style.styleFormFields}\n                        size=\"small\"\n                        id=\"phone_number\"\n                        label=\"Phone Number\"\n                        name=\"phone\"\n                        autoComplete=\"phone_number\"\n                        value={this.state.subContacts[i].phone}\n                        onChange={(e) => this.hanldeContactsInput(e, i)}\n                      />\n\n                      <TextField\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        className={style.styleFormFields}\n                        id=\"emailalt\"\n                        label=\"Email Address\"\n                        size=\"small\"\n                        name=\"email\"\n                        autoComplete=\"emailalt\"\n                        value={this.state.subContacts[i].email}\n                        onChange={(e) => this.hanldeContactsInput(e, i)}\n                      />\n                    </form>\n                  </div>\n                );\n              })\n            ) : (\n                <div className={style.alternateContactBtn}>\n                  <div className={style.alternateContact}>\n                    <Button\n                      className={style.btn}\n                      onClick={this.addAlternateContact}\n                    >\n                      Add Alternate Contact\n                    </Button>\n                  </div>\n                </div>\n              )}\n            {this.state.subContacts.length > 0 && (\n              <div className={style.anotherContactBtn}>\n                <div className={style.anotherContact}>\n                  <Button className={style.btn} onClick={this.addContacts}>\n                    Add Another\n                    </Button>\n                </div>\n              </div>\n            )}\n\n            <div className={style.updateBtn}>\n              <Button onClick={this.mySubmitHandler} className={style.button}>\n                Update\n                </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nvar mapStateToProps = (state) => ({\n  customer: state.customers.customer,\n  user: state.users.user,\n});\n\nvar actions = {\n  getCustomer,\n  updateCustomer,\n};\nexport default connect(mapStateToProps, actions)(UpdateCustomer);\n","import React, { useState, useEffect } from \"react\";\nimport style from \"./JobsList.module.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getAllJobs, filterJobsByDate, deleteJob } from \"../../../Redux/Job/jobActions\";\nimport Pagination from \"../../../components/Pagination/Pagination\";\nimport SearchBar from \"../../../components/SearchBar/SearchBar\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { Button, Chip, FormControlLabel, Radio, RadioGroup, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { compose } from \"redux\";\nimport DeleteConfirmation from \"../../../components/DeleteConfirmation/DeleteConfirmation\";\n\n//use material-ui default styles of popover\nconst styles = (theme) => ({\n  popover: {\n    pointerEvents: \"none\",\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n});\n\nconst JobsList = (props) => {\n  //defining state\n  let { getAllJobs, jobs, user } = props;\n  let totalCount = 0;\n  if (jobs) {\n    var { docs } = jobs;\n    totalCount = jobs.total;\n  }\n\n  const [state, setState] = useState({\n    anchorEl: null,\n    openedPopoverId: null,\n    openedDatePopoverId: null,\n    openedAssigneePopoverId: null,\n    currentPage: 1,\n    popoverOpen: false,\n    sortByName: false,\n    recentlyAdded: false,\n    assigneeRequired: false,\n    show: false,\n    showDeleteModal: false,\n    dates: \"\",\n    nearestDate: \"\",\n    jobToConfirm: \"\",\n    modalIndex: \"\",\n    jobToDelete: \"\",\n    value: \"recently added\",\n  });\n\n  useEffect(() => {\n    //fetch all jobs on page load\n    let jobObj = {\n      query: \"\",\n      sort: {\n        assigneeRequired: null,\n        plainTitle: \"\",\n        createdAt: -1,\n      },\n      page: 1,\n    };\n    getAllJobs(jobObj);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handlePageChange = (page) => {\n    //fetch jobs when the page is changed\n    let { getAllJobs } = props;\n    let fetchJobsOnPageChange;\n    //sort the jobList by name in ascending order when sort by name is checked\n    if (state.sortByName === true) {\n      fetchJobsOnPageChange = {\n        query: \"\",\n        sort: {\n          plainTitle: 1,\n          assigneeRequired: null,\n          createdAt: null,\n        },\n        page: page,\n      };\n      setState({\n        ...state,\n        currentPage: page,\n      });\n    }\n    //sort the jobList by recently added  when recentlyAdded is checked\n    else if (state.recentlyAdded === true) {\n      fetchJobsOnPageChange = {\n        query: \"\",\n        sort: {\n          assigneeRequired: null,\n          plainTitle: \"\",\n          createdAt: -1,\n        },\n        page: page,\n      };\n      setState({\n        ...state,\n        currentPage: page,\n      });\n      //sort the jobList by assignee required  when Assignee Required is checked\n    } else if (state.assigneeRequired === true) {\n      fetchJobsOnPageChange = {\n        query: \"\",\n        sort: {\n          assigneeRequired: -1,\n          plainTitle: \"\",\n          createdAt: null,\n        },\n        page: page,\n      };\n      setState({\n        ...state,\n        currentPage: page,\n      });\n    }\n    //sort the list by recently added when no sort is selected and page is changed\n    else {\n      fetchJobsOnPageChange = {\n        query: \"\",\n        sort: {\n          assigneeRequired: null,\n          plainTitle: \"\",\n          createdAt: -1,\n        },\n        page: page,\n      };\n      setState({\n        ...state,\n        currentPage: page,\n      });\n    }\n    getAllJobs(fetchJobsOnPageChange);\n  };\n\n\n  //sort the jobList by by title/recently added/assignee required\n  const handleSort = (e) => {\n    let { getAllJobs } = props;\n    let fetchJobsOnPageChange\n    if (e.target.value === \"title\") {\n      setState({\n        ...state,\n        sortByName: true,\n        assigneeRequired: false,\n        recentlyAdded: false,\n        currentPage: 1,\n      });\n\n      fetchJobsOnPageChange = {\n        query: \"\",\n        sort: {\n\n          plainTitle: 1,\n          assigneeRequired: null,\n          createdAt: null,\n        },\n        page: 1,\n      };\n\n    }\n\n    else if (e.target.value === \"recently added\") {\n\n      setState({\n        ...state,\n        recentlyAdded: true,\n        sortByName: false,\n        assigneeRequired: false,\n        currentPage: 1,\n      });\n\n      fetchJobsOnPageChange = {\n        query: \"\",\n        sort: {\n          assigneeRequired: null,\n          plainTitle: \"\",\n          createdAt: -1,\n        },\n        page: 1,\n      };\n\n    }\n    else if (e.target.value === \"assignee required\") {\n      setState({\n        ...state,\n        assigneeRequired: true,\n        sortByName: false,\n        recentlyAdded: false,\n        currentPage: 1,\n      });\n      fetchJobsOnPageChange = {\n        query: \"\",\n        sort: {\n          assigneeRequired: -1,\n          plainTitle: \"\",\n          createdAt: null,\n        },\n        page: 1,\n      };\n\n    }\n\n    getAllJobs(fetchJobsOnPageChange);\n  };\n\n \n  const handleDateFilter = (e) => {\n    let { filterJobsByDate } = props;\n    let {name,value} = e.target\n    let date = new Date(value);\n    let DateFilters\n    \n    //filter todays(onDate) jobs\n    if (name === \"dates\") {\n      DateFilters = {\n        filters: {\n          dates: date.toDateString(),\n          movedDate: \"\",\n          startYearMonth: \"\",\n          nearestDate: null,\n          sortLast: null,\n        },\n        page: 1,\n      };\n      setState(state => ({\n        ...state,\n        dates: value,\n        currentPage: 1,\n      }))\n    }\n    \n    //filter upcoming jobs\n    else if(name === \"nearestDate\") {\n      DateFilters = {\n        filters: {\n          dates: \"\",\n          startYearMonth: \"\",\n          nearestDate: date.toDateString(),\n          sortLast: null,\n        },\n        page: 1,\n      };\n  \n      setState({\n        ...state,\n        nearestDate: e.target.value,\n        currentPage: 1,\n      });\n    }\n\n\n    filterJobsByDate(DateFilters);\n  };\n\n  \n \n\n  //handle Service Popover open\n  const handleServicePopoverOpen = (event, id) => {\n    setState({\n      ...state,\n      anchorEl: event.currentTarget,\n      openedPopoverId: id,\n    });\n  };\n  //handle Service Popover close\n  const handleServicePopoverClose = () => {\n    setState({\n      ...state,\n      anchorEl: null,\n      openedPopoverId: null,\n    });\n  };\n  //handle Date Popover open\n  const handleDatePopoverOpen = (event, id) => {\n    setState({\n      ...state,\n      anchorEl: event.currentTarget,\n      openedDatePopoverId: id,\n    });\n  };\n  //handle Date Popover close\n  const handleDatePopoverClose = () => {\n    setState({\n      ...state,\n      anchorEl: null,\n      openedDatePopoverId: null,\n    });\n  };\n  //handle Assignee Popover open\n\n  const handleAssigneePopoverOpen = (event, id) => {\n    setState({\n      ...state,\n      anchorEl: event.currentTarget,\n      openedAssigneePopoverId: id,\n    });\n  };\n  //handle Assignee Popover close\n\n  const handleAssigneePopoverClose = () => {\n    setState({\n      ...state,\n      anchorEl: null,\n      openedAssigneePopoverId: null,\n    });\n  };\n\n  const removeJob = () => {\n    //removes job from jobList\n    let { deleteJob } = props;\n    let { currentPage } = state;\n    deleteJob(state.jobToDelete, currentPage);\n    setState({\n      ...state,\n      showDeleteModal: false,\n    });\n  };\n  //open delete modal\n  const openDeleteModal = (i, jobId) => {\n    setState({\n      ...state,\n      modalIndex: i,\n      showDeleteModal: true,\n      jobToDelete: jobId,\n    });\n  };\n  //change handler of radio buttons\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      value: e.target.value,\n    });\n  };\n  //close delete modal\n  const closeDeleteModal = () => {\n    setState({\n      ...state,\n      showDeleteModal: false,\n    });\n  };\n\n  let { currentPage } = state;\n  let { classes } = props;\n  const open = Boolean(state.anchorEl);\n  let { showDeleteModal, dates, nearestDate, value } = state;\n  return (\n    <div>\n      <div className={`${style.toprow}`}>\n        <div className={style.rowContent}>\n          <div>\n            <h3>Jobs List</h3>\n          </div>\n\n          <div>\n            <SearchBar type=\"job\" title=\"Type title or services\" />\n          </div>\n          <div className={`${style.filter}`}>\n            <i\n              className=\"fa fa-filter dropdown-toggle\"\n              href=\"#\"\n              role=\"button\"\n              id=\"dropdownMenuLink\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            ></i>\n            {/* drop-down-menu */}\n            <div\n              className={`dropdown-menu`}\n              aria-labelledby=\"dropdownMenuLink\"\n            >\n              <h5 className=\"dropdown-item\">Sort</h5>\n              <hr />\n\n              <RadioGroup\n                aria-label=\"gender\"\n                name=\"gender1\"\n                value={value}\n                onChange={handleChange}\n\n              >\n                <FormControlLabel\n                  value=\"recently added\"\n                  control={<Radio />}\n                  label=\"Recently Added\"\n                  className=\"dropdown-item\"\n                  onClick={handleSort}\n                />\n\n                <FormControlLabel\n                  value=\"title\"\n                  control={<Radio />}\n                  label=\"Title\"\n                  className=\"dropdown-item\"\n                  onClick={handleSort}\n                />\n                <FormControlLabel\n                  value=\"assignee required\"\n                  control={<Radio />}\n                  label=\"Assignee Required\"\n                  className=\"dropdown-item\"\n                  onClick={handleSort}\n                />\n              </RadioGroup>\n              <hr />\n              <h5 className=\"dropdown-item\">Filters</h5>\n              <hr />\n              <h6 className=\"dropdown-item\">On Date Jobs</h6>\n              <input\n                type=\"date\"\n                name=\"dates\"\n                value={dates}\n                id=\"\"\n                className={style.styleDates}\n                onChange={(e) => handleDateFilter(e)}\n              />\n              <h6 className=\"dropdown-item\">Upcoming Jobs</h6>\n              <input\n                type=\"date\"\n                name=\"nearestDate\"\n                value={nearestDate}\n                id=\"\"\n                className={style.styleDates}\n                onChange={(e) => handleDateFilter(e)}\n              />\n            </div>\n          </div>\n          <div className={style.btnStyle}>\n            <Link to=\"/job/add\" className={style.link}>\n              <Button className={style.btn}>Create New</Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      {docs && docs.length > 0 ? (\n        <div>\n          {/* <div className={style.jobListHeaderContainer}>\n            <div className={style.jobListHeader}>\n              <div>Title</div>\n              <div>Date(s)</div>\n              <div>Assignee</div>\n              <div>Services</div>\n              <div>Status</div>\n              {user && user.role === \"admin\" && <div>Actions</div>}\n            </div>\n          </div> */}\n          <div>\n            {docs.map((job, i) => {\n              return (\n                <div className={style.listContainer} key={i}>\n                  <div className={`${style.listContent}`}>\n                    <Link\n                      key={i}\n                      className={style.styleLink}\n                      to={{\n                        pathname: `/job/detail/${job._id}`,\n                        jobProps: job,\n                      }}\n                    >\n                      <div className={`${style.jobList}`}>\n                        <div\n                          className={`${style.title}\n                          ${style.flex} \n                          ${style.item}`}\n                        >\n                         <div className={`text-muted ${style.heading}`}>{`title: `}</div>\n                         <div className={style.headingSub}>{job.title}</div>\n                         \n                        </div>\n                        <div\n                          className={`${style.date} \n                          ${style.flex} \n                          ${style.item}`}\n                        >\n                          {/* <FontAwesomeIcon\n                            icon={faCalendarAlt}\n                            className={style.icon}\n                          />{\" \"} */}\n                          <div className={`text-muted ${style.heading}`}>{`Date:`}</div>\n                          <span className={`${style.headingSub} ${style.styleSpan}`}>\n                            {/* show 1st item of date array on jobList */}\n                            {job.dates[0].date}\n                            {job.dates.length > 1 && (\n                              <div>\n                                <Typography\n                                  aria-owns={\n                                    open ? \"mouse-over-popover\" : undefined\n                                  }\n                                  aria-haspopup=\"true\"\n                                  onMouseEnter={(e) =>\n                                    handleDatePopoverOpen(e, job._id)\n                                  }\n                                  onMouseLeave={handleDatePopoverClose}\n                                >\n                                  ...\n                                  </Typography>\n\n                                <Popover\n                                  id=\"mouse-over-popover\"\n                                  className={classes.popover}\n                                  classes={{\n                                    paper: classes.paper,\n                                  }}\n                                  open={\n                                    state.openedDatePopoverId === job._id\n                                  }\n                                  anchorEl={state.anchorEl}\n                                  anchorOrigin={{\n                                    vertical: \"bottom\",\n                                    horizontal: \"left\",\n                                  }}\n                                  transformOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"left\",\n                                  }}\n                                  disableRestoreFocus\n                                >\n                                  {job.dates.map((dates, i) => (\n                                    <Typography key={i}>{dates.date}</Typography>\n                                  ))}\n                                </Popover>\n                              </div>\n                            )}\n                          </span>\n                        </div>\n                        <div\n                          className={`${style.assignee} ${style.flex}  ${style.item}`}\n                        ><div className={`text-muted ${style.heading}`}>{`Assignee: `}</div>\n                          <span className={`${style.headingSub} ${style.styleSpan}`}>\n                            {/* <FontAwesomeIcon\n                              icon={faUser}\n                              className={style.icon}\n                            /> */}\n                            \n                            {job.assignee.length > 0\n                              ? job.assignee[0].name\n                              : \"N/A\"}\n\n                            {job.assignee.length > 1 && (\n                              <div>\n                                <Typography\n                                  aria-owns={\n                                    open ? \"mouse-over-popover\" : undefined\n                                  }\n                                  aria-haspopup=\"true\"\n                                  onMouseEnter={(e) =>\n                                    handleAssigneePopoverOpen(e, job._id)\n                                  }\n                                  onMouseLeave={\n                                    handleAssigneePopoverClose\n                                  }\n                                >\n                                  ...\n                                  </Typography>\n\n                                <Popover\n                                  id=\"mouse-over-popover\"\n                                  className={classes.popover}\n                                  classes={{\n                                    paper: classes.paper,\n                                  }}\n                                  open={\n                                    state.openedAssigneePopoverId ===\n                                    job._id\n                                  }\n                                  anchorEl={state.anchorEl}\n                                  anchorOrigin={{\n                                    vertical: \"bottom\",\n                                    horizontal: \"left\",\n                                  }}\n                                  transformOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"left\",\n                                  }}\n                                  disableRestoreFocus\n                                >\n                                  {job.assignee.map((assignee, i) => (\n                                    <Typography key={i}>\n                                      {assignee.name}\n                                    </Typography>\n                                  ))}\n                                </Popover>\n                              </div>\n                            )}\n                          </span>\n                        </div>\n                        <div\n                          className={`${style.services} ${style.flex} ${style.item}`}\n                        ><div className={`text-muted ${style.heading}`}>{`Services: `} </div>\n                          <div className={`${style.headingSub} ${style.styleSpan}`} >\n                            {job.services.length > 0 ? job.services[0].name : \"N/A\"}\n                            {job.services.length > 1 && (\n                              \n                              <div>\n                                \n                                <Typography\n                                  aria-owns={\n                                    open ? \"mouse-over-popover\" : undefined\n                                  }\n                                  aria-haspopup=\"true\"\n                                  onMouseEnter={(e) =>\n                                    handleServicePopoverOpen(e, job._id)\n                                  }\n                                  onMouseLeave={\n                                    handleServicePopoverClose\n                                  }\n                                >\n                                  ...\n                                  </Typography>\n\n                                <Popover\n                                  id=\"mouse-over-popover\"\n                                  className={classes.popover}\n                                  classes={{\n                                    paper: classes.paper,\n                                  }}\n                                  open={\n                                    state.openedPopoverId === job._id\n                                  }\n                                  anchorEl={state.anchorEl}\n                                  anchorOrigin={{\n                                    vertical: \"bottom\",\n                                    horizontal: \"left\",\n                                  }}\n                                  transformOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"left\",\n                                  }}\n                                  disableRestoreFocus\n                                >\n                                  {job.services.map((service, i) => (\n                                    <Typography key={i}>\n                                      {service.name}\n                                    </Typography>\n                                  ))}\n                                </Popover>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                        <div\n                          className={`${style.status} ${style.flex} ${style.item}`}\n                        ><div className={`text-muted ${style.heading}`}>{`Status: `}</div>\n                         <Chip\n                         className={`${style.headingSub} ${style.styleSpan}`}\n                        //  color=\"red\"\n                        //  variant=\"outlined\"\n                         size=\"small\"\n                         label={job.status}\n                         />\n                         \n                        </div>\n                      </div>\n                    </Link>\n                    {user && user.role === \"admin\" && (\n                      <div className={`${style.actions} `}>\n                        <Button\n                        className={style.deleteButton}\n                          onClick={() => openDeleteModal(i, job._id)}\n                        >\n                          Delete\n                          </Button>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          {/* pagination for multiple pages */}\n          <div className={style.stylePagination}>\n            <div className={style.pagination}>\n              <Pagination\n                itemCount={totalCount}\n                pageSize={10}\n                currentPage={currentPage}\n                onPageChange={handlePageChange}\n              />\n            </div>\n          </div>\n        </div>\n      ) : (docs && docs.length == 0 ? <div className=\"text-center\">\n      <img src=\"/images/no-data-found.png\" alt=\"No data found\" />\n    </div> : null\n    )}\n      {/* Modal for delete job */}\n\n      <DeleteConfirmation\n        show={showDeleteModal}\n        handleClose={closeDeleteModal}\n        type=\"job\"\n        deleteItem={removeJob}\n      />\n    </div>\n  );\n}\n\nvar mapStateToProps = (state) => ({\n  jobs: state.jobs.jobList,\n  user: state.users.user\n});\n\nvar actions = {\n  getAllJobs,\n  filterJobsByDate,\n  deleteJob,\n};\n\nexport default compose(\n  connect(mapStateToProps, actions),\n  withStyles(styles)\n)(JobsList);\n","import { Grid, makeStyles, TextField, Typography } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { throttle } from 'lodash';\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\nimport parse from 'autosuggest-highlight/parse';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { connect } from \"react-redux\";\nimport { showMessage } from \"../../Redux/Common/commonActions\";\n\nfunction loadScript(src, position, id) {\n  if (!position) {\n    return;\n  }\n\n  const script = document.createElement('script');\n  script.setAttribute('async', '');\n  script.setAttribute('id', id);\n  script.src = src;\n  position.appendChild(script);\n}\n\nconst autocompleteService = { current: null };\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2),\n  },\n}));\n\n\nconst PlaceSearch = (props) => {\n  const { handleSetLocation, index, locationValue } = props;\n  const classes = useStyles();\n  const [value, setValue] = useState(locationValue);\n  const [inputValue, setInputValue] = useState('');\n  const [options, setOptions] = useState([]);\n  const loaded = useRef(false);\n\n  if (typeof window !== 'undefined' && !loaded.current) {\n    if (!document.querySelector('#google-maps')) {\n      loadScript(\n        //   'https://maps.googleapis.com/maps/api/js?key=AIzaSyBGd00IwQ2wF71fLa-50AWUf7tbvxn_k7s&libraries=places',\n        'https://maps.googleapis.com/maps/api/js?key=AIzaSyBq1rGW21xOD8LbEKP9fN4rQ9hrlkvu1BQ&libraries=places',\n\n        document.querySelector('head'),\n        'google-maps',\n      );\n    }\n\n    loaded.current = true;\n  }\n\n  const fetch = useMemo(\n    () =>\n      throttle((request, callback) => {\n        autocompleteService.current.getPlacePredictions(request, callback);\n      }, 200),\n    [],\n  );\n\n  useEffect(() => {\n    let active = true;\n    setValue(locationValue)\n\n    if (!autocompleteService.current && window.google) {\n      autocompleteService.current = new window.google.maps.places.AutocompleteService();\n    }\n    if (!autocompleteService.current) {\n      return undefined;\n    }\n\n    if (inputValue === '') {\n      setOptions(value ? [value] : []);\n      return undefined;\n    }\n\n    fetch({ input: inputValue, componentRestrictions: { country: \"us\" } }, (results) => {\n      if (active) {\n        let newOptions = [];\n\n        if (value) {\n          newOptions = [value];\n        }\n\n        if (results) {\n          newOptions = [...newOptions, ...results];\n        }\n\n        setOptions(newOptions);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [value, inputValue, fetch, locationValue]);\n  return (\n    <Autocomplete\n      id=\"google-map-demo\"\n      getOptionLabel={(option) => (typeof option === 'string' ? option : option.description)}\n      filterOptions={(x) => x}\n      options={options}\n      autoComplete\n      includeInputInList\n      filterSelectedOptions\n      value={value}\n      onChange={(event, newValue) => {\n        if (newValue && newValue.terms.length > 2) {\n          setOptions(newValue ? [newValue, ...options] : options);\n          setValue(newValue);\n          handleSetLocation(newValue, index)\n        } else {\n          let { showMessage } = props;\n          showMessage(\"Choose location that includes city.\");\n          setOptions(options);\n          setValue('');\n          handleSetLocation('', index)\n        }\n      }}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Add a location\"\n          variant=\"outlined\"\n          size=\"small\"\n          fullWidth />\n      )}\n      renderOption={(option) => {\n        const matches = option.structured_formatting.main_text_matched_substrings;\n        const parts = parse(\n          option.structured_formatting.main_text,\n          matches.map((match) => [match.offset, match.offset + match.length]),\n        );\n\n        return (\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <LocationOnIcon className={classes.icon} />\n            </Grid>\n            <Grid item xs>\n              {parts.map((part, index) => (\n                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                  {part.text}\n                </span>\n              ))}\n\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                {option.structured_formatting.secondary_text}\n              </Typography>\n            </Grid>\n          </Grid>\n        );\n      }}\n    />\n  );\n}\n\nvar actions = {\n  showMessage\n};\n\nexport default connect(null, actions)(PlaceSearch);\n","import {\n  faPlus,\n  faPlusCircle,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n} from \"@material-ui/core\";\nimport { cloneDeep } from \"lodash\";\nimport React, { useState } from \"react\";\n// import Autocomplete from 'react-autocomplete';\nimport PlaceSearch from \"../PlaceSearch/PlaceSearch\";\nimport style from \"./AddLocation.module.css\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nconst AddLocation = ({ locationArr, addLocation, handleLocationChange }) => {\n  const [state, setState] = useState({\n    newProperty: \"\",\n    propertyOptions: [\n      { id: 1, name: \"House\" },\n      { id: 2, name: \"Condominium\" },\n      { id: 3, name: \"Duplex\" },\n      { id: 4, name: \"Trailer\" },\n      { id: 5, name: \"Office\" },\n      { id: 6, name: \"Indoor Storage\" },\n      { id: 7, name: \"Outdoor Storage\" },\n      { id: 8, name: \"Town House\" },\n      { id: 9, name: \"Apartment\" },\n    ],\n  });\n  const initialState = {\n    multiError: \"\",\n  };\n  const validate = () => {\n    let multiError = \"\";\n    if (this.state.locationArr.length === 0) {\n      multiError = \"Location must not be empty\";\n    }\n    if (multiError) {\n      setState({\n        multiError,\n      });\n      return false;\n    }\n    return true;\n  };\n\n  //set the google location in the state\n  const handleSetLocation = (choosenLocation, index) => {\n    let value = choosenLocation ? choosenLocation.description : \"\";\n    let location = cloneDeep(locationArr);\n    location[index].value = value;\n    handleLocationChange(location);\n  };\n\n  //onchange handler of radio buttons\n  const handleInputChange = (e, i) => {\n    let { value } = e.target;\n    let updateLocation = cloneDeep(locationArr);\n    updateLocation[i].type = value;\n    updateLocation[i].default = false;\n    handleLocationChange(updateLocation);\n  };\n\n  //change the state of textbox\n  const changeCheckBoxState = (e, i) => {\n    e.stopPropagation();\n    let prevState = cloneDeep(locationArr);\n    prevState[i].default = !prevState[i].default;\n    handleLocationChange(prevState);\n  };\n\n  const removeLocation = (i) => {\n    let location = cloneDeep(locationArr);\n    location.splice(i, 1);\n    handleLocationChange(location);\n  };\n\n  const propertyChanged = (e, i) => {\n    if (e) {\n      // setState({ ...state, propertyType: newValue.name });\n      let prevState = cloneDeep(locationArr);\n      prevState[i].propertyType = e.name;\n      handleLocationChange(prevState);\n    } else {\n      // setState({ ...state, propertyType: \"\" });\n      let prevState = cloneDeep(locationArr);\n      prevState[i].propertyType = \"\";\n      handleLocationChange(prevState);\n    }\n  };\n\n  const addCustomPropertyType = (e, i) => {\n    e.preventDefault();\n    if (e.target.value) {\n      setState({\n        ...state,\n        newProperty: e.target.value,\n      });\n      let propertyAdded = {\n        name: state.newProperty,\n        id: Math.random() * 10,\n      };\n      if (e.keyCode === 13 && e.target.value) {\n        let propertyOptions = cloneDeep(state.propertyOptions);\n        propertyOptions.push(propertyAdded);\n        setState({\n          ...state,\n          propertyOptions,\n        });\n\n        let prevState = cloneDeep(locationArr);\n        prevState[i].propertyType = e.target.value;\n        handleLocationChange(prevState);\n      }\n    } else {\n      setState({\n        ...state,\n        newProperty: \"\",\n      });\n    }\n  };\n  //function to show all locations\n  const showLocation = (i) => {\n    return (\n      <div className={style.locationInput} key={i}>\n        {/* Radio Buttons */}\n        <div className={style.radioButtons}>\n          <RadioGroup\n            className={style.rowFlex}\n            value={locationArr[i].type}\n            onChange={(e) => handleInputChange(e, i)}\n          >\n            <FormControlLabel\n              value=\"pickup\"\n              name=\"pickup\"\n              control={<Radio className={style.styleRadio} />}\n              label=\"Pickup\"\n            />\n            <FormControlLabel\n              value=\"dropoff\"\n              name=\"dropoff\"\n              control={<Radio className={style.styleRadio} />}\n              label=\"DropOff\"\n            />\n          </RadioGroup>\n        </div>\n\n        {/* Property Type */}\n        <div className={style.propertyType}>\n          <Autocomplete\n            noOptionsText={`Add '${state.newProperty}' to property type`}\n            value={locationArr[i].propertyType}\n            onChange={(event, newValue) => {\n              propertyChanged(newValue, i);\n            }}\n            limitTags={1}\n            id=\"property-tag\"\n            options={state.propertyOptions}\n            getOptionLabel={(option) => (option.name ? option.name : option)}\n            renderInput={(params) => (\n              <TextField\n                onKeyUp={(e) => addCustomPropertyType(e, i)}\n                {...params}\n                required\n                className={style.styleFormFields}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Property Type\"\n                placeholder=\"Property Type\"\n                error={state.multiError ? true : false}\n              />\n            )}\n          />\n        </div>\n        {/* Google Location */}\n        <div className={style.inputField}>\n          <PlaceSearch\n            handleSetLocation={handleSetLocation}\n            index={i}\n            locationValue={locationArr[i].value}\n          />\n        </div>\n        {/* Checkboxes */}\n        {locationArr[i].type === \"pickup\" ? (\n          <div\n            className={locationArr[i].type === \"pickup\" ? style.checkBox : null}\n          >\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={locationArr[i].default}\n                  onClick={(e) => changeCheckBoxState(e, i)}\n                  name=\"checkboxStates\"\n                  className={style.checkBoxTick}\n                />\n              }\n              label=\"Load only/IA\"\n            />\n          </div>\n        ) : locationArr[i].type === \"dropoff\" ? (\n          <div\n            className={\n              locationArr[i].type === \"dropoff\" ? style.checkBox : null\n            }\n          >\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={locationArr[i].default}\n                  onClick={(e) => changeCheckBoxState(e, i)}\n                  name=\"checkboxStates\"\n                  className={style.checkBoxTick}\n                />\n              }\n              label=\"Unload Only\"\n            />\n          </div>\n        ) : null}\n        {i != 0 ?\n        <div className=\"d-flex justify-content-end\">\n          <div className={`${style.TrashIcon} ${style.alignRight}`}>\n            <FontAwesomeIcon\n              icon={faTrash}\n              onClick={() => removeLocation(i)}\n            ></FontAwesomeIcon>\n          </div>\n        </div>\n        : null}\n        \n      </div>\n    );\n  };\n\n  return (\n    <div>\n      {locationArr.map((location, i) => showLocation(i))}\n      {locationArr.length > 0 && (\n        <div className=\"d-flex justify-content-end\">\n          <div\n            onClick={addLocation}\n            className={`${style.plusIcon} ${style.alignRight}`}\n          >\n            <FontAwesomeIcon icon={faPlusCircle} />\n          </div>\n        </div>\n      )}{\" \"}\n      <hr />\n    </div>\n  );\n};\n\nexport default AddLocation;\n","import React, { useState } from 'react'\nimport style from \"./DateAndTime.module.css\"\nimport { cloneDeep } from \"lodash\";\nimport \"date-fns\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n    KeyboardTimePicker,\n} from \"@material-ui/pickers\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faPlusCircle, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst DateAndTime = (props) => {\n\n    let setParentDates = props.setDates;\n    const initialState = props.dates;\n    console.log(initialState)\n    const [dates, setDates] = useState(initialState)\n    //add new Date\n    const addDate = () => {\n        if (dates[0].date && dates[0].time) {\n            let defaulTime = new Date()\n            defaulTime.setHours(9);\n            defaulTime.setMinutes(0);\n            defaulTime.setSeconds(0);\n            setDates([...dates, { date: new Date(), time: defaulTime }]);\n            setParentDates([...dates, { date: new Date(), time: new Date() }])\n        }\n    };\n    //remove the selected Date\n    const removeDate = (i) => {\n        let datesArr = cloneDeep(dates);\n        datesArr.splice(i, 1);\n        setDates(datesArr);\n        setParentDates(datesArr)\n    };\n    //onChange handler of dates\n    const handleStartDate = (date, i) => {\n        let newState = cloneDeep(dates);\n        newState[i].date = date;\n        setDates(newState);\n        setParentDates(newState)\n    };\n\n    //onChange handler of time\n    const handleTimeSelect = (date, i) => {\n        console.log(date)\n        let newState = cloneDeep(dates);\n        newState[i].time = date;\n        setDates(newState);\n        setParentDates(newState)\n    };\n\n    return (\n        <div className={style.DateAndTime}>\n            {/* date and time */}\n            <hr />\n            <div className={style.DateTimeInput}>\n                {dates && dates.map((x, i) => {\n                    return (\n                        <div className={style.mainDate} key={i}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <Grid>\n                                    <KeyboardDatePicker\n                                        minDate={new Date()}\n                                        inputVariant=\"outlined\"\n                                        required\n                                        fullWidth\n                                        // margin=\"normal\"\n                                        size=\"small\"\n                                        id=\"date-picker-dialog\"\n                                        format=\"MM/dd/yyyy\"\n                                        className={style.styleFormFields}\n                                        value={dates[i].date}\n                                        onChange={(e) => handleStartDate(e, i)}\n                                        KeyboardButtonProps={{\n                                            \"aria-label\": \"change date\",\n                                        }}\n                                    />\n                                    <KeyboardTimePicker\n                                        // margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        inputVariant=\"outlined\"\n                                        id=\"time-picker\"\n                                        size=\"small\"\n                                        // className={style.styleFormFields}\n                                        // label=\"Time picker\"\n                                        value={dates[i].time}\n                                        onChange={(e) => handleTimeSelect(e, i)}\n                                        KeyboardButtonProps={{\n                                            'aria-label': 'change time',\n                                        }}\n                                    />\n                                    {i != 0 ?\n                                        <div className={style.centeredIcon}\n                                            onClick={() => removeDate(i)}>\n                                            <FontAwesomeIcon icon={faTrash} />\n                                        </div> : null}\n                                </Grid>\n                            </MuiPickersUtilsProvider>\n\n                        </div>\n                    );\n                })}\n                <div className=\"d-flex justify-content-end\">\n                    <div onClick={addDate}\n                        className={`${style.plusIcon} ${style.alignRight}`}>\n                        <FontAwesomeIcon icon={faPlusCircle} />\n                    </div>\n                </div>\n\n            </div>\n            <hr />\n        </div>\n    )\n}\nexport default DateAndTime\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { cloneDeep } from \"lodash\";\n\nimport { confirmJob } from \"../../../Redux/Job/jobActions\";\nimport { connect } from \"react-redux\";\nimport {\n  TextField,\n} from \"@material-ui/core\";\nimport style from \"./JobConfirmation.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarker } from \"@fortawesome/free-solid-svg-icons\";\nimport AddLocation from \"../../../components/AddLocation/AddLocation\";\nimport DateAndTime from \"../../../components/DateAndTime/DateAndTime\";\n\n//material-ui styles\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n//steps of stepper\nfunction getSteps() {\n  return [\n    {\n      label: \"Confirm Date and Time\",\n      color: \"#f50057\",\n    },\n    {\n      label: \"Confirm Contact Info\",\n      color: \"#f50057\",\n    },\n    {\n      label: \"Confirm PU/DO Addresses\",\n      color: \"#f50057\",\n    },\n    {\n      label: \"Deposit\",\n      color: \"#f50057\",\n    },\n  ];\n}\n\nconst useIconStyles = makeStyles(\n  (() => {\n    return getSteps().reduce((styles, step, index) => {\n      styles[index] = { color: `${step.color} !important` };\n      return styles;\n    }, {});\n  })()\n);\nfunction JobConfirmation(props) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const [data, setData] = useState(\"\");\n  const [payment, setPayment] = useState({});\n  const steps = getSteps();\n  const iconClasses = useIconStyles();\n\n  useEffect(() => {\n    //fetch jobData on ComponentDidMount\n    let job = cloneDeep(props.data);\n    //load stripe\n    loadStripe();\n    let parsedDates = job.dates.map((x) => {\n      return {\n        date: Date.parse(x.date),\n        time: x.time\n      }\n    });\n    job.dates = parsedDates;\n    job.startTime = job.startTime ? new Date(job.startTime) : '';\n    setData(job);\n  }, [props.data]);\n\n  //handler calls when next button is clicked\n  const handleNext = () => {\n    if (activeStep === steps.length - 1) {\n      pay();\n    } else {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    }\n  };\n  //handler calls when back button is pressed\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const handlePhoneNumberInput = (value, previousValue) => {\n    // return nothing if no value\n    if (!value) return value;\n\n    // only allows 0-9 inputs\n    const currentValue = value.replace(/[^\\d]/g, '');\n    const cvLength = currentValue.length;\n\n    if (!previousValue || value.length > previousValue.length) {\n\n      // returns: \"x\", \"xx\", \"xxx\"\n      if (cvLength < 4) return currentValue;\n\n      // returns: \"(xxx)\", \"(xxx) x\", \"(xxx) xx\", \"(xxx) xxx\",\n      if (cvLength < 7) return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`;\n\n      // returns: \"(xxx) xxx-\", (xxx) xxx-x\", \"(xxx) xxx-xx\", \"(xxx) xxx-xxx\", \"(xxx) xxx-xxxx\"\n      return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3, 6)}-${currentValue.slice(6, 10)}`;\n    }\n  }\n\n  const handleSubPhoneNumberInput = (value, previousState, i) => {\n    let customer = { ...previousState.customer };\n    let previousValue = customer.phone;\n    customer.phone = handlePhoneNumberInput(value, previousValue)\n    return customer\n  }\n\n  //onChange handler of formField\n  const handleFormInput = (event) => {\n    let { name, value } = event.target;\n    let updatedCustomer = cloneDeep(data);\n    if (name === 'phone') {\n      setData(prevState => ({ ...updatedCustomer, customer: handleSubPhoneNumberInput(value, prevState) }))\n    } else {\n      updatedCustomer.customer[name] = value;\n      setData(updatedCustomer);\n    }\n  };\n\n  //add location\n  const addLocation = (e) => {\n    e.stopPropagation();\n    let newData = { ...data };\n    newData.locations.push({ type: \"\", value: \"\", default: false });\n    setData(newData);\n  };\n\n\n  //load stripe\n  const loadStripe = () => {\n    if (!window.document.getElementById(\"stripe-script\")) {\n      let s = window.document.createElement(\"script\");\n      s.id = \"stripe-script\";\n      s.type = \"text/javascript\";\n      s.src = \"https://js.stripe.com/v2/\";\n      s.onload = () => {\n        window[\"Stripe\"].setPublishableKey(\n          \"pk_test_51HfgSrIoqQ2sulu0x4TK6K2atQHghj1iIthjdrpD9qkE1yLx8nEFEYysxJrXn16tz6caSn1kMFFD6YnUl2MK05C800tBcU5bIH\"\n        );\n      };\n      window.document.body.appendChild(s);\n    }\n  };\n  //handler of input fields\n  const changeHandler = (e) => {\n    let { name, value } = e.target;\n    let updatedPayment = cloneDeep(payment);\n    updatedPayment[name] = value;\n    setPayment(updatedPayment);\n  };\n  //payment handler\n  const pay = (e) => {\n    let { confirmJob, job } = props;\n    window.Stripe.card.createToken(\n      {\n        number: payment.number,\n        exp_month: payment.exp_month,\n        exp_year: payment.exp_year,\n        cvc: payment.cvc,\n      },\n      (status, response) => {\n        if (status === 200) {\n          let stringDates = data.dates.map((x) => {\n            \n            if (typeof x.date === \"number\") {\n              return { date: new Date(x.date).toDateString(), time: x.time };\n            } else {\n              return { date: x.date.toDateString(), time: x.time };\n            }\n          });\n          let obj = {\n            paidInCash: false,\n            stripeToken: response.id,\n            amount: payment.amount,\n            jobToUpdate: data._id,\n            dates: stringDates.filter(Boolean),\n            startTime: data.startTime,\n            phone: data.customer.phone,\n            locations: data.locations.filter(\n              (x) => x.value !== \"\"\n            ),\n            email: data.customer.email,\n            customerId: data.customer._id,\n          };\n          confirmJob(obj);\n          setData(job);\n          props.close();\n        }\n      }\n    );\n  };\n  //without payment submission\n  const handleSubmitWithoutPay = () => {\n    let { confirmJob, job } = props;\n    let stringDates = data.dates.map((x) => {\n     \n      if (typeof x.date === \"number\") {\n        return { date: new Date(x.date).toDateString(), time: x.time };\n      } else {\n        return { date: x.date.toDateString(), time: x.time };\n      }\n    });\n    let obj = {\n      paidInCash: true,\n      jobToUpdate: data._id,\n      dates: stringDates.filter(Boolean),\n      startTime: data.startTime.toString(),\n      phone: data.customer.phone,\n      locations: data.locations.filter((x) => x.value !== \"\"),\n      email: data.customer.email,\n      customerId: data.customer._id,\n    };\n    confirmJob(obj);\n    setData(job);\n    props.close();\n  };\n  //reset locations\n\n  const handleLocationChange = (locations) => {\n    let newData = { ...data }\n    newData.locations = locations\n    setData(newData);\n  }\n\n  const setDates = (dates) => {\n    let newData = cloneDeep(data);\n    newData.dates = dates;\n    setData(newData);\n  }\n\n  const getStepContent = (step) => {\n    switch (step) {\n      case 0:\n        return (\n          <form>\n            {data ? <DateAndTime dates={data.dates} setDates={setDates} /> : null}\n          </form>\n        );\n      case 1:\n        return (\n          <form>\n            {data && data.customer && (\n              <div>\n                {/* <label htmlFor=\"exampleInputEmail1\">First Name</label> */}\n                <TextField\n                  variant=\"outlined\"\n                  className={style.styleFormFields}\n                  required\n                  fullWidth\n                  size=\"small\"\n                  id=\"name\"\n                  label=\"First Name\"\n                  name=\"firstName\"\n                  value={data.customer.firstName}\n                  onChange={handleFormInput}\n                />\n\n                {/* <label htmlFor=\"exampleInputEmail1\">Last Name</label> */}\n                <TextField\n                  variant=\"outlined\"\n                  className={style.styleFormFields}\n                  required\n                  fullWidth\n                  size=\"small\"\n                  id=\"name\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  value={data.customer.lastName}\n                  onChange={handleFormInput}\n                />\n\n                {/* <label htmlFor=\"exampleInputEmail1\">Phone Number</label> */}\n                <TextField\n                  variant=\"outlined\"\n                  className={style.styleFormFields}\n                  required\n                  fullWidth\n                  size=\"small\"\n                  id=\"name\"\n                  label=\"Phone Number\"\n                  name=\"phone\"\n                  value={data.customer.phone}\n                  onChange={handleFormInput}\n                />\n\n                {/* <label htmlFor=\"exampleInputEmail1\">Email address</label> */}\n                <TextField\n                  variant=\"outlined\"\n                  className={style.styleFormFields}\n                  required\n                  fullWidth\n                  size=\"small\"\n                  id=\"name\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  value={data.customer.email}\n                  onChange={handleFormInput}\n                />\n              </div>\n            )}\n          </form>\n        );\n      case 2:\n        return (\n          <div>\n            {/* {data.locations && data.locations.length === 0 && (\n              <div className={`${style.locationBtn} ${style.flex}`}>\n                <Button\n                  className={`${style.button}`}\n                  onClick={(e) => addLocation(e)}\n                >\n                  <FontAwesomeIcon\n                    icon={faMapMarker}\n                    className={style.locationIcon}\n                  />\n                  Add Location\n                </Button>\n              </div>\n            )} */}\n\n            {/* {data.locations && data.locations.length > 0 &&\n            } */}\n              <AddLocation locationArr={data.locations} addLocation={addLocation} handleLocationChange={handleLocationChange} />\n\n\n\n          </div>\n        );\n      case 3:\n        return (\n          <div>\n            <form>\n              <TextField\n                variant=\"outlined\"\n                className={style.styleFormFields}\n                required\n                fullWidth\n                size=\"small\"\n                id=\"cardno\"\n                label=\"Card Number\"\n                name=\"number\"\n                onChange={changeHandler}\n              />\n\n              <p>Testing Card #: 4242424242424242</p>\n              <div className={style.currentYear}>\n                <div>\n                  <TextField\n                    variant=\"outlined\"\n                    className={style.styleFormFields}\n                    required\n                    fullWidth\n                    size=\"small\"\n                    id=\"month\"\n                    label=\"Month\"\n                    name=\"exp_month\"\n                    onChange={changeHandler}\n                  />\n                </div>\n\n                <div>\n                  <TextField\n                    variant=\"outlined\"\n                    className={style.styleFormFields}\n                    required\n                    fullWidth\n                    size=\"small\"\n                    id=\"year\"\n                    label=\"Year\"\n                    name=\"exp_year\"\n                    onChange={changeHandler}\n                  />\n                </div>\n              </div>\n\n              <TextField\n                variant=\"outlined\"\n                className={style.styleFormFields}\n                required\n                fullWidth\n                size=\"small\"\n                id=\"name\"\n                label=\"CVC\"\n                name=\"cvc\"\n                onChange={changeHandler}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                className={style.styleFormFields}\n                required\n                fullWidth\n                size=\"small\"\n                id=\"amount\"\n                label=\"Amount\"\n                name=\"amount\"\n                onChange={changeHandler}\n              />\n            </form>\n            <div className={style.skipSubmitBtn}>\n              <Button\n                className={`${style.button} `}\n                onClick={handleSubmitWithoutPay}\n              >\n                Skip And Submit\n              </Button>\n            </div>\n          </div>\n        );\n      default:\n        return \"Unknown step\";\n    }\n  };\n  return (\n    <div className={`${classes.root} ${style.confirmJobModal}`}>\n      <div className={style.stepperLabels}>\n        <Stepper activeStep={activeStep}>\n          {steps.map(({ label, color }, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel\n                  className={style.styleRadio}\n                  {...labelProps}\n                  StepIconProps={{ classes: { root: iconClasses[index] } }}\n                >\n                  {label}\n                </StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n      </div>\n      {activeStep === steps.length ? (\n        <div className={style.stepperContent}>\n          <Typography className={classes.instructions}>\n            All steps completed - you&apos;re finished\n          </Typography>\n          <Button onClick={handleReset} className={classes.button}>\n            Reset\n          </Button>\n        </div>\n      ) : (\n          <div className={style.stepperContent}>\n            <div>{getStepContent(activeStep)}</div>\n            <div className={style.backAndSubmitBtn}>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={\n                  activeStep === 0\n                    ? style.back\n                    : `${style.back} ${style.backStyles}`\n                }\n              >\n                Back\n            </Button>\n\n              <Button onClick={handleNext} className={style.next}>\n                {activeStep === steps.length - 1 ? \"Submit\" : \"Next\"}\n              </Button>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n}\n\nvar actions = {\n  confirmJob,\n};\nvar mapStateToProps = (state) => ({\n  job: state.jobs.job,\n});\nexport default connect(mapStateToProps, actions)(JobConfirmation);\n","import React from 'react'\nimport style from \"./JobConfirmationModal.module.css\"\nimport { Modal } from \"react-bootstrap\";\nimport JobConfirmation from '../../pages/Job/JobConfirmation/JobConfirmation';\n\nconst JobConfirmationModal = ({job,show,handleCloseAndRefresh,closeJobConfirmationModal}) => {\n    return (\n        <div>\n                {/* Confirmtation Modal */}\n          <Modal\n            dialogClassName={`${style.modal}`}\n            show={show}\n            onHide={closeJobConfirmationModal}\n            centered\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>Booking Confirmation</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <JobConfirmation data={job} close={handleCloseAndRefresh} />\n            </Modal.Body>\n          </Modal>\n        </div>\n    )\n}\n\nexport default JobConfirmationModal\n","import React from \"react\";\nimport style from \"./JobDetails.module.css\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getJob } from \"../../../Redux/Job/jobActions\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Chip } from \"@material-ui/core\";\nimport parse from \"html-react-parser\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faMapMarker, faMapMarkerAlt, faMobile, faUser, faUserShield } from \"@fortawesome/free-solid-svg-icons\";\nimport ActivitiesModal from \"../../../components/ActivitiesModal/ActivitiesModal\";\nimport JobConfirmationModal from \"../../../components/JobConfirmationModal/JobConfirmationModal\";\nimport { Fragment } from \"react\";\n\nconst JobDetails = (props) => {\n  let { job } = props;\n\n  let {\n    match: {\n      params: { jobId },\n    },\n  } = props;\n  const [show, setShow] = useState(false);\n  const [showBooking, setShowBooking] = useState(false);\n  let { getJob } = props;\n\n  useEffect(() => {\n    //fetch id on componentDidMount\n    getJob(jobId);\n  }, [getJob, jobId]);\n\n  //show activities modal\n  const handleShow = () => {\n    setShow(true);\n  };\n  //close activities modal\n  const handleClose = () => {\n    setShow(false);\n  };\n  const handleCloseAndRefresh = () => {\n    setShowBooking(false);\n    getJob(jobId);\n  };\n  // close jobConfirmation modal\n  const closeJobConfirmationModal = () => {\n    setShowBooking(false)\n  }\n  // let truckArr = job.trucks.map((x,i)=>{\n  // })\n  return (\n    <div className={style.jobEditContainer}>\n      {job ? (\n        // defining containerContent CUSTOMER\n        <div className={style.containerContent}>\n          <div className={style.cards}>\n            <div className={`card ${style.customerCard}`}>\n              <div className=\"card-body\">\n                <h5 className=\"card-title font-weight-bold\">Customer</h5>\n                <h6 className=\"card-subtitle mb-2 text-capitalize\">\n                  <Link\n                    className={style.link}\n                    to={`/customer/detail/${job.customer._id}`}\n                  >\n                    <FontAwesomeIcon icon={faUser} />{\" \"}\n                    {job.customer.firstName} {job.customer.lastName}\n                  </Link>\n                </h6>\n                <div className=\"card-text mb-2\">\n                  <FontAwesomeIcon icon={faMobile} />{\" \"}\n                  {job.customer.phone}</div>\n                <div className=\"card-text mb-2\">\n                  <FontAwesomeIcon icon={faEnvelope} />{\" \"}\n                  {job.customer.email}</div>\n              </div>\n            </div>\n            <div>\n              <div>\n                {/* assinee card */}\n                <div className={`card ${style.assigneeCard}`}>\n                  <div className=\"card-body text-capitalize\">\n                    <h5 className=\"card-title font-weight-bold\">Assignees</h5>\n                    {job.assignee.length > 0 ? (\n                      job.assignee.map((assignee, i) => (\n                        <div key={i} className={style.assigneehead}>\n\n                          <li><FontAwesomeIcon icon={faUserShield} />{\" \"}{assignee.name}</li>\n                        </div>\n                      ))\n                    ) : (\n                      <div>\n                        {`Not Assigned`}</div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* activity button and modal */}\n            <div className={`${style.activityBtn}  ${style.center}`}>\n              <Button\n                className={style.button}\n                type=\"button\"\n                onClick={handleShow}\n              >\n                Activities\n              </Button>\n\n              <Link to={`/job/update/${jobId}`}>\n                <Button className={`${style.button}`} type=\"button\">\n                  Edit\n                  </Button>\n              </Link>\n\n\n              {job.status !== \"booked\" ? (\n                <div className={style.jobBookBtn}>\n                  <Button\n                    className={style.button}\n                    onClick={() => setShowBooking(true)}\n                    type=\"button\">\n                    Book\n                  </Button>\n                </div>\n              ) : null}\n            </div>\n\n          </div>{\" \"}\n\n          {/* jobDetails section */}\n          <div className={` card ${style.jobDetail}`}>\n            <div className={style.jobHeader}>\n              <h5>{job.title}</h5>\n              <div className={style.jobHeader___childs}>\n                <div className={`text-muted ${style.jobDates}`}>\n                  {job.dates.map((x, i) =>\n                    i === 0 ? (\n                      <span key={i}>{x.date}</span>\n                    ) : (\n                      <span key={i}> | {x.date} </span>\n                    )\n                  )}\n                </div>\n                <div className={style.job___IdStatus}>\n                  <div>\n                    {`Job Id: `}\n                    <Chip\n                      size=\"small\"\n                      label={job.jobId}\n                      clickable\n                      style={{color:\"white\" ,backgroundColor:\"var(--color-blue)\"}}\n                    />\n                  </div>\n                  <div>\n                    {`Status: `}\n                    <Chip\n                      size=\"small\"\n                      label={job.status}\n                      clickable\n                      style={{color:\"white\" ,backgroundColor:\"var(--color-blue)\"}}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className={style.service}>\n              <div>\n                <div><h5>Job Type:</h5></div>\n                <Chip\n                  clickable\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  label={job.jobType}\n                /></div>\n              <div>\n                <div><h5>Services:</h5></div>\n                {job.services.map((service, i) => (\n                  <Chip\n                    key={i}\n                    size=\"small\"\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    label={service.name}\n                    clickable\n                  />\n                ))}</div>\n\n\n            </div>\n\n            <div className={style.numbers}>\n              <div>\n                <h5>Movers Required:</h5>\n                <Chip\n                  clickable\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={job.assigneeRequired}\n                />\n              </div>\n              <div>\n                <h5>Price:</h5>\n                <Chip\n                  clickable\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={`$${job.price}`}\n                />\n              </div>\n\n            </div>\n            {/* Trucks */}\n            <div>\n              {job.trucks.length > 0 ? <Fragment><h5>Truck Details:</h5>\n                {job.trucks.map((x, i) =>\n                  <div className={style.truckSection} key={i}>\n                    <div>\n\n                      {`Type: `}\n                      <Chip\n                        className={style.truckSectionType}\n                        clickable\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label={x.type}\n                      />\n                    </div>\n                    <div>\n                      {`No. Of Trucks: `}\n                      <Chip\n                        className={style.truckSectionNum}\n                        clickable\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label={x.number}\n                      />\n                    </div>\n                  </div>\n                )}\n              </Fragment> : null}\n            </div>\n            <div className={style.jobDescription}>\n              <div className={style.jobDescription___title}>\n                {`Job Description: `}\n              </div>\n              <div className={style.jobDescription___text}>\n                {parse(job.description)}\n              </div>\n            </div>\n\n            {job.locations && (\n              <div className={job.locations.length > 0 ? `card ${style.locations}` : `${style.locations}`}>\n                {job.locations.map((list, i) =>\n                  list.type === \"pickup\" ? (\n                    <div className={style.pickup} key={i}>\n                      <FontAwesomeIcon icon={faMapMarker} />{\" \"}\n                      <span className={style.locationType}>{`Pickup: `} </span>{\" \"}\n                      <div className={style.location}>\n                        {list.value} {list.default ? '(Load Only / IA)' : null}\n                      </div>\n                      {list.propertyType ?\n                      (<div className=\"text-muted\">\n                        {`Property Type: `}\n                        <Chip\n                          clickable\n                          color=\"primary\"\n                          variant=\"outlined\"\n                          size=\"small\"\n                          label={list.propertyType}\n                        /></div>): null\n                      } \n                    </div>\n                  ) : list.type === \"dropoff\" ? (\n                    <div className={style.dropoff} key={i}>\n                      <FontAwesomeIcon icon={faMapMarkerAlt} />{\" \"}\n                      <span className={style.locationType}>{`Dropoff: `}</span>\n                      <div className={style.location}>{list.value} {list.default ? '(Unload Only)' : null}</div>\n                      {list.propertyType ?\n                      (<div className=\"text-muted\">\n                        {`Property Type: `}\n                        <Chip\n                          clickable\n                          color=\"primary\"\n                          variant=\"outlined\"\n                          size=\"small\"\n                          label={list.propertyType}\n                        /></div>): null\n                      } \n                      \n                    \n                    </div>\n                  ) : <div className={style.locations}>\n                    \n                    <div className=\"font-weight-bold \">{`Location: `}</div> {list.value}                   \n                  </div>\n                )}\n                \n              </div>\n            )}\n            {job.note.length !== 0 && (\n              <div className={style.notes}>\n                <div className={style.notes___title}>\n                  <h5>Notes:</h5>\n                </div>\n                {job.note.map((x) => (\n                  <div className={style.notes___text}>{x.text}</div>\n                ))}\n              </div>\n            )}\n\n          </div>\n          <ActivitiesModal\n            show={show}\n            activities={job.activities}\n            handleClose={handleClose}\n          />\n\n          <JobConfirmationModal job={job} show={showBooking} handleCloseAndRefresh={handleCloseAndRefresh} closeJobConfirmationModal={closeJobConfirmationModal} />\n        </div>\n      ) : null}\n    </div>\n  );\n};\nvar mapStateToProps = (state) => ({\n  job: state.jobs.job,\n});\nvar actions = {\n  getJob,\n};\n\nexport default connect(mapStateToProps, actions)(JobDetails);\n","import { CellMeasurer, CellMeasurerCache, List } from \"react-virtualized\";\nimport React, { useRef, useState } from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { TextField } from \"@material-ui/core\";\nimport style from \"./VirtualizedAutocomplete.module.css\"\n\nconst VirtualizedAutocomplete = (props) => {\n  const cache = useRef(\n    new CellMeasurerCache({\n      fixedWidth: true,\n      defaultHeight: 100,\n    })\n  );\n  const [virtualizedState, setVirtualizedState] = useState({\n    selection: \"\",\n    data: props.options,\n  });\n  const onSelect = (item) =>\n    setVirtualizedState((prevState) => ({ ...prevState, selection: item }));\n\n  const renderItem = (item) => {\n    return (\n      <div>\n        {\" \"}\n        {item.firstName} {item.lastName} ({item.email})\n      </div>\n      \n    );\n  };\n  const renderJob = (item) => {\n    return (\n      <div>\n        {item.title} ({item.status})\n      </div>\n    );\n  };\n\n  const renderMenu = (items, searchingFor, autocompleteStyle) => {\n    cache.clearAll();\n\n    const rowRenderer = ({ key, index, parent, style }) => {\n      const Item = items[index];\n      const onMouseDown = (e) => {\n        if (e.button === 0) {\n          Item.props.onClick(e);\n        }\n      };\n\n      return (\n        <CellMeasurer cache={cache} key={key} parent={parent} rowIndex={index}>\n          {React.cloneElement(Item, {\n            style: {\n              ...style,\n              height: \"auto\",\n              whiteSpace: \"pre-wrap\",\n              wordBreak: \"break-word\",\n              borderBottom: \"1px solid grey\",\n              padding: \"5px\",\n              boxSizing: \"border-box\",\n            },\n            key: key,\n            onMouseEnter: null,\n            onMouseDown: onMouseDown,\n          })}\n        </CellMeasurer>\n      );\n    };\n\n    return (\n      <List\n        rowHeight={cache.rowHeight}\n        height={207}\n        rowCount={items.length}\n        rowRenderer={rowRenderer}\n        width={autocompleteStyle.minWidth || 0}\n        style={{\n          position: \"absolute\",\n          backgroundColor: \"white\",\n          border: \"1px solid black\",\n          height: \"auto\",\n          maxHeight: \"207px\",\n          overflowY: \"scroll\",\n          display: items.length ? \"block\" : \"none\",\n        }}\n      />\n    );\n  };\n  return (\n    <div>\n      {props.textField ? (\n        <Autocomplete\n        \n          value={props.value}\n          size=\"small\"\n          onSelect={onSelect}\n          renderMenu={renderMenu}\n          onChange={(event, newValue) => {\n            props.setSelectedCustomerJobs(newValue); // Get the customer and get job\n          }}\n          options={props.options}\n          \n          autoHighlight\n          getOptionLabel={(option) => (option.title ? option.title : option)}\n          renderOption={renderJob}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              required\n              label=\"Choose a job\"\n              fullWidth\n              className={style.styleFormFields}\n              variant=\"outlined\"\n              inputProps={{\n                ...params.inputProps,\n                autoComplete: \"off\", // disable autocomplete and autofill\n              }}\n            />\n          )}\n        />\n      ) : (\n        <Autocomplete\n          id=\"virtualize-demo\"\n          noOptionsText={`Add '${props.optionTextValue}' as Customer`}\n          disableListWrap\n          onChange={(event, newValue) => {\n            props.getCustomerJobs(newValue); // Get the customer and get job\n          }}\n          size=\"small\"\n          value={props.value}\n          onSelect={onSelect}\n          renderMenu={renderMenu}\n          options={props.options}\n          autoHighlight\n          getOptionLabel={(option) =>\n            option.firstName ? option.firstName + \" \" + option.lastName : option\n          }\n          renderOption={renderItem}\n          renderInput={(params) => (\n            <TextField\n              required\n              autoFocus\n              {...params}\n              onKeyUp={props.addNewCustomer}\n              variant=\"outlined\"\n              label=\"Choose a Customer\"\n              size=\"small\"\n              fullWidth\n              inputProps={{\n                ...params.inputProps,\n                autoComplete: \"off\", // disable autocomplete and autofill\n              }}\n            />\n          )}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default VirtualizedAutocomplete;\n","import React, { useState } from 'react'\nimport style from \"./Truck.module.css\";\nimport { cloneDeep } from \"lodash\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport {\n    InputLabel,\n    MenuItem,\n    Button,\n    Select,\n    TextField,\n} from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faPlusCircle, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Truck = (props) => {\n\n    // truck options initial state\n    const truckOptions = [\"Pickup Truck\", \"Cargo Van\", \"15 ft truck\", \"17 ft truck\", \"20 ft truck\", \"26 ft truck\"]\n    const [truckOption, setTruckOption] = useState(truckOptions)\n   \n    const initialState = props.trucks;\n    const [trucks, setTrucks] = useState(initialState)\n    \n    // add new truck\n    const addTruck = () => {\n        if (trucks[0].type && trucks[0].number) {\n            \n            setTrucks([...trucks, { type: \"\", number: \"\" }]);\n            props.setTrucks([...trucks, { type: \"\", number: \"\" }])\n        }\n    };\n    // remove truck\n    const removeTruck = (i) => {\n        let truckArr = cloneDeep(trucks);\n        truckArr.splice(i, 1);\n        setTrucks(truckArr);\n        props.setTrucks(truckArr)\n    };\n\n    // Handle trucks input change\n    const handleTrucksInput = (e, i, inputType) => {\n        \n        let updatedTrucks = cloneDeep(trucks);\n        let value = e.target.value;\n        updatedTrucks[i][inputType] = value;\n        if (inputType == 'type') {\n            updatedTrucks[i].number = 1;\n        }\n        setTrucks(updatedTrucks);\n        props.setTrucks(updatedTrucks)\n\n    }\n\n    return (\n        <div>\n            <hr />\n            <div className={style.movers}>\n                {trucks && trucks.map((x, i) => {\n                    \n                    return (\n                        <div className={style.moversChild} key={i}>\n                            <div className={style.styleFormFields}>\n                                <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">\n                                        Truck Type\n                                    </InputLabel>\n                                    <Select\n                                        labelId=\"demo-simple-select-outlined-label\"\n                                        id=\"demo-simple-select-outlined\"\n                                        value={trucks[i].type}\n                                        onChange={(e) => handleTrucksInput(e, i, 'type')}\n                                        label=\"Truck Size\"\n                                        name=\"truckSize\"\n                                    >\n                                        <MenuItem value={\"None\"} disabled>None</MenuItem>\n                                        {truckOption.map((x, i) => <MenuItem key={i} value={x}>{x}</MenuItem>)}\n                                    </Select>\n                                </FormControl>\n\n                                <TextField\n                                    type=\"number\"\n                                    InputProps={{\n                                        inputProps: {\n                                            min: 1\n                                        }\n                                    }}\n                                    variant=\"outlined\"\n\n                                    // required\n                                    fullWidth\n                                    size=\"small\"\n                                    id=\"truck\"\n                                    label=\"No. of Trucks\"\n                                    autoComplete=\"Trucks\"\n                                    name=\"truck\"\n                                    value={trucks[i].number}\n\n                                    // error={this.state.assigneeRequiredError ? true : false}\n                                    onChange={(e) => handleTrucksInput(e, i, 'number')}\n                                />\n                                <div>{i != 0 ?\n                                    <div className={style.centeredIcon}\n                                        onClick={() => removeTruck(i)}>\n                                        <FontAwesomeIcon icon={faTrash} />\n                                    </div> : null}\n                                </div>\n\n                            </div>\n                        </div>\n                    );\n                })}\n                <div className=\"d-flex justify-content-end\">\n                    <div onClick={addTruck}\n                        className={`${style.plusIcon} ${style.alignRight}`}>\n                        <FontAwesomeIcon icon={faPlusCircle} />\n                    </div>\n                </div>\n            </div>\n            <hr />\n        </div>\n    )\n}\n\nexport default Truck\n","import React, { Component } from \"react\";\nimport style from \"./CreateJob.module.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { createJob } from \"../../../Redux/Job/jobActions\";\nimport { connect } from \"react-redux\";\nimport { cloneDeep, uniqBy } from \"lodash\";\nimport {\n  InputLabel,\n  MenuItem,\n  Button,\n  Select,\n  TextField,\n\n} from \"@material-ui/core\";\nimport \"date-fns\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { getCustomersAndJobs } from \"../../../Redux/Claim/claimActions\";\nimport { Modal } from \"react-bootstrap\";\nimport CreateCustomer from \"../../Customer/CreateCustomer/CreateCustomer\";\nimport { resetJobForm, setJobForm } from \"../../../Redux/PersistForms/formActions\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport draftToHtml from \"draftjs-to-html\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport AddLocation from \"../../../components/AddLocation/AddLocation\";\nimport VirtualizedAutocomplete from \"../../../components/VirtualizedAutocomplete/VirtualizedAutocomplete\";\nimport DateAndTime from \"../../../components/DateAndTime/DateAndTime\";\nimport Truck from \"../../../components/Truck/Truck\";\n\nclass CreateJob extends Component {\n  //defining state\n  constructor(props) {\n    super(props);\n    this.state = { ...props.jobForm };\n  }\n\n  getDefaultTime = () => {\n    let date = new Date()\n    date.setHours(0);\n    date.setMinutes(0);\n    date.setSeconds(0);\n    console.log(date.toString())\n    return date.toString();\n  }\n  initialState = {\n    editorState: EditorState.createEmpty(),\n    // title: \"\",\n    description: \"\",\n    services: [],\n    customerId: \"\",\n    startDate: \"\",\n    dates: [{ date: new Date(), time: new Date('2014-08-18T09:00:00') }],\n    startTime: \"\",\n    anchorEl: \"\",\n    meetTime: \"\",\n    assigneeRequired: \"\",\n    from: \"\",\n    to: \"\",\n    customerIdError: \"\",\n    titleError: \"\",\n    descriptionError: \"\",\n    multiError: \"\",\n    dateError: \"\",\n    timeError: \"\",\n    // priceError:\"\",\n    assigneeError: \"\",\n    locationfromError: \"\",\n    locationtoError: \"\",\n    assigneeList: [],\n    jobType: \"Hourly Based\",\n    status: \"pending\",\n    note: [],\n    assigneesId: [],\n    add: 1,\n    locations: [{ type: \"\", value: \"\", default: false, propertyType: '' }],\n    fromTo: [],\n    assigneeRequiredError: \"\",\n    selectedDate: new Date(),\n    newService: \"\",\n    newProperty: \"\",\n    customers: [],\n    selectedCustomer: \"\",\n    newCustomer: \"\",\n    showAddCustomer: false,\n    propertyType: '',\n    price: \"\",\n    trucks: [{ type: \"\", number: \"\" }],\n    // truck: \"\",\n    // truckSize: \"None\",\n    serviceOptions: [\n      { id: 1, name: \"Packing\" },\n      { id: 2, name: \"Loading\" },\n      { id: 3, name: \"Unloading\" },\n      { id: 4, name: \"Grand Piano\" },\n      { id: 5, name: \"Baby\" },\n      { id: 6, name: \"Hot Tub\" },\n    ],\n    propertyOptions: [\n      { id: 1, name: \"House\" },\n      { id: 2, name: \"Condominium\" },\n      { id: 3, name: \"Duplex\" },\n      { id: 4, name: \"Trailer\" },\n      { id: 5, name: \"Office\" },\n      { id: 6, name: \"Indoor Storage\" },\n      { id: 7, name: \"Outdoor Storage\" },\n      { id: 8, name: \"Town House\" },\n      { id: 9, name: \"Apartment\" }\n    ],\n    truckOptions: [\n      \"Pickup Truck\",\n      \"Cargo Van\",\n      \"15 ft truck\",\n      \"17 ft truck\",\n      \"20 ft truck\",\n      \"26 ft truck\"\n    ]\n  };\n\n  componentDidMount = () => {\n    //fetch customer id name and jobs if navigate from customer page\n    if (\n      this.props.location.customerId !== undefined &&\n      this.props.location.customerName !== undefined\n    ) {\n      this.setState({\n        customerId: this.props.location.customerId,\n        selectedCustomer: this.props.location.customerName,\n        jobs: this.props.location.jobs,\n\n      });\n    }\n    //get all customers and jobs\n    let { getCustomersAndJobs } = this.props;\n    getCustomersAndJobs(res => {\n\n      this.setState({ customers: res.data.data });\n    });\n  };\n\n\n\n  //handler to add location\n  addLocation = () => {\n    let location = cloneDeep(this.state.locations);\n    location.push({ type: \"\", value: \"\", default: false, propertyType: '' });\n    this.setState({\n      locations: location,\n    });\n  };\n\n  //onChange handler of forms\n  handleFormInput = (event) => {\n    let { name, value } = event.target;\n\n    this.setState({ [name]: value });\n    if (value === \"\") {\n      // this.setState({ [name + \"Error\"]: \"Should not be empty\" });\n    } else {\n      this.setState({ [name + \"Error\"]: \"\" });\n    }\n  };\n  //validate form (check if the fields are empty)\n  validate = () => {\n    let { selectedCustomer, selectedJob } = this.state;\n    let customerIdError = \"\";\n    // let titleError = \"\";\n    let descriptionError = \"\";\n    let multiError = \"\";\n    let locationfromError = \"\";\n    let locationtoError = \"\";\n    let assigneeRequiredError = \"\";\n    // let priceError=\"\";\n    let jobTypeError = \"\";\n\n    if (selectedCustomer === \"\") {\n      customerIdError = \"Customer Id should not be empty\";\n    }\n\n    // if (!this.state.title) {\n    //   titleError = \"Title should not be empty\";\n    // }\n    if (!this.state.editorState.getCurrentContent().hasText()) {\n      descriptionError = \"Description should not be empty\";\n    }\n    if (this.state.services.length === 0) {\n      multiError = \"Services Should not be empty\";\n    }\n\n    if (!this.state.assigneeRequired) {\n      assigneeRequiredError = \"Required count should not be empty\";\n    }\n\n    let locations = this.state.locations.map(x => x.value != '')\n    locations = locations.filter(Boolean);\n    if (locations.length === 0) {\n      locationfromError = \"Location must not be empty\";\n    }\n    // if (!this.state.price) {\n    //   priceError = \"Price should not be empty\";\n    // }    \n\n    if (!this.state.jobType) {\n      jobTypeError = \"Job type is required.\";\n    }\n\n    if (\n      customerIdError ||\n      // titleError ||\n      descriptionError ||\n      multiError ||\n      locationfromError ||\n      locationtoError ||\n      assigneeRequiredError ||\n      // priceError ||\n      jobTypeError\n    ) {\n      this.setState({\n        customerIdError,\n        // titleError,\n        descriptionError,\n        multiError,\n        locationfromError,\n        locationtoError,\n        assigneeRequiredError,\n        // priceError,\n        jobTypeError,\n      });\n      return false;\n    }\n    return true;\n  };\n\n\n  //submit form handler\n  mySubmitHandler = (event) => {\n    let { createJob, history, loggedInUser } = this.props;\n    event.preventDefault();\n    const isValid = this.validate();\n\n    if (isValid) {\n      let {\n        // title,\n        description,\n        services,\n        dates,\n        startTime,\n        locations,\n        status,\n        note,\n        assigneesId,\n        customerId,\n        assigneeRequired,\n        price,\n        trucks,\n        jobType,\n      } = this.state;\n\n      let stringDates = dates.map((x) =>\n        x.date !== (\"\" || null) ? { date: x.date.toDateString(), time: x.time } : null\n      );\n\n      stringDates = stringDates.filter(Boolean);\n      let createJobObj = {\n        // title,\n        description,\n        services,\n        dates: stringDates,\n        startTime,\n        // locations: locations.filter((x) => x.value !== \"\" && x.type !== \"\" && x.propertyType !== ''),\n        locations: locations.filter((x) => x.value !== \"\"),\n        status,\n        note,\n        assigneesId,\n        assigneeRequired,\n        price,\n        // trucks,\n        trucks: trucks.filter((x) => x.type !== \"\" && x.number !== \"\"),\n        customerId,\n        userId: loggedInUser._id,\n        jobType\n      };\n      // Submit Form API\n      createJob(createJobObj, (job) => {\n        //reset form to its original state\n        this.handleResetJob()\n        history.push(\"/job/detail/\" + job.data.data._id);\n      });\n      // Submit Form API\n    }\n  };\n  //services changed\n  servicesChanged = (newValue) => {\n    let arr = uniqBy(newValue, \"id\");\n    this.setState({ services: arr });\n    if (arr.length > 0) {\n      this.setState({ multiError: \"\" });\n    }\n  };\n  //add custom service to services autocomplete\n  addCustomService = (e) => {\n    e.preventDefault();\n    if (e.target.value) {\n      this.setState({\n        newService: e.target.value,\n      });\n      let serviceAdded = {\n        name: this.state.newService,\n        id: Math.random() * 10,\n      };\n      if (e.keyCode === 13 && e.target.value) {\n        let services = cloneDeep(this.state.services);\n        services.push(serviceAdded);\n\n        let serviceOptions = cloneDeep(this.state.serviceOptions);\n        serviceOptions.push(serviceAdded);\n        this.setState({\n          serviceOptions,\n          services,\n        });\n      }\n    } else {\n      this.setState({\n        newService: \"\",\n      });\n    }\n  };\n\n  propertyChanged = (newValue) => {\n\n    if (newValue) {\n      this.setState({ propertyType: newValue.name });\n    }\n    else {\n      this.setState({ propertyType: \"\" });\n    }\n\n\n  };\n\n  addCustomPropertyType = (e) => {\n    e.preventDefault();\n    if (e.target.value) {\n      this.setState({\n        newProperty: e.target.value,\n      });\n      let propertyAdded = {\n        name: this.state.newProperty,\n        id: Math.random() * 10,\n      };\n      if (e.keyCode === 13 && e.target.value) {\n        let propertyOptions = cloneDeep(this.state.propertyOptions);\n        propertyOptions.push(propertyAdded);\n        this.setState({\n          propertyOptions,\n          propertyType: e.target.value,\n        });\n      }\n    } else {\n      this.setState({\n        newProperty: \"\",\n      });\n    }\n  }\n\n\n  //add new customer\n  addNewCustomer = (e) => {\n    e.preventDefault();\n    if (e.target.value) {\n      this.setState({\n        newCustomer: e.target.value,\n      });\n      if (e.keyCode === 13 && e.target.value) {\n        this.setState({ showAddCustomer: true });\n      }\n    } else {\n      this.setState({\n        newCustomer: \"\",\n      });\n    }\n  };\n  //get customer jobs\n  getCustomerJobs = (customer) => {\n    if (customer) {\n      this.setState({\n        jobs: customer.jobs,\n        selectedCustomer: customer.firstName + \" \" + customer.lastName,\n        customerId: customer.email,\n        customerIdError: \"\",\n      });\n    } else {\n      this.setState({ jobs: [], selectedCustomer: \"\", customerId: \"\" });\n    }\n  };\n  //populateNewCustomer\n  populateNewCustomer = (e) => {\n    let newCustomer = {\n      email: e.data.data.email,\n      firstName: e.data.data.firstName,\n      lastName: e.data.data.lastName,\n      jobs: [],\n      _id: e.data.data._id,\n    };\n    let customers = cloneDeep(this.state.customers);\n    customers.unshift(newCustomer);\n    this.setState({\n      showAddCustomer: false,\n      customers,\n      selectedCustomer: newCustomer.firstName + \" \" + newCustomer.lastName,\n      customerId: newCustomer.email,\n    });\n  };\n  //save the form fields on redux store on component unmounting\n  componentWillUnmount() {\n    let { setJobForm } = this.props;\n    setJobForm({ ...this.state });\n  }\n  //onChange handler of editor\n  onEditorStateChange = (e) => {\n    this.setState({\n      descriptionError: e.getCurrentContent() ? '' : 'Description should not be empty',\n      editorState: e,\n      description: draftToHtml(convertToRaw(e.getCurrentContent())),\n    });\n  };\n  //reset form Fields\n  handleResetJob = () => {\n    let { resetJobForm } = this.props;\n    let customers = cloneDeep(this.state.customers);\n    resetJobForm();\n    this.setState({ ...this.initialState, customers });\n  };\n\n  handleLocationChange = (locations) => {\n    this.setState({\n      locations\n    });\n  }\n\n  setDates = (dates) => {\n    this.setState({\n      dates\n    })\n  }\n\n  setTrucks = (trucks) => {\n    this.setState({\n      trucks\n    })\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <div className={`${style.createJob}`}>\n          <div className={`${style.form}`}>\n            <h3 className={style.head}>Create Job</h3>\n            <form onSubmit={this.mySubmitHandler}>\n              {/*Name Field*/}\n              {this.state.customers.length > 0 ? (\n                <VirtualizedAutocomplete\n                  optionTextValue={this.state.newCustomer}\n                  value={this.state.selectedCustomer}\n                  options={this.state.customers}\n                  getCustomerJobs={this.getCustomerJobs}\n                  addNewCustomer={this.addNewCustomer}\n                />\n              ) : null\n              }\n\n\n              {/* date and time */}\n              <DateAndTime dates={this.state.dates} setDates={this.setDates} />\n\n              <div className={this.state.descriptionError ? style.styleEditorInValid : style.styleEditorValid}>\n                <Editor\n                  onChange={() => {\n\n                  }}\n                  editorState={this.state.editorState}\n                  toolbarClassName=\"toolbarClassName\"\n                  className={style.styleFormFields}\n                  wrapperClassName=\"wrapperClassName\"\n                  editorClassName=\"editorClassName\"\n                  onEditorStateChange={this.onEditorStateChange}\n                  placeholder=\"Job Description\"\n                // error={this.state.descriptionError ? true : false}\n                />\n              </div>\n\n              <div>\n                <Autocomplete\n                  multiple\n                  noOptionsText={`Add '${this.state.newService}' to Services`}\n                  value={this.state.services}\n                  onChange={(event, newValue) => {\n                    this.servicesChanged(newValue);\n                  }}\n                  limitTags={10}\n                  id=\"multiple-limit-tags\"\n                  options={\n                    this.state.serviceOptions && this.state.serviceOptions\n                  }\n                  getOptionLabel={(option) =>\n                    option.name ? option.name : option\n                  }\n                  renderInput={(params) => (\n                    <TextField\n                      required\n                      onKeyUp={(e) => this.addCustomService(e)}\n                      {...params}\n                      className={style.styleFormFields}\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                      label=\"Services\"\n                      placeholder=\"Services\"\n                      error={this.state.multiError ? true : false}\n                    />\n                  )}\n                />\n              </div>\n\n              <div className={style.propertyTypeRow}>\n                <div>\n                  <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                    <InputLabel id=\"demo-simple-select-outlined-label\">\n                      Job Type\n                    </InputLabel>\n                    <Select\n                      required\n                      labelId=\"demo-simple-select-outlined-label\"\n                      id=\"demo-simple-select-outlined\"\n                      value={this.state.jobType}\n                      onChange={this.handleFormInput}\n                      label=\"Job Type\"\n                      name=\"jobType\"\n                    >\n                      <MenuItem value={\"Hourly Based\"}>Hourly Based</MenuItem>\n                      <MenuItem value={\"Fixed\"}>Fixed</MenuItem>\n                    </Select>\n                  </FormControl>\n                </div>\n\n                <div>\n                  <TextField\n                    type=\"number\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    required\n                    fullWidth\n                    size=\"small\"\n                    id=\"assigneeRequired\"\n                    label=\"Movers Required\"\n                    autoComplete=\"Number of movers required\"\n                    name=\"assigneeRequired\"\n                    value={this.state.assigneeRequired}\n                    className={style.styleFormFields}\n                    error={this.state.assigneeRequiredError ? true : false}\n                    onChange={this.handleFormInput}\n                  />\n                </div>\n                <div>\n                  <TextField\n                    type=\"number\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    // required\n                    fullWidth\n                    size=\"small\"\n                    id=\"price$\"\n                    label=\"Price\"\n                    autoComplete=\"Price\"\n                    name=\"price\"\n                    value={this.state.price}\n                    className={style.styleFormFields}\n                    // error={this.state.priceError ? true : false}\n                    InputProps={{\n                      startAdornment: (<InputAdornment position=\"start\">$</InputAdornment>)\n                    }}\n                    // startAdornment={}\n                    onChange={this.handleFormInput}\n                  />\n                </div>\n              </div>\n              {/* truck size and number */}\n              <Truck trucks={this.state.trucks} setTrucks={this.setTrucks} />\n\n              {/* {this.state.locations.length === 0 && (\n                <div className={style.addLocation}>\n                  <div className={style.addLocationBtn}>\n                    <Button onClick={this.addLocation}\n                      className={style.button}>\n                      Add Location\n                    </Button>\n                  </div>\n                </div>\n              )} */}\n\n              {this.state.locations.length > 0 ? (\n                <div>\n                  <AddLocation\n                    locationArr={this.state.locations}\n                    addLocation={this.addLocation}\n                    handleLocationChange={this.handleLocationChange}\n\n                  // error={this.state.locationfromError ? true : false}\n                  />\n\n                </div>\n              ) : null}\n\n              <div className={style.resetBtns}>\n\n                <div>\n                  <Button\n                    className={style.button}\n                    type=\"button\"\n                    onClick={this.handleResetJob}>\n                    Reset\n                  </Button>\n                </div>\n\n                <div>\n                  <Button\n                    className={style.button}\n                    type=\"button\"\n                    onClick={this.mySubmitHandler}>\n                    Submit\n                  </Button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n        <Modal\n          dialogClassName={`${style.modal}`}\n          show={this.state.showAddCustomer}\n          onHide={() => this.setState({ showAddCustomer: false })}\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Create Customer</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <CreateCustomer isModal={true} close={this.populateNewCustomer} />\n          </Modal.Body>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nvar actions = {\n  createJob,\n  setJobForm,\n  resetJobForm,\n  getCustomersAndJobs\n};\n\nvar mapStateToProps = (state) => ({\n  loggedInUser: state.users.user,\n  jobForm: state.forms.addJobForm,\n});\n\nexport default connect(mapStateToProps, actions)(CreateJob);","import React, { Component } from \"react\";\nimport style from \"./UpdateJob.module.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { connect } from \"react-redux\";\nimport { getJob, updateJob } from \"../../../Redux/Job/jobActions\";\nimport { Modal } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { cloneDeep, uniqBy } from \"lodash\";\nimport \"date-fns\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Button,\n\n  TextareaAutosize,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { ContentState, convertToRaw, EditorState } from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport draftToHtml from \"draftjs-to-html\";\nimport htmlToDraft from \"html-to-draftjs\";\n\nimport AddLocation from \"../../../components/AddLocation/AddLocation\";\nimport DateAndTime from \"../../../components/DateAndTime/DateAndTime\";\nimport Truck from \"../../../components/Truck/Truck\";\n\nclass UpdateJob extends Component {\n  //defining state\n  state = {\n    services: [],\n    assignee: [],\n    assigneeList: [],\n    startDate: \"\",\n    dates: [],\n    endDate: \"\",\n    startTime: \"\",\n    meetTime: \"\",\n    jobType: \"\",\n    propertyType: '',\n    title: \"\",\n    titleError: \"\",\n    descriptionError: \"\",\n    servicesError: \"\",\n    assigneeError: \"\",\n    moversError: \"\",\n    locationFromError: \"\",\n    locationToError: \"\",\n    job: null,\n    newNote: \"\",\n    customerId: \"\",\n    statusOptions: [\"Booked\", \"Completed\", \"Pending\"],\n    status: \"\",\n    assigneeRequired: \"\",\n    newService: \"\",\n    price: '',\n    trucks: [],\n    // truck: '',\n    // truckSize: 'None',\n    serviceOptions: [\n      { id: 1, name: \"Packing\" },\n      { id: 2, name: \"Loading\" },\n      { id: 3, name: \"Unloading\" },\n      { id: 4, name: \"Grand Piano\" },\n      { id: 5, name: \"Baby\" },\n      { id: 6, name: \"Hot Tub\" },\n    ],\n    propertyOptions: [\n      { id: 1, name: \"House\" },\n      { id: 2, name: \"Condominium\" },\n      { id: 3, name: \"Duplex\" },\n      { id: 4, name: \"Trailer\" },\n      { id: 5, name: \"Office\" },\n      { id: 6, name: \"Indoor Storage\" },\n      { id: 7, name: \"Outdoor Storage\" },\n      { id: 8, name: \"Town House\" },\n      { id: 9, name: \"Apartment\" }\n    ],\n    truckOptions: [\n      \"Pickup Truck\",\n      \"Cargo Van\",\n      \"15 ft truck\",\n      \"17 ft truck\",\n      \"20 ft truck\",\n      \"26 ft truck\"\n    ]\n  };\n\n\n  //fetch job id on componentDidMount\n  componentDidMount() {\n    let {\n      getJob,\n      match: {\n        params: { jobId },\n      },\n    } = this.props;\n\n    getJob(jobId);\n  };\n\n  componentDidUpdate(prevProps) {\n    let { job } = this.props;\n    if (prevProps.job !== job) {\n      this.setInitialState(job);\n    }\n  }\n  //onChange handler of date\n  handleDateChange = (date, i) => {\n    let newState = cloneDeep(this.state);\n    newState.dates[i] = date;\n    this.setState({\n      dates: newState.dates,\n    });\n  };\n  //validate form if the fields are empty\n  handleValidation = () => {\n    let {\n      title,\n      description,\n      option,\n\n      assigneeRequired,\n    } = this.state;\n    if (title === \"\") {\n      this.setState({\n        titleError: \"Title should not be empty\",\n      });\n    }\n    if (description === \"\") {\n      this.setState({\n        descriptionError: \"description should not be empty\",\n      });\n    }\n    if (option === \"\") {\n      this.setState({\n        servicesError: \"Services should not be empty\",\n      });\n    }\n    if (assigneeRequired === \"\") {\n      this.setState({\n        assigneeError: \"assignee should not be empty\",\n      });\n    }\n\n    let {\n      titleError,\n      descriptionError,\n      servicesError,\n      assigneeError,\n      locationFromError,\n      locationToError,\n    } = this.state;\n    if (\n      titleError ||\n      descriptionError ||\n      servicesError ||\n      assigneeError ||\n      locationFromError ||\n      locationToError\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n\n  setInitialState = (job) => {\n\n    const contentBlock = htmlToDraft(job.description);\n    if (contentBlock) {\n      const contentState = ContentState.createFromBlockArray(\n        contentBlock.contentBlocks\n      );\n      const editorState = EditorState.createWithContent(contentState);\n      this.setState({\n        editorState,\n      });\n    }\n    //fetch services of jobs\n    let services = job.services.map((service, index) => {\n      return { id: index + 1, name: service };\n    });\n\n    let parsedDates = job.dates.map((x) => {\n      return {\n        date: Date.parse(x.date),\n        time: x.time\n      }\n    });\n    this.setState({\n      job: job,\n      title: job.title,\n      startDate: Date.parse(job.startDate),\n      dates: parsedDates,\n      endDate: Date.parse(job.endDate),\n      startDateInString: job.startDate,\n      endDateInString: job.endDate,\n      startTime: job.startTime ? new Date(job.startTime) : '',\n      locations: job.locations,\n      jobType: job.jobType,\n      description: job.description,\n      options: services,\n      assignee: job.assignee,\n      note: job.note,\n      status: job.status,\n      show: false,\n      customerId: job.customer.email,\n      assigneeRequired: job.assigneeRequired,\n      services: job.services,\n      propertyType: job.propertyType,\n      price: job.price,\n      truck: job.truck,\n      truckSize: job.truckSize,\n      trucks: job.trucks.length > 0 ? job.trucks : [{ type: \"\", number: \"\" }],\n      newService: \"\",\n      newProperty: \"\",\n      assigneesId: job.assignee.map(x => x._id)\n    });\n  }\n  //show modal when addNote button is pressed\n  handleShow = () => {\n    this.setState({\n      show: true,\n    });\n  };\n\n  //onChange handler of forms\n  handleFormInput = (event) => {\n    let { name, value } = event.target;\n\n    this.setState({ [name]: value });\n    if (value === \"\") {\n      // this.setState({ [name + \"Error\"]: \"Should not be empty\" });\n    } else {\n      this.setState({ [name + \"Error\"]: \"\" });\n    }\n  };\n\n  //close note modal\n  handleClose = (notes) => {\n    this.setState({\n      show: false,\n      note: notes,\n    });\n  };\n  //add note when add note button of modal is pressed\n  AddNote = () => {\n    let { newNote, note } = this.state;\n    if (note) {\n      let notes = [...this.state.note];\n      notes.push({ uid: uuidv4(), text: newNote });\n      this.setState({\n        show: false,\n        note: notes,\n        newNote: \"\",\n      });\n    }\n  };\n  //onChange handler of form\n  handleFormInput = (e) => {\n    let { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  //delete ntoe\n  handleDeleteNote = (deleteNote) => {\n    let { note } = this.state;\n    let noteToDelete = note.findIndex((n) => n.uid === deleteNote.uid);\n    if (noteToDelete !== -1) {\n      note.splice(noteToDelete, 1);\n      this.setState({\n        note: note,\n      });\n    }\n  };\n  //onChange handler of addNote\n  handleAddNote = (e) => {\n    let { value } = e.target;\n    this.setState({\n      newNote: value,\n    });\n  };\n  //update job\n  handleJobUpdate = () => {\n    let {\n      title,\n      dates,\n      locations,\n      services,\n      description,\n      status,\n      jobType,\n      assigneeRequired,\n      customerId,\n      note,\n      startTime,\n      propertyType,\n      price,\n      truck,\n      truckSize,\n      trucks,\n      assigneesId\n    } = this.state;\n\n    let {\n      match: {\n        params: { jobId },\n      },\n      history,\n    } = this.props;\n    let stringDates = dates.map((x) => {\n      if (typeof x.date === \"number\") {\n        return { date: new Date(x.date).toDateString(), time: x.time };\n      } else {\n        return { date: x.date.toDateString(), time: x.time };\n      }\n    });\n\n    let { loggedinUser, updateJob } = this.props;\n    let updatedObj = {\n      dates: stringDates,\n      title,\n      description,\n      services,\n      assigneeRequired,\n      jobType,\n      locations: locations && locations.filter((x) => x.value !== \"\"),\n      status,\n      userId: loggedinUser._id,\n      customerId,\n      note,\n      startTime,\n      propertyType,\n      price,\n      // truck,\n      // truckSize,\n      trucks: trucks.filter((x) => x.type !== \"\" && x.number !== \"\"),\n      assigneesId\n    };\n    //check if the fields are empty\n    if (this.handleValidation()) {\n      //update job\n      updateJob(jobId, updatedObj, (res) => history.push(\"/job/detail/\" + jobId))\n    }\n  };\n\n\n  //add new location\n  addLocation = () => {\n    let location = cloneDeep(this.state.locations);\n    location.push({ type: \"\", value: \"\", default: false });\n    this.setState({\n      locations: location,\n    });\n  };\n\n\n  //set the google location in the state\n  handleSetLocation = (choosenLocation, index) => {\n    let value = choosenLocation ? choosenLocation.description : ''\n    let location = [...this.state.locations];\n\n    location[index].value = value;\n\n\n\n\n    this.setState({\n      locations: location\n    })\n  }\n  //onChange handler of services\n  servicesChanged = (newValue) => {\n    let arr = uniqBy(newValue, \"id\");\n    this.setState({ services: arr });\n  };\n  //onChange handler of propertytype\n  propertyChanged = (newValue) => {\n\n    if (newValue) {\n      this.setState({ propertyType: newValue.name });\n    }\n    else {\n      this.setState({ propertyType: \"\" });\n    }\n\n\n  };\n\n  //add custom service\n  addCustomService = (e) => {\n    e.preventDefault();\n    if (e.target.value) {\n      this.setState({\n        newService: e.target.value,\n      });\n      if (e.keyCode === 13 && e.target.value) {\n        let serviceAdded = {\n          name: this.state.newService,\n          id: Math.random() * 10,\n        };\n        let services = cloneDeep(this.state.services);\n        services.push(serviceAdded);\n\n        let serviceOptions = cloneDeep(this.state.serviceOptions);\n        serviceOptions.push(serviceAdded);\n        this.setState({\n          serviceOptions,\n          services,\n        });\n      }\n    } else {\n      this.setState({\n        newService: \"\",\n      });\n    }\n  };\n  //add custom property\n  addCustomPropertyType = (e) => {\n    e.preventDefault();\n    if (e.target.value) {\n      this.setState({\n        newProperty: e.target.value,\n      });\n      let propertyAdded = {\n        name: this.state.newProperty,\n        id: Math.random() * 10,\n      };\n      if (e.keyCode === 13 && e.target.value) {\n        let propertyOptions = cloneDeep(this.state.propertyOptions);\n        propertyOptions.push(propertyAdded);\n        this.setState({\n          propertyOptions,\n          propertyType: e.target.value,\n        });\n      }\n    } else {\n      this.setState({\n        newProperty: \"\",\n      });\n    }\n  }\n  //change editor's state\n  onEditorStateChange = (e) => {\n    this.setState({\n      editorState: e,\n      description: draftToHtml(convertToRaw(e.getCurrentContent())),\n    });\n  };\n\n  setDates = (dates) => {\n    this.setState({\n      dates\n    })\n  }\n  setTrucks = (trucks) => {\n    this.setState({\n      trucks\n    })\n  }\n\n  handleLocationChange = (locations) => {\n    this.setState({\n      locations\n    });\n  }\n\n  render() {\n    let {\n      note,\n      show,\n    } = this.state;\n    return (\n      <div className={`${style.formStyle}`}>\n        <div className={`${style.form}`}>\n          {/* <ToastContainer position=\"bottom-right\"/> */}\n          <h3 className={style.head}>Job Details Edit</h3>\n\n          <form>\n            <div>\n              <TextField\n                variant=\"outlined\"\n                required\n                className={style.styleFormFields}\n                size=\"small\"\n                id=\"customerId\"\n                label=\"Cutomer Email\"\n                name=\"customerId\"\n                fullWidth\n                autoComplete=\"customerId\"\n                value={this.state.customerId}\n                onChange={this.handleFormInput}\n                disabled\n              />\n            </div>\n            {/* date and time  */}\n            {this.state.dates.length > 0 && <DateAndTime dates={this.state.dates} setDates={this.setDates} />}\n\n            <div className={style.styleEditor}>\n              <Editor\n                editorState={this.state.editorState}\n                className={style.styleFormFields}\n                toolbarClassName=\"toolbarClassName\"\n                wrapperClassName=\"wrapperClassName\"\n                editorClassName=\"editorClassName\"\n                onEditorStateChange={this.onEditorStateChange}\n                placeholder=\"Job Description\"\n              />\n            </div>\n\n            <div>\n              {this.state.customerId && (\n                <Autocomplete\n                  multiple\n                  noOptionsText={`Add '${this.state.newService}' to Services`}\n                  value={this.state.services}\n                  size=\"small\"\n                  onChange={(event, newValue) => {\n                    this.servicesChanged(newValue);\n                  }}\n                  limitTags={10}\n                  id=\"multiple-limit-tags\"\n                  options={\n                    this.state.serviceOptions && this.state.serviceOptions\n                  }\n                  getOptionLabel={(option) =>\n                    option.name ? option.name : option\n                  }\n                  // error={this.state.multiError ? true : false}\n                  renderInput={(params) => (\n                    <TextField\n                      onKeyUp={(e) => this.addCustomService(e)}\n                      {...params}\n                      variant=\"outlined\"\n\n                      fullWidth\n                      className={style.styleFormFields}\n                      label=\"Services\"\n                      placeholder=\"Services\"\n                    />\n                  )}\n                />\n              )}\n            </div>\n\n            <div className={style.propertyTypeRow}>\n              <div>\n                <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\n                    Job Type\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={this.state.jobType}\n                    onChange={this.handleFormInput}\n                    label=\"Job Type\"\n                    name=\"jobType\"\n                  >\n                    <MenuItem value={this.state.jobType}>\n                      {this.state && this.state.jobType}\n                    </MenuItem>\n                    {this.state.jobType !== \"Fixed\" ? (\n                      <MenuItem value={\"Fixed\"}>Fixed</MenuItem>\n\n                    ) : (\n                      <MenuItem value={\"Hourly based\"}>Hourly based</MenuItem>\n                    )}\n                  </Select>\n                </FormControl>\n              </div>\n              <div>\n                <TextField\n                  type=\"number\"\n                  variant=\"outlined\"\n                  required\n                  className={style.styleFormFields}\n                  fullWidth\n                  size=\"small\"\n                  id=\"assigneeRequired\"\n                  label=\"Movers Required\"\n                  autoComplete=\"Number of movers required\"\n                  name=\"assigneeRequired\"\n                  value={this.state.assigneeRequired}\n                  error={this.state.assigneeRequiredError ? true : false}\n                  onChange={this.handleFormInput}\n                />\n              </div>\n              <div>\n                <TextField\n                  type=\"number\"\n                  variant=\"outlined\"\n                  required\n                  className={style.styleFormFields}\n                  fullWidth\n                  size=\"small\"\n                  id=\"price\"\n                  label=\"Price\"\n                  autoComplete=\"Enter Price\"\n                  name=\"price\"\n                  value={this.state.price}\n                  error={this.state.assigneeRequiredError ? true : false}\n                  onChange={this.handleFormInput}\n                  InputProps={{\n                    startAdornment: (<InputAdornment position=\"start\">$</InputAdornment>)\n                  }}\n                />\n              </div>\n            </div>\n            {/* Truck Component */}\n            {this.state.trucks.length > 0 && <Truck trucks={this.state.trucks} setTrucks={this.setTrucks} />}\n\n            {/* <Truck trucks={this.state.trucks} setTrucks={this.setTrucks} /> */}\n\n            {\n              this.state.locations &&\n              <div>\n                {/* {this.state.locations.length === 0 && (\n                  <div className={style.addLocation}>\n                    <div className={style.addLocationBtn}>\n                      <Button onClick={this.addLocation} className={style.button}>\n                        Add Location\n                  </Button>\n                    </div>\n                  </div>\n                )} */}\n                {this.state.locations.length > 0 ? (\n                  <div>\n                    <AddLocation locationArr={this.state.locations} addLocation={this.addLocation} handleLocationChange={this.handleLocationChange} />\n                  </div>\n                ) :null}\n\n              </div>\n            }\n          </form>\n\n          <div>\n            {note && note.length > 0 && <h3>Notes</h3>}\n            {note && note.map((note) => (\n              <div className={style.notesStyle}>\n                <div>{note.text}</div>\n                <div>\n                  <FontAwesomeIcon\n                    icon={faTrash}\n                    size=\"1x\"\n                    onClick={() => this.handleDeleteNote(note)}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className={style.notesBtn}>\n            <div>\n              <Button\n                onClick={this.handleShow}\n                type=\"submit\"\n                className={style.button}\n              >\n                Add Notes\n              </Button>\n            </div>\n            <div>\n              <Button\n                type=\"submit\"\n                onClick={this.handleJobUpdate}\n                className={style.button}\n              >\n                Update\n              </Button>\n            </div>\n          </div>\n\n          <Modal\n            show={show}\n            onHide={this.handleClose}\n            animation={false}\n            centered\n            dialogClassName={style.modal}\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>Add Note</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <TextareaAutosize className={style.styleTextArea}\n                id=\"\"\n                cols=\"65\"\n                rows=\"5\"\n                name=\"Note\"\n                value={this.state.newNote}\n                onChange={this.handleAddNote}\n              ></TextareaAutosize>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button className={style.modalButtons} onClick={this.handleClose}>\n                Close\n              </Button>\n              <Button className={style.modalButtons} onClick={this.AddNote}>\n                Add Note\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nvar actions = {\n  getJob,\n  updateJob\n};\n\nvar mapStateToProps = (state) => ({\n  loggedinUser: state.users.user,\n  job: state.jobs && state.jobs.job\n});\n\nexport default connect(mapStateToProps, actions)(UpdateJob);\n","import React, { useEffect, useState, Children } from \"react\";\nimport { getJobsByDate } from \"../../Redux/Job/jobActions\";\nimport { Link } from \"react-router-dom\";\nimport parse from \"html-react-parser\";\nimport { connect } from \"react-redux\";\nimport \"react-calendar/dist/Calendar.css\";\nimport style from \"./CalendarApp.module.css\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { cloneDeep } from \"lodash\";\n\nconst localizer = momentLocalizer(moment);\n\nconst CalendarApp = (props) => {\n  const [state, setState] = useState({\n    date: new Date(),\n    myEventsList: [],\n    currentDayJobs: [],\n    jobs: [],\n  });\n  const [count, setCount] = useState({\n    job: \"\",\n    movers: \"\",\n  });\n  let { user, getJobsByDate } = props;\n  //get count of job and movers\n  const getCount = (e, jobs) => {\n    // let jobs = cloneDeep(state.jobs);\n    let currentDayJobs = [];\n    jobs.forEach((x) => {\n      x.dates.forEach((y) => {\n        if (new Date(y.date).toDateString() === new Date(e.end).toDateString()) {\n          currentDayJobs.push(x);\n        }\n        else if (new Date(y.date).toDateString() === new Date(e).toDateString()) {\n          currentDayJobs.push(x);\n        }\n      });\n    });\n\n    setCount({\n      ...count,\n      job: currentDayJobs.length,\n      movers: currentDayJobs.reduce(\n        (sum, currentValue) => sum + currentValue.assigneeRequired,\n        0\n      ),\n    });\n  };\n  useEffect(() => {\n    let body;\n    if (user) {\n      if (user.role === \"mover\") {\n        body = {\n          date: new Date().toDateString(),\n          id: user._id,\n        };\n      } else {\n        body = {\n          date: new Date().toDateString(),\n        };\n      }\n      //fetch jobs of current month\n      getJobsByDate(body, (res) => {\n        let jobs = [];\n        let currentDayJobs = [];\n        res.data.data.forEach((x) => {\n          // Set Calendar Jobs\n          x.dates.forEach((y) => {\n            let obj = {\n              start: y.date,\n              end: y.date,\n              title: x.title,\n              id: x._id,\n            };\n            jobs.push(obj);\n            // Set Current Date Jobs\n            if (y.date === new Date().toDateString()) {\n              currentDayJobs.push(x);\n            }\n          });\n        });\n        setState({\n          ...state,\n          myEventsList: jobs,\n          currentDayJobs,\n          jobs: res.data.data,\n          date: new Date(),\n\n        });\n        getCount(new Date(), res.data.data)\n\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n\n\n  //handler called when we change date\n  const changeDate = (x) => {\n    let date = x;\n    let { user } = props;\n    let body;\n    if (user.role === \"mover\") {\n      body = {\n        date: date.toDateString(),\n        id: user._id,\n      };\n    } else {\n      body = {\n        date: date.toDateString(),\n      };\n    }\n    getJobsByDate(body, (res) => {\n      let jobs = [];\n      let currentDayJobs = [];\n      res.data.data.forEach((x) => {\n        x.dates.forEach((y) => {\n          let obj = {\n            start: y.date,\n            end: y.date,\n            title: x.title,\n            id: x._id,\n          };\n          jobs.push(obj);\n          if (y.date === date.toDateString()) {\n            currentDayJobs.push(x);\n          }\n        });\n      });\n      setState({\n        ...state,\n        myEventsList: jobs,\n        currentDayJobs,\n        jobs: res.data.data,\n        date: x,\n      });\n      getCount(x, res.data.data);\n\n    });\n  };\n\n  //get job details when we click a job of a particular date\n  const getJobDetails = (e) => {\n    let jobs = cloneDeep(state.jobs);\n    let index = jobs.findIndex((x) => x._id === e.id);\n    setState({\n      ...state,\n      currentDayJobs: [jobs[index]],\n      date: new Date(e.end),\n    });\n    getCount(e, jobs);\n  };\n  //get all jobs of a particular date(when we clicked a box)\n  const getJobDetailsOnSlotClick = (e) => {\n    let jobs = cloneDeep(state.jobs);\n    let currentDayJobs = [];\n    jobs.forEach((x) => {\n      x.dates.forEach((y) => {\n        if (y.date === e.end.toDateString()) {\n          currentDayJobs.push(x);\n        }\n      });\n    });\n    setState({\n      ...state,\n      currentDayJobs,\n      date: e.end,\n    });\n    getCount(e, jobs);\n  };\n\n  //coloured box(box-styling)\n  const coloredDateCellWrapper = ({ children, value }) => {\n    let date = new Date(state.date);\n    return React.cloneElement(Children.only(children), {\n      style: {\n        ...children.style,\n        backgroundColor:\n          value.toDateString() === date.toDateString() ? \"#eaf6fe\" : \"white\",\n        border:\n          value.toDateString() === date.toDateString()\n            ? \"1px solid #00adee\"\n            : \"\",\n      },\n    });\n  };\n  return (\n    <div className={style.calenderContainer}>\n      <div className={style.calender}>\n        <div className={style.calenderContent}>\n          <Calendar\n            className={style.styleCalender}\n            selectable={true}\n            localizer={localizer}\n            events={state.myEventsList}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            views={{\n              month: true,\n            }}\n            popup={true}\n            onNavigate={changeDate}\n            onSelectEvent={getJobDetails}\n            onSelectSlot={getJobDetailsOnSlotClick}\n            components={{\n              // you have to pass your custom wrapper here\n              // so that it actually gets used\n              dateCellWrapper: coloredDateCellWrapper,\n            }}\n          />\n        </div>\n\n        <div className={style.sideContent}>\n          <h5 className={`${style.flex} `}>{state.date.toDateString()}</h5>{\" \"}\n              <hr />\n          <div className={style.jobInfo}>\n                <h6>{`Total Jobs: `}\n                  <Chip\n                    label={count.job}\n                    clickable\n                    // color=\"primary\"\n                    // variant=\"outlined\"\n                    size=\"medium\"\n                  /></h6>\n                <h6>{`Total Movers: `}\n                  <Chip\n                    label={count.movers}\n                    clickable\n                    // color=\"primary\"\n                    // variant=\"outlined\"\n                    size=\"medium\"\n                  />\n                </h6>\n              </div>\n          {state.currentDayJobs.length ? (\n            <div>\n              \n              \n              {state.currentDayJobs.map((job, i) => (\n                <div>\n\n                  <div id=\"accordion\" key={i}>\n                    <div className={`card ${style.card}`}>\n                      <div\n                        className={`card-header ${style.cardHeader}`}\n                        id=\"headingOne\"\n                      >\n                        <div\n                          className=\"collapsed\"\n                          aria-expanded=\"false\"\n                          data-toggle=\"collapse\"\n                          data-target={`#collapse${i}`}\n                          aria-controls=\"collapse\"\n                        >\n                          <div>\n                            <Link\n                              className={style.link}\n                              to={`/job/detail/${job._id}`}\n                            >\n                              {job.title}\n                            </Link>\n                          </div>\n                          <div className={style.flexEnd}>\n                            {job.jobId && (\n                              <Chip\n                                label={(job.jobId)}\n                                clickable\n                                color=\"primary\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                              />\n                            )}\n                          </div>\n                        </div>\n                      </div>\n\n                      <div\n                        id={`collapse${i}`}\n                        className={\"collapse\"}\n                        aria-labelledby=\"headingOne\"\n                        data-parent=\"#accordion\"                        \n                      >\n                        <div className={`card-body ${style.cardBody}`}>\n\n\n\n                          <div className=\"card-text\">\n                            <div className={style.heading}>\n                              {`Customer Email: `}\n                            </div>\n                            <div className={style.customerMail}>\n                              <Link\n\n                                to={`/customer/detail/${job.customer._id}`}\n                              >\n                                {job.customer.email}\n                              </Link></div>\n                          </div>\n                          <div className={`card-text ${style.jobDescription}`}>\n                            <div className={style.heading}>\n                              {`Job Description: `}\n                            </div>\n                            <div className={style.jobText}>\n                              {parse(job.description)}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : ( state.currentDayJobs.length == 0 ?\n              <div>                \n                <img src=\"/images/no-data-found.png\" alt=\"\" width=\"100%\" />\n              </div> : null\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};\nvar action = {\n  getJobsByDate,\n};\nvar mapStateToProps = (state) => ({\n  user: state.users.user,\n});\nexport default connect(mapStateToProps, action)(CalendarApp);\n","import React from \"react\";\nimport CalendarApp from \"../../components/CalendarApp/CalendarApp\";\nimport style from \"./Calendar.module.css\";\n\nconst Calendar = () => {\n  return (\n    <div className={style.calendarContainer}>\n      <CalendarApp />\n    </div>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport style from \"./SideBar.module.css\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nconst SideBar = (props) => {\n  const width = window.innerWidth;\n\n\n  return (\n    <div className={style.sidebar}>\n      {props.routes.map((x, i) =>\n\n        <div className={`${style.sidebarContent} `} key={i}>\n          <Link\n\n            key={i}\n            to={x.path}\n            className={\n              props.location.pathname === x.path ? `${style.active}` : null\n            }\n          >\n            <div className={style.flex}>{x.icon}</div>\n            <div >{width < 576 ? \"\" : x.title}</div>\n          </Link>\n        </div>\n\n      )}\n    </div>\n  );\n};\n\nexport default withRouter(SideBar);\n","import React, { useEffect, useState } from \"react\";\nimport style from \"./Unavailable.module.css\";\nimport SideBar from \"../../../components/Sidebar/SideBar\";\nimport { Button, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\nimport {\n  getAllData,\n  approveRequest,\n} from \"../../../Redux/Unavailable/unavailableAction\";\n\nimport { connect } from \"react-redux\";\n\nimport { faUser, faClock, faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst UnavailableSchedule = (props) => {\n  let { getAllData, unavailable } = props;\n  const [dates, setDates] = useState([]);\n  const [value, setValue] = useState(\"pending\");\n  const [status, setStatus] = useState(false);\n\n  const routes = [\n    {\n      title: \"Daily Schedule\",\n      path: \"/schedule\",\n      icon: <FontAwesomeIcon icon={faClock} />,\n    },\n\n    {\n      title: \"Unavailable\",\n      path: \"/schedule/unavailable\",\n\n      icon: <FontAwesomeIcon icon={faBan} />,\n    },\n\n    {\n      title: \"Movers\",\n      path: \"/schedule/movers\",\n\n      icon: <FontAwesomeIcon icon={faUser} />,\n    },\n  ];\n\n  useEffect(() => {\n    const { getAllData } = props;\n    getAllData(status);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getAllData]);\n\n  const handleChange = (list) => {\n    let index = dates.findIndex((x) => x === list._id);\n    if (index !== -1) {\n      dates.splice(index, 1);\n    } else {\n      dates.push(list._id);\n      setDates(dates);\n    }\n  };\n  const approveRequests = () => {\n    let { approveRequest } = props;\n    if (dates.length > 0) {\n      let data = {\n        id: dates,\n      };\n\n      approveRequest(data);\n    }\n  };\n\n  const changeStatus = (e) => {\n    let value = e.target.value;\n    setValue(value);\n    getAllData(!status);\n    setStatus(!status);\n  };\n  return (\n    <div className={`${style.unavailableContainer}`}>\n      <div className={style.sidebar}>\n        <SideBar routes={routes} />\n      </div>\n\n      <div className={style.unavailableContent}>\n        <div className={style.unavailableHeader}>\n          <div>\n            <h3>Unavailable</h3>\n          </div>\n         {value === \"pending\" ? <div className={style.approveBtn}>\n            <Button className={style.button} onClick={approveRequests}>\n              Approve\n            </Button>\n          </div>:<div></div>}\n\n          <div className={`dropdown ${style.flex} ${style.dropDownMenu}`}>\n            {/* <Button className={`${style.button}`}> */}\n              <i\n                className={`fa fa-filter dropdown-toggle  ${style.dropDownIcon}`}\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              ></i>\n             \n              <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n                <RadioGroup\n                  aria-label=\"gender\"\n                  name=\"gender1\"\n                  value={value}\n                  onChange={(e) => changeStatus(e)}\n                >\n                  <FormControlLabel\n                    value=\"pending\"\n                    control={<Radio />}\n                    label=\"Pending\"\n                    className=\"dropdown-item\"\n                  />\n                  <FormControlLabel\n                    value=\"approved\"\n                    control={<Radio />}\n                    label=\"Approved\"\n                    className=\"dropdown-item\"\n                  />\n                </RadioGroup>\n              </div>\n            {/* </Button> */}\n          </div>\n        </div>\n        <div className={style.unavailableList}>\n          {unavailable && unavailable.length > 0 ? (\n            unavailable.map((list, i) => {\n              return (\n                <div className={`list-group ${style.item}`} key={i}>\n                  <div\n                    className={`text-capitalize list-group-item list-group-item-action flex-column align-items-start `}\n                  >\n                    <div className={`d-flex w-100 justify-content-between mb-1`}>\n                      <span>\n                        {list && list.approved === false && (\n                          <input\n                            type=\"checkbox\"\n                            id=\"defaultCheck1\"\n                            value=\"\"\n                            onChange={() => handleChange(list)}\n                            className={`${style.checkBox}`}\n                          />\n                        )}\n                        <span className=\"font-weight-bold\">{list.applicant && list.applicant.name}</span>\n                        \n                      </span>\n                    </div>\n                    <p className=\"mb-1\">\n                      {list.dates.map((date, k) => (\n                        <span className=\"mr-2 \" key={k}>\n                          {new Date(date).toDateString()}\n                        </span>\n                      ))}\n                    </p>\n                    <div>\n                      <p className=\"mb-1\"><span className=\"font-weight-bold\">{`Reason: `}</span>{list.reason}</p>\n                    </div>\n                  </div>\n                </div>\n              );\n            })\n          ) : ( unavailable && unavailable.length == 0 ?\n            <div className=\"text-center\">\n              <img src=\"/images/no-data-found.png\" alt=\"\" />\n            </div> : null\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nvar mapStateToProps = (state) => ({\n  unavailable: state.unavailable,\n});\nvar actions = {\n  getAllData,\n  approveRequest,\n};\nexport default connect(mapStateToProps, actions)(UnavailableSchedule);\n","import { GET_UNAVAILABLE_LIST } from \"./unavailableConstant\";\nimport Axios from \"axios\";\nimport { showMessage } from \"../Common/commonActions\";\n\nexport const getAllData = (status) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.get(`schedule/${status}`, {\n        config: { handlerEnabled: true }\n      });\n      dispatch({\n        type: GET_UNAVAILABLE_LIST,\n        payload: response.data.data,\n      });\n    } catch (error) {\n      \n    }\n  };\n};\n\nexport const approveRequest = (data) => {\n  return async (dispatch) => {\n    try {\n     \n      const response = await Axios.put(\"schedule\", data, {\n        config: { handlerEnabled: true }\n      });\n      if (response.data.status === 200) {\n\n        dispatch({\n          type: GET_UNAVAILABLE_LIST,\n          payload: response.data.data,\n        });\n      }\n      dispatch(showMessage(response.data.message));\n    } catch (error) {\n      \n    }\n  };\n};\n","export const GET_UNAVAILABLE_LIST = \"GET_UNAVAILABLE_LIST\"","import React, { useState, Fragment } from \"react\";\nimport style from \"./Daily.module.css\";\nimport SideBar from \"../../../components/Sidebar/SideBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  getalljobs, getalljobsfiveday\n} from \"../../../Redux/Schedule/scheduleAction\";\nimport { connect } from \"react-redux\";\nimport { Modal } from \"react-bootstrap\";\nimport { updateJob } from \"../../../Redux/Job/jobActions\";\nimport { cloneDeep } from \"lodash\";\nimport { showMessage } from \"../../../Redux/Common/commonActions\";\nimport { jsPDF } from \"jspdf\";\nimport \"jspdf-autotable\";\n\nimport Chip from \"@material-ui/core/Chip\";\nimport { Button } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { faUser, faClock, faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport DatePicker from \"react-horizontal-datepicker\";\nimport parse from \"html-react-parser\";\n\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { htmlToText } from \"html-to-text\";\nimport Badge from '@material-ui/core/Badge';\n\n\n\nconst DailySchedule = (props) => {\n\n  const [newAssignee, setAssignee] = useState(\"\");\n  const [showIndex, setShowIndex] = useState(null);\n  const [today, setToday] = useState(new Date().toString());\n  const [modalShow, setModalShow] = useState(false);\n  const [mover, setMover] = useState(\"\");\n  const [moverAssignedJobs, setMoverAssignedJobs] = useState([]);\n  const { getalljobs, getalljobsfiveday, movers, newDate } = props;\n\n  const routes = [\n    {\n      title: \"Daily Schedule\",\n      path: \"/schedule\",\n      icon: <FontAwesomeIcon icon={faClock} />,\n    },\n\n    {\n      title: \"Unavailable\",\n      path: \"/schedule/unavailable\",\n      icon: <FontAwesomeIcon icon={faBan} />,\n    },\n\n    {\n      title: \"Movers\",\n      path: \"/schedule/movers\",\n      icon: <FontAwesomeIcon icon={faUser} />,\n    },\n  ];\n\n  const generatePDF = (e, job) => {\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n    let dates = job.dates.map(x => x.date).join(\" | \");\n    \n    let services = job.services.map((e) => e.name).join(\" | \");\n\n    const doc = new jsPDF(\"p\", \"pt\");\n    const date = new Date();\n    const columns = [\n      { title: \"Name\", dataKey: \"name\" },\n      { title: \"Email\", dataKey: \"email\" },\n      { title: \"Phone\", dataKey: \"phone\" },\n    ];\n    const items = [\n      {\n        name: job.customer.firstName + job.customer.lastName,\n        email: job.customer.email,\n        phone: job.customer.phone,\n      },\n    ];\n\n    let imgA = document.createElement(\"img\");\n    imgA.src = \"/images/movers-logo.jpg\";\n    doc.addImage(imgA, \"JPEG\", 45, 10, 90, 90);\n\n    doc.setFont(\"times\").setFontSize(22).text(420, 40, \"JOB DETAILS\");\n    doc.setFont(\"times\").setFontSize(10).text(400, 70, \"Print Date:\");\n    doc.setFont(\"times\").setFontSize(10).text(490, 70, date.toDateString());\n    doc.setFont(\"times\").setFontSize(10).text(400, 85, \"Job Id:\");\n    doc.setFont(\"times\").setFontSize(10).text(490, 85, `${job.jobId}`);\n    doc.setFont(\"times\").setFontSize(10).text(400, 100, \"Movers Required:\");\n    doc\n      .setFont(\"times\")\n      .setFontSize(10)\n      .text(490, 100, `${job.assigneeRequired}`);\n    doc.setFont(\"times\").setFontSize(10).text(400, 115, \"Job Type:\");\n    doc.setFont(\"times\").setFontSize(10).text(490, 115, job.jobType);\n\n    doc.setFont(\"times\").setFontSize(15).text(50, 200, job.title);\n\n    doc.setFont(\"times\").setFontSize(11).text(50, 235, dates);\n\n    doc.setFont(\"times\").setFontSize(11).text(50, 260, services);\n\n    doc\n      .setFont(\"times\")\n      .setFontSize(11)\n      .text(\n        50,\n        285,\n        job.dates[0].time ? formatAMPM(job.dates[0].time) : \"No Time Added\"\n      );\n\n    doc.autoTable(columns, items, { margin: { top: 310 } });\n\n    doc\n      .setFont(\"times\")\n      .setFontSize(11)\n      .text(50, 375, htmlToText(job.description));\n\n    // doc.save(`${job.title}.pdf`);\n\n    doc.autoPrint();\n    //This is a key for printing\n    doc.output('dataurlnewwindow');\n  };\n\n  const formatAMPM = (startTime) => {\n    let date = new Date(startTime);\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let ampm = hours >= 12 ? \"pm\" : \"am\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    let strTime = hours + \":\" + minutes + \" \" + ampm;\n    return strTime;\n  };\n\n  const updateJobAssignee = (e, job) => {\n    if (e) {\n      e.stopPropagation();\n    }\n    let { loggedinUser, updateJob } = props;\n    let jobToUpdate = cloneDeep(job);\n    jobToUpdate.userId = loggedinUser._id;\n    jobToUpdate.customerId = jobToUpdate.customer.email;\n    delete jobToUpdate.assignee;\n    delete jobToUpdate.customer;\n    updateJob(jobToUpdate._id, jobToUpdate, (res) => {\n      getalljobs({\n        date: today,\n      });\n      getalljobsfiveday({\n        date: today,\n      });\n    });\n  };\n\n  const removeAssignee = (e, job, assignee) => {\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n    e.preventDefault();\n    let { loggedinUser, updateJob } = props;\n    let jobToUpdate = cloneDeep(job);\n    jobToUpdate.userId = loggedinUser._id;\n    jobToUpdate.customerId = jobToUpdate.customer.email;\n    let assigneesId = jobToUpdate.assignee.map((x) => x._id);\n    let assigneeIndex = jobToUpdate.assignee.findIndex(\n      (x) => x._id === assignee\n    );\n    assigneesId.splice(assigneeIndex, 1);\n    jobToUpdate.assigneesId = assigneesId;\n    delete jobToUpdate.assignee;\n    delete jobToUpdate.customer;\n    updateJob(jobToUpdate._id, jobToUpdate, (res) => {\n      getalljobs({\n        date: today,\n      });\n      getalljobsfiveday({\n        date: today,\n      });\n    });\n  };\n\n  const toggleCollapse = (i) => {\n    if (i === showIndex) {\n      setShowIndex(null);\n    } else {\n      setShowIndex(i);\n    }\n  };\n\n  const jobDetailsNavigate = (jobId) => {\n    let { history } = props;\n    history.push(`/job/detail/${jobId}`);\n  };\n\n  const updateJobAssigneeList = (e, moverObj) => {\n    e.stopPropagation();\n    setModalShow(false);\n    moverObj.assigneesId.push(moverObj.moverId);\n    moverObj.jobToUpdate.assigneesId = moverObj.assigneesId;\n    let job = cloneDeep(moverObj.jobToUpdate);\n    updateJobAssignee(e, job);\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    popover: {\n      pointerEvents: \"none\",\n    },\n    badge: {\n      backgroundColor: \"#00adee\",\n      color: \"white\"\n    }\n  }));\n\n  const classes = useStyles();\n\n  const printAllJobs = (e) => {\n    for (var job of props.jobs) {\n      generatePDF(e, job);\n    }\n  };\n\n  const Navigate = (e) => {\n    setModalShow(false);\n  };\n\n  const onSelectedDay = (d) => {\n    getalljobs({\n      date: d.toString(),\n    });\n    getalljobsfiveday({\n      date: d.toString(),\n    });\n    setToday(new Date(d).toString());\n  };\n\n  const onDragEnd = (result) => {\n    const { destination, source } = result;\n    let { showMessage } = props;\n    let moverId = source.droppableId;\n    if (!destination) {\n      showMessage(\"Please drop on job item.\");\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      showMessage(\"Please drop on job item.\");\n      return;\n    }\n\n    let jobToUpdate = props.jobs.filter(\n      (job) => job.jobId === parseInt(destination.droppableId)\n    );\n\n    if (jobToUpdate.length > 0) {\n      let index = jobToUpdate[0].assignee.findIndex(\n        (x) => x._id === source.droppableId\n      );\n      if (index !== -1) {\n        // Already Assigned\n        showMessage(\"Already Assigned\");\n      } else {\n        let assigneesId = jobToUpdate[0].assignee.map((x) => x._id);\n\n        let index = movers.findIndex((x) => x.mover._id === moverId);\n        let moverAssignedDate = movers[index].mover.jobs.filter((job) => {\n          return (\n            job.dates.some((date) => date === new Date(today).toDateString()) &&\n            job.status === \"booked\"\n          );\n        });\n\n        let moverJobs = moverAssignedDate.length > 0 ? true : false;\n        if (moverJobs) {\n          let mover = movers.find((x) => x.mover._id === moverId);\n          setMover(mover);\n          setMoverAssignedJobs(moverAssignedDate)\n          let newAssigneeObj = {\n            moverId,\n            assigneesId: assigneesId,\n            jobToUpdate: jobToUpdate[0],\n          };\n          setAssignee(newAssigneeObj);\n          setModalShow(true);\n        } else {\n          assigneesId.push(moverId);\n          jobToUpdate[0].assigneesId = assigneesId;\n          let job = cloneDeep(jobToUpdate[0]);\n          updateJobAssignee(null, job);\n        }\n      }\n    }\n  };\n\n\n  // const getDateTime = (job) => { \n  //   let obj = job.dates.find(x => x.date == new Date(today).toDateString())\n  //   return formatAMPM(obj.time)\n  //  };\n  const moverListItem = (mover) => {\n    return (\n      <div key={mover._id.toString()}>\n        <Droppable\n          droppableId={mover._id.toString()}\n          type=\"TASK\"\n        >\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              <Draggable\n                draggableId={mover._id.toString()}\n                index={mover._id}\n              >\n                {(provided, snapshot) => (\n                  <div\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                  >\n                    <h6 className={style.moverHeader} key={mover._id.toString()}>\n                      <Badge badgeContent={mover.todayJobs} classes={{ badge: classes.badge }}>\n                        {mover.name}\n                      </Badge>\n                      <span className={style.hideAssigneeId}>\n                        {mover._id}\n                      </span>\n                    </h6>\n                  </div>\n                )}\n              </Draggable>\n            </div>\n          )}\n        </Droppable>\n      </div>\n    );\n  }\n\n  const moversList = (list) => {\n    let movers = []\n    let crewLeaders = []\n    let newMovers = [];\n    list.map(x => {\n      switch (x.mover.attribute) {\n        case 'mover':\n          // code block\n          movers.push(x.mover)\n          break;\n        case 'crew leader':\n          // code block\n          crewLeaders.push(x.mover)\n          break;\n        case 'new mover':\n          // code block\n          newMovers.push(x.mover)\n          break;\n        default:\n        // code block\n      }\n    })\n    return (\n      <Fragment>\n        <h5>Crew Leaders</h5>\n        {crewLeaders.map(x => moverListItem(x))}<hr />\n        <h5>Movers</h5>\n        {movers.map(x => moverListItem(x))}<hr />\n        <h5>New Movers</h5>\n        {newMovers.map(x => moverListItem(x))}<hr />\n      </Fragment>\n    )\n  }\n\n  return (\n    <div className={`${style.scheduleContainer}`}>\n      <div className={style.sidebar}>\n        <SideBar routes={routes} />\n      </div>\n      <div className={style.dragContent}>\n        <DragDropContext onDragEnd={onDragEnd}>\n          <div className={style.jobContent}>\n            <div className={style.styleDatePicker}>\n              <DatePicker\n                endDate={365}\n                getSelectedDay={(e) => {\n                  onSelectedDay(e);\n                }}\n                labelFormat={\"MMMM yyyy\"}\n                color={\"#2d2926\"}\n                selectDate={newDate}\n              />\n            </div>\n            <hr className={style.styleLine}></hr>\n            {props.jobs && props.movers && (\n              <div className={style.moverAssigneeInfo}>\n                <div>\n                  <h6>\n                    {`Total Jobs: `} <span>{props.jobs.length}</span>{\" \"}\n                  </h6>\n                </div>\n                <div>\n                  <h6>\n                    {`Movers Available:`} <span> {props.movers.length}</span>{\" \"}\n                  </h6>\n                </div>\n                <div>\n                  <h6>\n                    Movers Required:{\" \"}\n                    {props.jobs.length > 0 ? (\n                      props.jobs.reduce(\n                        (sum, currentValue) =>\n                          sum + currentValue.assigneeRequired,\n                        0\n                      )\n                    ) : (\n                      <span>0</span>\n                    )}\n                  </h6>\n                </div>\n                <div>\n                  <Button className={style.button} onClick={printAllJobs}>\n                    <i className=\"fa fa-print mr-2\"></i>\n                    <div className=\"text-uppercase font-weight-bold \">{`Print All`}</div>\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            <hr className={style.styleLine}></hr>\n            {props.jobs && props.jobs.length > 0 ? (\n              props.jobs.map((list, i) => {\n                return (\n                  <Droppable\n                    droppableId={list.jobId.toString()}\n                    type=\"TASK\"\n                    key={i}\n                  >\n                    {(provided, snapshot) => (\n                      <div\n                        id=\"accordion\"\n                        key={i}\n                        ref={provided.innerRef}\n                        {...provided.droppableProps}\n                      >\n                        <div\n                          className={list.assignee.length < list.assigneeRequired ? `${style.cardHeader} card-header ${style.dangerClass} ${style.flex}` : `card-header ${style.cardHeader} ${style.flex}`}\n                          aria-expanded=\"true\"\n                          data-toggle=\"collapse\"\n                          data-target={`#collapse${i}`}\n                          aria-controls=\"collapse\"\n                          id=\"headingOne\"\n                          onClick={() => toggleCollapse(i)}\n                          onDoubleClick={() => jobDetailsNavigate(list._id)}\n                        >\n                          <div>\n                            <div className={style.heading}>{`Title:`}</div>\n                            <div className={style.content}>{list.title}</div>\n                          </div>\n\n                          <div>\n                            <div className={style.heading}>{`Movers Req:`}</div>\n                            <div className={style.content}>{list.assigneeRequired}</div>\n\n                            <span className={style.hideJobId}>\n                              {list.jobId}\n                            </span>\n                          </div>\n\n                          <div>\n                            <div className={style.heading}>{`Time:`}</div>\n                            <div className={`text-uppercase ${style.content}`}>\n                              {\n                                formatAMPM(list.dates[0].time)\n                              }\n                              {\n                                // getDateTime(list)\n                              }\n                            </div>\n                          </div>\n\n                          <div>\n                            <div className={style.heading}>{`Assignee:`}</div>\n                            <div className={style.content}>{list.assignee.length > 0 ? (\n\n                              <div>\n\n                                {list.assignee.map((assignee, i) => (\n                                  <div key={i} className={style.assignee}>\n\n                                    <div className={style.assigneeName}>\n                                      {assignee.name}\n                                    </div>\n\n                                    <div className={style.closeIcon}>\n                                      <FontAwesomeIcon\n                                        onClick={(e) =>\n                                          removeAssignee(e, list, assignee._id)\n                                        }\n                                        icon={faTimes}\n                                        size=\"1x\"\n                                      />\n                                    </div>\n                                  </div>\n                                ))}\n                              </div>\n                            ) : (\n                              <div>N/A</div>\n                            )}</div>\n\n                          </div>\n\n                          <div>\n                            <Button className={list.assignee.length < list.assigneeRequired ? `${style.deleteButtonTwo}` : ` ${style.deleteButtonOne}`}\n                              onClick={(e) => generatePDF(e, list)}>\n                              <i className=\"fa fa-print mr-2\"></i>\n                              {`Print`}\n                            </Button>\n                          </div>\n                        </div>\n                        <div\n                          id={`collapse${i}`}\n                          className=\"collapse\"\n                          aria-labelledby=\"headingOne\"\n                          data-parent=\"#accordion\"\n                        >\n                          <div className={`card-body ${style.cardBody}`}>\n                            <h4>Job Details</h4>\n                            <div className={style.jobDetailList}>\n                              <div className={style.jobTitle}>\n                                <div className={`text-muted ${style.heading}`}>{`Job Title:`}</div>\n                                <div className={style.content}>{list.title} </div>\n                              </div>\n                              <div className={style.jobsId}>\n                                <div className={`text-muted ${style.heading}`}>{`Job ID:`}</div>\n                                <div className={style.content}>{list.jobId}</div>\n                              </div>\n\n                              <div className={style.jobTypee}>\n                                <div className={`text-muted ${style.heading}`}>{`Job Type:`}</div>\n                                <div className={style.content}>{list.jobType}</div>\n                              </div>\n                              <div className={style.jobStatus}>\n\n                                <div className={`text-muted ${style.heading}`}>{`Status:`}</div>\n                                <Chip\n                                  className={style.content}\n                                  label={list.status}\n                                  clickable\n                                  size=\"small\"\n                                  color=\"primary\"\n                                  variant=\"outlined\"\n                                ></Chip>\n                              </div>\n\n                            </div>\n\n                            <div className={style.jobDescriptionHeader}>\n                              <h4>Job Description</h4>\n                            </div>\n                            <div className={style.jobDescription}>\n                              <span className={style.jobDescriptionText}>{parse(list.description)}</span>\n                            </div>\n                            <hr />\n                            <div className={style.customerDetailContainer}>\n                              <h4>Customer Details</h4>\n                              <div className={style.customerDetailList}>\n                                <div className={style.customerDetailListContent}>\n                                  <div>\n                                    <div className={`text-muted ${style.heading}`}>{`Name:`}</div>\n                                    <div className={style.content}>\n                                      {list.customer.firstName}\n                                      {list.customer.lastName}\n                                    </div>\n                                  </div>\n\n                                  <div>\n                                    <div className={`text-muted ${style.heading}`}>{`E-Mail:`}</div>\n                                    <div className={style.contentMail}>{list.customer.email}</div>\n                                  </div>\n                                  <div>\n                                    <div className={`text-muted ${style.heading}`}>{`Phone:`}</div>\n                                    <div className={style.content}>{list.customer.phone}</div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </Droppable>\n                );\n              })\n            ) : (props.jobs && props.jobs.length == 0 ?\n              <div className=\"text-center\">\n                <img src=\"/images/no-data-found.png\" alt=\"\" />\n              </div> : null\n            )}\n          </div>\n\n          <div className={`${style.movers}  ${style.mov}`} id=\"mov\">\n            <div className={` ${style.scroll}`}>\n              {/* <h4 className={`  ${style.movehead}`}>Movers</h4> */}\n              <div className={`${style.scrollBar}`}>\n                <div className={`  ${style.scrollContent}`}>\n                  {movers && moversList(movers)}\n                </div>\n              </div>\n            </div>\n          </div>\n        </DragDropContext>\n      </div>\n      <Modal\n        show={modalShow}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        onHide={(e) => Navigate(e)}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Confirmation\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {mover && (\n            <h5>\n              {mover.mover.name}{\" \"}\n              <span className={style.styleText}>\n                has been assigned to these jobs:\n              </span>{\" \"}\n            </h5>\n          )}\n\n          {moverAssignedJobs &&\n            moverAssignedJobs.map((job, i) => (\n              <div key={i} className={style.styleModalBody}>\n                <a\n                  className={style.styleLink}\n                  href=\"/#\"\n                  onClick={() =>\n                    window.open(`/job/detail/${job._id}`, \"_blank\")\n                  }\n                >\n                  &#42;{job.title}\n                </a>\n                <Chip\n                  label={job.startTime ? formatAMPM(job.startTime) : \"N/A\"}\n                  clickable\n                  color=\"primary\"\n                  variant=\"outlined\"\n                ></Chip>\n              </div>\n            ))}\n        </Modal.Body>\n        <Modal.Footer>\n          <div className={style.modalBtns}>\n            <Button\n              className={style.button}\n              onClick={(e) => updateJobAssigneeList(e, newAssignee)}\n            >\n              Confirm\n            </Button>\n            <Button\n              className={style.button}\n              onClick={(e) => {\n                Navigate(e);\n              }}\n            >\n              Close\n            </Button>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\nvar mapStateToProps = (state) => ({\n  jobs: state.schedule.jobList,\n  movers: state.schedule.moverList,\n  loggedinUser: state.users.user,\n  newDate: state.common.scheduleDate,\n});\n\nvar actions = {\n  getalljobs,\n  getalljobsfiveday,\n  showMessage,\n  updateJob,\n};\nexport default connect(mapStateToProps, actions)(DailySchedule);\n","import { GET_ALLJOBS, GET_ALLJOBS_FIVEDAYS } from \"./scheduleConstant\";\nimport Axios from \"axios\";\nimport { showMessage } from \"../../Redux/Common/commonActions\";\n\nexport const getalljobs = (jobObj) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.post(\"schedule/current-jobs\", jobObj, {\n        config: { handlerEnabled: true }\n      });\n      //update app's state\n      dispatch({\n        type: GET_ALLJOBS,\n        payload: response.data.data,\n      });\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const getalljobsfiveday = (jobObj) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.post(\"schedule/movers\", jobObj, {\n        config: { handlerEnabled: true }\n      });\n      //update app's state\n      dispatch({\n        type: GET_ALLJOBS_FIVEDAYS,\n        payload: response.data.data,\n      });\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n\nexport const getAllMover = (callback) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios.get(\"mover\", {\n        config: { handlerEnabled: true }\n      });\n      callback(response);\n    } catch (err) {\n      dispatch(showMessage(err.message));\n    }\n  };\n};\n","export const GET_ALLJOBS = \"GET_ALLJOBS\"\nexport const GET_ALLJOBS_FIVEDAYS = \"GET_ALLJOBS_FIVEDAYS\"","import React, { useEffect, useState } from \"react\";\nimport style from \"./Movers.module.css\";\nimport SideBar from \"../../../components/Sidebar/SideBar\";\nimport { getAllMover } from \"../../../Redux/Schedule/scheduleAction\";\nimport { faUser, faClock, faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport { Button, Chip, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nconst MoversSchedule = (props) => {\n  const [allMovers, setAllMovers] = useState();\n  const [filteredMovers, setFilteredMovers] = useState();\n  const [dropDownMenu, setDropDownMenu] = useState('All')\n  useEffect(() => {\n    let { getAllMover } = props;\n    getAllMover(res => {\n      setAllMovers(res.data.data)\n      setFilteredMovers(res.data.data)\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const routes = [\n    {\n      title: \"Daily Schedule\",\n      path: \"/schedule\",\n      icon: <FontAwesomeIcon icon={faClock} />,\n    },\n\n    {\n      title: \"Unavailable\",\n      path: \"/schedule/unavailable\",\n\n      icon: <FontAwesomeIcon icon={faBan} />,\n    },\n\n    {\n      title: \"Movers\",\n      path: \"/schedule/movers\",\n\n      icon: <FontAwesomeIcon icon={faUser} />,\n    },\n  ];\n\n  const handleDropDownMenu = (e) => {\n    let value = e.target.value\n    setDropDownMenu(value)\n    if (value === 'All') {\n      setFilteredMovers(allMovers)\n    } else {\n      let filteredMovers = allMovers.filter((mover) => mover.attribute && mover.attribute.toLowerCase() === value.toLowerCase())\n      setFilteredMovers(filteredMovers)\n    }\n  }\n\n  return (\n\n    <div className={`${style.moversContainer}`}>\n      <div className={style.sidebar}>\n        <SideBar routes={routes} />\n      </div>\n      <div className={style.moversContent}>\n        <div className={style.moverHeader}>\n          <div>\n            <h3>Movers</h3>\n          </div>\n          <div className={style.approveBtn}>\n            <Link to=\"/user/add\">\n              <Button className={style.button}>Create New</Button>\n            </Link>\n          </div>\n          <div className={`dropdown ${style.flexEnd}`}>\n            <i\n              className={`fa fa-filter dropdown-toggle ${style.dropDownIcon}`}\n              type=\"button\"\n              id=\"dropdownMenuButton\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            ></i>\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n              <RadioGroup\n                aria-label=\"gender\"\n                name=\"gender1\"\n                value={dropDownMenu}\n                onChange={handleDropDownMenu}\n              >\n                <FormControlLabel\n                  value=\"All\"\n                  control={<Radio />}\n                  label=\"All\"\n                  className=\"dropdown-item\"\n                />\n                <FormControlLabel\n                  value=\"Crew Leader\"\n                  control={<Radio />}\n                  label=\"Crew Leader\"\n                  className=\"dropdown-item\"\n                />\n                <FormControlLabel\n                  value=\"Mover\"\n                  control={<Radio />}\n                  label=\"Mover\"\n                  className=\"dropdown-item\"\n                />\n                <FormControlLabel\n                  value=\"New Mover\"\n                  control={<Radio />}\n                  label=\"New Mover\"\n                  className=\"dropdown-item\"\n                />\n              </RadioGroup>\n            </div>\n          </div>\n        </div>\n\n        <div className={`list-group ${style.moverList}`}>\n          <div className={style.listContent}>\n            {filteredMovers && filteredMovers.length ? (\n              filteredMovers.map((list, i) => {\n                return (\n                  <div key={i} className={`${style.list} text-capitalize list-group-item list-group-item-action flex-column align-items-start`}>\n                    <div className=\"d-flex w-100 justify-content-between\">\n                      <h5 className={`mb-1 `}>{list.name}</h5>\n                      <Chip\n                        size=\"small\"\n                        label={list.attribute}\n                      />\n                    </div>\n                    <div>\n                      {list.weeklySchedule\n                        .filter((day) => day.status)\n                        .map((status, i) => {\n                          return (\n                            <span className=\"mb-1\" key={i}>\n                              {status.day.split(\"\", 3).join(\"\")}&nbsp;\n                            </span>\n                          );\n                        })}\n                    </div>\n                  </div>\n                );\n              })\n            ) : ( filteredMovers && filteredMovers.length ?\n              <div className=\"text-center\">\n                <img src=\"/images/no-data-found.png\" alt=\"\" />\n              </div> : null\n            )}\n          </div>\n        </div>\n      </div>\n    </div >\n  );\n};\n\nvar actions = {\n  getAllMover\n};\n\nexport default connect(null, actions)(MoversSchedule);\n","import React, { useState, useEffect } from \"react\";\nimport style from \"./UserList.module.css\";\nimport { Button, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { getUsers } from \"../../../Redux/User/userActions\";\nimport Pagination from \"../../../components/Pagination/Pagination\";\nimport SearchBar from \"../../../components/SearchBar/SearchBar\";\n\nconst UserList = (props) => {\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filterType, setFilterType] = useState('');\n\n  const { users, getUsers } = props;\n  let totalCount = 0;\n  if (users) {\n    var { docs } = users;\n    totalCount = users.total;\n  }\n\n  useEffect(() => {\n    let usersObj = {\n      query: \"\",\n      filter: {\n        type: \"\",\n      },\n      page: 1\n    };\n    getUsers(usersObj);\n  }, [getUsers]);\n\n  const handlePageChange = (page) => {\n    let usersObj = {\n      query: \"\",\n      filter: {\n        type: \"\",\n      },\n      page: page,\n    };\n    getUsers(usersObj);\n    setCurrentPage(page);\n  };\n\n  const handleFilter = (e) => {\n    let value = e.target.value;\n    let sortUserObj = {\n      query: \"\",\n      filter: {\n        type: value,\n      },\n      page: 1\n    };\n    setFilterType(value)\n    getUsers(sortUserObj);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div>\n      {users && docs && (\n        <div>\n          <div className={`${style.toprow}`}>\n            <div className={style.rowContent}>\n              <div>\n                <h3>Users List</h3>\n              </div>\n\n              <div>\n                <SearchBar type=\"user\" title=\"Type name or email\" />\n              </div>\n\n              <div className={`${style.filter}`}>\n                <i\n                  className=\"fa fa-filter dropdown-toggle\"\n                  href=\"#\"\n                  role=\"button\"\n                  id=\"dropdownMenuLink\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                ></i>\n                <div\n                  className=\"dropdown-menu\"\n                  aria-labelledby=\"dropdownMenuLink\"\n                >\n                \n                  <RadioGroup\n                    aria-label=\"Filter\"\n                    name=\"Filter\"\n                    value={filterType}\n                    onChange={(e) => handleFilter(e)}\n                  >\n                    <FormControlLabel\n                      value=\"\"\n                      control={<Radio />}\n                      label=\"All\"\n                      className=\"dropdown-item\"\n                    />\n                    <FormControlLabel\n                      value=\"mover\"\n                      control={<Radio />}\n                      label=\"Movers\"\n                      className=\"dropdown-item\"\n                    />\n                    <FormControlLabel\n                      value=\"manager\"\n                      control={<Radio />}\n                      label=\"Manager\"\n                      className=\"dropdown-item\"\n                    />\n                  </RadioGroup>\n\n                </div>\n              </div>\n\n              <div className={style.btnStyle}>\n                <Link className={style.link} to=\"/user/add\">\n                  <Button className={style.btn}>Create New</Button>\n                </Link>\n              </div>\n            </div>\n          </div>\n          {docs && docs.length > 0 ? (\n            <div>\n              {/* <div className={style.jumbotron}>\n                <div className={style.listheader}>\n                  <div>Name</div>\n                  <div>Attribute</div>\n                  <div>Address</div>\n                </div>\n              </div> */}\n\n              <div>\n                {docs.map((usersDoc, i) => {\n                  return (\n                    <div className={style.listContainer} key={i}>\n                      <div className={`${style.listContent} `}>\n                      <Link to ={ `/user/update/${usersDoc._id}`}\n                         key={i}\n                         className={style.styleLink}\n\n                      >\n                        <div className={style.userList}>\n                        \n                          <div className={`${style.item} ${style.flex}`}>\n                            <div className={`text-muted ${style.listTitle}`}>Name:</div>\n                            <div className={style.listDetail}>{usersDoc.name}</div>\n                          </div>\n                          <div className={`${style.item} ${style.flex}`}>\n                          <div className={`text-muted ${style.listTitle}`}>Attribute:</div>\n                            <div className={style.listDetail}>{usersDoc.attribute}</div>\n                          </div>\n                          <div className={`${style.item} ${style.flex}`}>\n                          <div className={`text-muted ${style.listTitle}`}>Address:</div>\n                            <div className={style.listDetail}>{usersDoc.address}</div>\n                          </div>\n                        </div>\n                        </Link>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n\n              <div className={style.stylePagination}>\n                <div className={style.pagination} >\n                  <Pagination\n                    itemCount={totalCount}\n                    pageSize={10}\n                    currentPage={currentPage}\n                    onPageChange={handlePageChange}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : (\n              <div className=\"text-center\">\n                <img src=\"/images/no-data-found.png\" alt=\"\" />\n              </div>\n            )}\n        </div>\n      )}\n    </div>\n  );\n};\nvar mapStateToProps = (state) => ({\n  users: state.users.userList\n});\nvar actions = {\n  getUsers\n};\nexport default connect(mapStateToProps, actions)(UserList);\n","import React, { Component } from \"react\";\nimport style from \"./CreateUser.module.css\";\nimport { Button, FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport { createUser } from \"../../../Redux/User/userActions\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { connect } from \"react-redux\";\nimport { TextField } from \"@material-ui/core\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst initialState = {\n  name: \"\",\n  type: \"\",\n  email: \"\",\n  phone: \"\",\n  address: \"\",\n  attribute: \"\",\n  nameError: \"\",\n  typeError: \"\",\n  emailError: \"\",\n  phoneError: \"\",\n  addressError: \"\",\n  attributeError: \"\",\n  attributeOptions: []\n};\n\nclass CreateUser extends Component {\n  typeOptions = [\n    { name: \"Manager\", id: 1 },\n    { name: \"Mover\", id: 2 },\n  ];\n\n  attributeOptions = [\n    { name: \"Crew Leaders\", value: 'crew leader' },\n    { name: \"Movers\", value: 'mover' },\n    { name: \"New Movers\", value: 'new mover' },\n  ];\n\n  roleOptions = [\n    {\n      name: \"Manager\",\n      id: 1,\n      options: [\n        { type: \"Manager\" },\n        { type: \"New Manager\" }\n      ]\n    },\n    {\n      name: \"Mover\",\n      id: 2,\n      options: [\n        { type: \"Crew Leader\" },\n        { type: \"Mover\" },\n        { type: \"New Mover\" }\n      ]\n    }\n  ]\n\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n\n  }\n  onTypeSelect = (e) => {\n    console.log(e.target.value)\n    let value = e.target.value\n    if (value == 'Mover') {\n      this.setState({ attributeOptions: this.roleOptions[1].options, type: this.roleOptions[1].name, attribute:\"\" })\n    } else {\n      this.setState({ attributeOptions: this.roleOptions[0].options, type: this.roleOptions[0].name, attribute:\"\" })\n    }\n    // this.setState({ type: selectedItem });\n  };\n\n  onAttributeSelect = (e) => {\n    let { value } = e.target;\n    this.setState({ attribute: value });\n  };\n\n  validate = () => {\n    let nameError = \"\";\n    let emailError = \"\";\n    let phoneError = \"\";\n    let addressError = \"\";\n    let typeError = \"\";\n    let attributeError = \"\";\n\n    let mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    if (!this.state.name) {\n      nameError = \"Name should not be empty\";\n    }\n\n    if (!this.state.email.match(mailformat)) {\n      emailError = \"Invalid Email\";\n    }\n\n    if (!this.state.phone) {\n      phoneError = \"Number should not be empty\";\n    }\n\n    if (!this.state.address) {\n      addressError = \"Address should not be empty\";\n    }\n\n    if (!this.state.type) {\n      typeError = \"Type should not be empty\";\n    }\n\n    if (!this.state.attribute) {\n      attributeError = \"Attribute should not be empty\";\n    }\n\n    if (\n      nameError ||\n      emailError ||\n      phoneError ||\n      addressError ||\n      typeError ||\n      attributeError\n    ) {\n      this.setState({\n        nameError,\n        emailError,\n        phoneError,\n        addressError,\n        typeError,\n        attributeError,\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  handlePhoneNumberInput = (value, previousValue) => {\n    // return nothing if no value\n    if (!value) return value;\n\n    // only allows 0-9 inputs\n    const currentValue = value.replace(/[^\\d]/g, '');\n    const cvLength = currentValue.length;\n\n    if (!previousValue || value.length > previousValue.length) {\n\n      // returns: \"x\", \"xx\", \"xxx\"\n      if (cvLength < 4) return currentValue;\n\n      // returns: \"(xxx)\", \"(xxx) x\", \"(xxx) xx\", \"(xxx) xxx\",\n      if (cvLength < 7) return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`;\n\n      // returns: \"(xxx) xxx-\", (xxx) xxx-x\", \"(xxx) xxx-xx\", \"(xxx) xxx-xxx\", \"(xxx) xxx-xxxx\"\n      return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3, 6)}-${currentValue.slice(6, 10)}`;\n    }\n  }\n\n  handleFormInput = (event) => {\n\n    let { name, value } = event.target;\n    if (name === 'phone') {\n      this.setState(prevState => ({ phone: this.handlePhoneNumberInput(value, prevState.phone) }))\n    } else {\n      this.setState({ [name]: value });\n    }\n    if (value === \"\") {\n      this.setState({ [name + \"Error\"]: \"Should not be empty\" });\n    } else {\n      this.setState({ [name + \"Error\"]: \"\" });\n    }\n  };\n\n  mySubmitHandler = (event) => {\n    event.preventDefault();\n    const isValid = this.validate();\n    let { createUser, history } = this.props;\n\n    if (isValid) {\n      let { name, phone, email, address, type, attribute } = this.state;\n      let createdUserObj = {\n        name,\n        phone,\n        address,\n        email,\n        role: type.toLowerCase(),\n        attribute: attribute.toLowerCase(),\n      };\n      createUser(createdUserObj, () => history.push(\"/users\"))\n    }\n  };\n\n  render() {\n    return (\n      <div className={style.userContainer}>\n        <div className={`${style.userForm}`}>\n          <h3 className={style.head}>Create User</h3>\n\n          <div>\n            <form>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                size=\"small\"\n                autoFocus\n                id=\"name\"\n                label=\"Full Name\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handleFormInput}\n                error={this.state.nameError ? true : false}\n                className={style.styleFormFields}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                size=\"small\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.handleFormInput}\n                error={this.state.emailError ? true : false}\n                className={style.styleFormFields}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                size=\"small\"\n                id=\"phnumber\"\n                label=\"Phone Number\"\n                name=\"phone\"\n                value={this.state.phone}\n                onChange={this.handleFormInput}\n                error={this.state.phoneError ? true : false}\n                className={style.styleFormFields}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                size=\"small\"\n                id=\"address\"\n                label=\"Address\"\n                name=\"address\"\n                value={this.state.address}\n                error={this.state.addressError ? true : false}\n                onChange={this.handleFormInput}\n                className={style.styleAddress}\n              />\n\n\n              {/* <Autocomplete\n                id=\"combo-box-demo\"\n                options={this.typeOptions}\n                onChange={this.onTypeSelect}\n                getOptionLabel={(option) => option.name}\n                className={style.styleMultiSelect}\n                size=\"small\"\n                renderInput={(params) => <TextField\n                  required {...params} label=\"Select Type\" variant=\"outlined\"\n                  error={this.state.typeError ? true : false}\n                />}\n              />\n              <Autocomplete\n                id=\"combo-box-demo\"\n                options={this.attributeOptions}\n                onChange={this.onAttributeSelect}\n                getOptionLabel={(option) => option.name}\n                className={style.styleMultiSelect}\n                size=\"small\"\n                renderInput={(params) => <TextField\n\n                  required {...params} label=\"Select Attribute\" variant=\"outlined\"\n                  error={this.state.attributeError ? true : false}\n                />}\n              /> */}\n\n\n              <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Role *\n              </InputLabel>\n                <Select\n                  required\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  value={this.state.type}\n                  onChange={this.onTypeSelect}\n                  label=\"Role\"\n                  name=\"type\"\n                >\n                  {this.roleOptions.map((x, i) => <MenuItem value={x.name}>{x.name}</MenuItem>)}\n                </Select>\n              </FormControl>\n              <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Role Type*\n              </InputLabel>\n                <Select\n                  required\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  // value={}\n                  onChange={this.onAttributeSelect}\n                  label=\"Role Type\"\n                  name=\"attribute\"\n                >\n                  {this.state.attributeOptions.map((y, i) => <MenuItem value={y.type}>{y.type}</MenuItem>)}\n                </Select>\n              </FormControl>\n\n              <div className={style.createBtn}>\n                <Button className={style.button} onClick={this.mySubmitHandler}>\n                  Create\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nvar actions = {\n  createUser\n};\n\nexport default connect(null, actions)(CreateUser);\n","import { TextField, FormControlLabel } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch } from \"@material-ui/core\";\nimport { getUser, updateUser } from \"../../../Redux/User/userActions\";\nimport style from \"./UpdateUser.module.css\";\n\nconst UpdateUser = (props) => {\n  let {\n    match: {\n      params: { userId },\n    },\n  } = props;\n  let { updateUser } = props;\n\n  let [userState, setUserState] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    address: \"\",\n    activeStatus: ''\n  });\n  let [disabledFields, setDisabledFields] = useState(true);\n\n  useEffect(() => {\n\n    getUser(userId, (res) => {\n      setUserState(res.data.data);\n\n\n    })\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handlePhoneNumberInput = (value, previousValue) => {\n    // return nothing if no value\n    if (!value) return value;\n\n    // only allows 0-9 inputs\n    const currentValue = value.replace(/[^\\d]/g, \"\");\n    const cvLength = currentValue.length;\n\n    if (!previousValue || value.length > previousValue.length) {\n      // returns: \"x\", \"xx\", \"xxx\"\n      if (cvLength < 4) return currentValue;\n\n      // returns: \"(xxx)\", \"(xxx) x\", \"(xxx) xx\", \"(xxx) xxx\",\n      if (cvLength < 7)\n        return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`;\n\n      // returns: \"(xxx) xxx-\", (xxx) xxx-x\", \"(xxx) xxx-xx\", \"(xxx) xxx-xxx\", \"(xxx) xxx-xxxx\"\n      return `(${currentValue.slice(0, 3)}) ${currentValue.slice(\n        3,\n        6\n      )}-${currentValue.slice(6, 10)}`;\n    }\n  };\n\n  const handleFormInput = (event) => {\n    let { name, value } = event.target;\n    if (name === \"phone\") {\n      setUserState((prevState) => ({\n        ...userState,\n        phone: handlePhoneNumberInput(value, prevState.phone),\n      }));\n    } else {\n      setUserState({ ...userState, [name]: value });\n    }\n\n  };\n\n  //handler for switch\n  const handleChange = () => {\n\n    setUserState({ ...userState, activeStatus: !userState.activeStatus })\n\n  };\n  const updateUserData = () => {\n    let userData = {\n      name: userState.name,\n      email: userState.email,\n      phone: userState.phone,\n      address: userState.address,\n      activeStatus: userState.activeStatus,\n    };\n    updateUser(userData, userId, 'admin', () => setDisabledFields(true));\n  };\n  return (\n    <div className={style.userContainer}>\n      <div className={`${style.userForm}`}>\n        <h3 className={style.head}>Update User</h3>\n\n        {userState && (\n          <div>\n            <form>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                size=\"small\"\n                autoFocus\n                id=\"name\"\n                label=\"Full Name\"\n                disabled={disabledFields}\n                name=\"name\"\n                value={userState.name}\n                onChange={handleFormInput}\n                // error={this.state.nameError ? true : false}\n                className={style.styleFormFields}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                disabled={disabledFields}\n                size=\"small\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={userState.email}\n                onChange={handleFormInput}\n                // error={this.state.emailError ? true : false}\n                className={style.styleFormFields}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                size=\"small\"\n                id=\"phnumber\"\n                label=\"Phone Number\"\n                disabled={disabledFields}\n                name=\"phone\"\n                value={userState.phone}\n                onChange={handleFormInput}\n                // error={this.state.phoneError ? true : false}\n                className={style.styleFormFields}\n              />\n\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                size=\"small\"\n                id=\"address\"\n                label=\"Address\"\n                name=\"address\"\n                value={userState.address}\n                // error={this.state.addressError ? true : false}\n                onChange={handleFormInput}\n                disabled={disabledFields}\n                className={style.styleAddress}\n              />\n              <div className={style.flexEnd}>\n\n\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={userState.activeStatus}\n                      onChange={handleChange}\n                      color=\"primary\"\n                      name=\"activeStatus\"\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                    />\n                  }\n                  label={userState.activeStatus ? 'Active' : 'In Active'}\n                />\n              </div>\n              <div className={`${style.styleFormFields} ${style.updateBtn}`}>\n                {disabledFields === true ? (\n                  <Button\n                    className={style.button}\n                    onClick={() => setDisabledFields(false)}\n                  >\n                    Edit\n                  </Button>\n                ) : (\n                    <Button className={style.button} onClick={updateUserData}>\n                      Update\n                    </Button>\n                  )}\n              </div>\n            </form>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nvar actions = {\n  updateUser,\n  getUser\n};\n\nexport default connect(null, actions)(UpdateUser);\n","import React, { useEffect } from \"react\";\nimport style from \"./Account.module.css\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { resetPassword, updateUser } from \"../../Redux/User/userActions\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal } from \"react-bootstrap\";\n\nconst Account = (props) => {\n  let { user } = props;\n  const [disabledForm, setDisabledForm] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n\n  const [editAccount, setEditAccount] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    address: \"\",\n    phone: \"\",\n    nameError: \"\",\n    emailError: \"\",\n    passwordError: \"\",\n    phoneError: \"\",\n    addressError: \"\",\n    confirmPasswordError: \"\",\n  });\n\n  useEffect(() => {\n    if (user) {\n      let { name, email, address, phone } = user;\n      setEditAccount({\n        name,\n        email,\n        address,\n        phone,\n      });\n    }\n  }, [user]);\n\n  const validate = () => {\n    let mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    let newData = { ...editAccount };\n\n    if (!editAccount.name) {\n      newData.nameError = \"Name should not be empty\";\n    }\n\n    if (!editAccount.email.match(mailformat)) {\n      newData.emailError = \"Invalid Email\";\n    }\n\n    if (!editAccount.phone) {\n      newData.phoneError = \"Phone should not be empty\";\n    }\n\n    if (!editAccount.address) {\n      newData.addressError = \"Address should not be empty\";\n    }\n\n    if (\n      newData.nameError ||\n      newData.emailError ||\n      newData.phoneError ||\n      newData.addressError\n    ) {\n      setEditAccount(newData);\n      return false;\n    }\n    return true;\n  };\n\n  const handlePhoneNumberInput = (value, previousValue) => {\n    // return nothing if no value\n    if (!value) return value;\n\n    // only allows 0-9 inputs\n    const currentValue = value.replace(/[^\\d]/g, '');\n    const cvLength = currentValue.length;\n\n    if (!previousValue || value.length > previousValue.length) {\n\n      // returns: \"x\", \"xx\", \"xxx\"\n      if (cvLength < 4) return currentValue;\n\n      // returns: \"(xxx)\", \"(xxx) x\", \"(xxx) xx\", \"(xxx) xxx\",\n      if (cvLength < 7) return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`;\n\n      // returns: \"(xxx) xxx-\", (xxx) xxx-x\", \"(xxx) xxx-xx\", \"(xxx) xxx-xxx\", \"(xxx) xxx-xxxx\"\n      return `(${currentValue.slice(0, 3)}) ${currentValue.slice(3, 6)}-${currentValue.slice(6, 10)}`;\n    }\n  }\n\n  const handleFormInput = (event) => {\n    let { name, value } = event.target;\n    if (name === 'phone') {\n      setEditAccount(prevState => ({ ...prevState, phone: handlePhoneNumberInput(value, prevState.phone) }))\n    } else {\n      setEditAccount((prevState) => ({\n        ...prevState,\n        [name]: value,\n      }));\n    }\n    if (value === \"\") {\n      setEditAccount((prevState) => ({\n        ...prevState,\n        [name + \"Error\"]: \"Should not be empty\",\n      }));\n    } else {\n      setEditAccount((prevState) => ({\n        ...prevState,\n        [name + \"Error\"]: \"\",\n      }));\n    }\n  };\n\n  const validateModalInputs = () => {\n    let newData = { ...editAccount };\n    if (!editAccount.password) {\n      newData.passwordError = \"Password should not be empty\";\n    }\n\n    if (editAccount.password !== editAccount.confirmPassword) {\n      newData.confirmPasswordError = \"Password do not match\";\n    }\n    if (newData.passwordError || newData.confirmPasswordError) {\n      setEditAccount(newData);\n      return false;\n    }\n    return true;\n  };\n\n  const handleModalInput = (e) => {\n    let { resetPassword } = props;\n    e.preventDefault();\n    let validateModal = validateModalInputs();\n    if (validateModal) {\n      let { password } = editAccount;\n      let data = {\n        password\n      };\n      resetPassword(data, () => setShowModal(false))\n    }\n  };\n  const mySubmitHandler = (event) => {\n    event.preventDefault();\n\n    const isValid = validate();\n    if (isValid) {\n      let { name, email, address, phone } = editAccount;\n      let updatedUserObj = {\n        name,\n        email,\n\n        address,\n        phone,\n      };\n      const { updateUser } = props;\n      updateUser(updatedUserObj, user._id, 'user', () => setDisabledForm(true))\n    }\n  };\n  return (\n    <div className={style.accountContainer}>\n      {user && (\n        <div className={style.form}>\n          <h3 className={`${style.flex} ${style.header}`}>Account</h3>\n          <form>\n            <TextField\n              variant=\"outlined\"\n              required\n              disabled={disabledForm}\n              fullWidth\n              size=\"small\"\n              id=\"name\"\n              label=\"Enter Name\"\n              name=\"name\"\n              className={style.styleFormFields}\n              value={editAccount.name}\n              onChange={handleFormInput}\n              error={editAccount.nameError ? true : false}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              size=\"small\"\n              disabled={disabledForm}\n              id=\"email\"\n              label=\"Enter Email\"\n              name=\"email\"\n              value={editAccount.email}\n              onChange={handleFormInput}\n              error={editAccount.emailError ? true : false}\n              className={style.styleFormFields}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              disabled={disabledForm}\n              size=\"small\"\n              id=\"name\"\n              label=\"Enter Phone\"\n              name=\"phone\"\n              value={editAccount.phone}\n              onChange={handleFormInput}\n              error={editAccount.phoneError ? true : false}\n              className={style.styleFormFields}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              disabled={disabledForm}\n              required\n              fullWidth\n              size=\"small\"\n              id=\"name\"\n              label=\"Enter Address\"\n              name=\"address\"\n              value={editAccount.address}\n              error={editAccount.addressError ? true : false}\n              onChange={handleFormInput}\n              className={style.styleFormFields}\n            />\n          </form>\n          {!disabledForm && (\n            <div className={style.btn}>\n              <Button className={` ${style.button}`} onClick={mySubmitHandler}>\n                Update\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n      {user && <div className={style.profile}>\n        <div className={`${style.content} `}>\n          <div className={`${style.profilePic} ${style.flex}`}></div>\n          <div className={`${style.accountHolderName} ${style.flex}`}>\n            {user.name}\n          </div>\n          <div className={`${style.accountHolderRole} ${style.flex}`}>\n            {user.role}\n          </div>\n          <div className={`${style.editButton} `}>\n            <div>\n              <Button\n                className={style.button}\n                onClick={() => setDisabledForm(false)}\n              >\n                Edit\n              </Button>\n            </div>\n            <div>\n              <Button\n                className={style.button}\n                onClick={() => {\n                  setShowModal(true);\n                }}\n              >\n                Reset Password\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n      }\n      <Modal\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        centered\n        scrollable\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Reset Password</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <TextField\n            variant=\"outlined\"\n            required\n            fullWidth\n            size=\"small\"\n            type=\"password\"\n            id=\"password\"\n            label=\"Enter Password\"\n            name=\"password\"\n            value={editAccount.password}\n            onChange={handleFormInput}\n            error={editAccount.passwordError ? true : false}\n            className={style.styleFormFields}\n          />\n          <TextField\n            variant=\"outlined\"\n            required\n            fullWidth\n            size=\"small\"\n            type=\"password\"\n            id=\"confirmPassword\"\n            label=\"Confirm Password\"\n            name=\"confirmPassword\"\n            value={editAccount.confirmPassword}\n            onChange={handleFormInput}\n            error={editAccount.confirmPasswordError ? true : false}\n            className={style.styleFormFields}\n          />\n          {/* Are you sure you want to delete this Blanket Deposit? */}\n        </Modal.Body>\n        <Modal.Footer>\n          <div className={`${style.flexEnd}`}>\n            <Button className={style.button} onClick={handleModalInput}>\n              Confirm\n            </Button>\n            <Button\n              className={style.button}\n              onClick={() => setShowModal(false)}\n            >\n              Cancel\n            </Button>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nconst action = {\n  updateUser,\n  resetPassword\n};\n\nvar mapStateToProps = (state) => ({\n  user: state.users.user,\n});\n\nexport default connect(mapStateToProps, action)(Account);\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TimeAgo from \"react-timeago\";\nimport { Button } from \"@material-ui/core\";\nimport style from \"./Claims.module.css\";\nimport DeleteConfirmation from \"../../components/DeleteConfirmation/DeleteConfirmation\";\nimport { deleteClaim } from \"../../Redux/Claim/claimActions\";\nimport { connect } from \"react-redux\";\n\nconst Claims = (props) => {\n  let { items, user } = props;\n  const [show, setShow] = useState(false);\n  const [claimToDelete, setClaimToDelete] = useState(\"\");\n\n  const handleShow = (jobId) => {\n    setClaimToDelete(jobId);\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const deleteClaim = () => {\n    props.delete(claimToDelete)\n    handleClose();\n  }\n\n\n  return (\n    <div>\n      {/* <div className={style.claimListHeaderContainer}>\n        <div className={style.claimListHeader}>\n          <div>Customer</div>\n          <div>Job Id</div>\n          <div>Status</div>\n          <div> Waiting To</div>\n          <div>Last Update</div>\n          {user && user.role === \"admin\" && <div>Actions</div>}\n        </div>\n      </div> */}\n      <div>\n        {\n          items.map((x, i) => {\n           \n            return (\n              <div className={style.listContainer} key={i}>\n                <div className={`${style.listContent}`}>\n                  <Link\n                    className={style.styleLink}\n                    to={{\n                      pathname: `/claim/detail/${x._id}`,\n                      claimsId: x._id,\n                    }}\n                  >\n                    {\" \"}\n                    <div className={style.claimList}>\n                      <div className={`${style.item} ${style.center}`}>\n                        <div className={`text-muted ${style.title}`}>{`Name:`}</div>\n                        <div className={`text-capitalize ${style.text}`}>{x.customer.firstName} {x.customer.lastName}</div>\n                        \n                      </div>\n                      <div className={`${style.item} ${style.center}`}>\n                        <div className={`text-muted ${style.title}`}>{`Job ID:`}</div>\n                        <div className={`text-capitalize ${style.text}`}>{x.job && x.job.jobId}</div>\n                      \n                      </div>\n                      <div className={`${style.item} ${style.center}`}>\n                        <div  className={`text-muted ${style.title}`}>{`Status:`}</div>\n                        <div className={`text-capitalize ${style.text}`}>{x.status.toLocaleUpperCase()}</div>\n                        \n                      </div>\n                      <div className={`${style.item} ${style.center}`}>\n                        <div className={`text-muted ${style.title}`}>{`Waiting To:`}</div>\n                        <div className={`text-capitalize ${style.text}`}>{x.waitTo}</div>\n                        \n                      </div>\n\n                      <div className={`${style.item} ${style.center}`}>\n                        <div className={`text-muted ${style.title}`}>{`Last Updated:`}</div>\n                        <div className={`text-capitalize ${style.text}`}>{x.updates.length > 0 ? (\n                          <div>\n                            {<TimeAgo date={x.updates[0].timestamp} />}\n                          </div>\n                        ) : (\n                            <div>\n                              <TimeAgo date={x.createdAt} />\n                            </div>\n                          )}\n                          </div>\n                        \n                      </div>\n                    </div>\n                  </Link>\n\n                  {user && user.role === \"admin\" && (\n                    <div className={`${style.center} ${style.actions}`}>\n                      <Button className={style.deleteBtn} onClick={() => handleShow(x._id)}>\n                        Delete\n                </Button>\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n      </div>\n      <DeleteConfirmation\n        show={show}\n        handleClose={handleClose}\n        type=\"claim\"\n        deleteItem={deleteClaim}\n      />\n    </div>\n  )\n}\n\nvar actions = {\n  deleteClaim\n};\n\nexport default connect(null, actions)(Claims);\n","import React, { useEffect, useState } from \"react\";\nimport style from \"./ClaimList.module.css\";\nimport { Button, FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getAllClaims, deleteClaim } from \"../../../Redux/Claim/claimActions\";\nimport Pagination from \"../../../components/Pagination/Pagination\";\nimport SearchBar from \"../../../components/SearchBar/SearchBar\";\nimport Claims from \"../../../components/Claims/Claims\";\n\nconst CustomerClaims = (props) => {\n  let { getAllClaims, claims, user } = props;\n  let totalCount = 0;\n  if (claims) {\n    var { docs } = claims;\n    totalCount = claims.total;\n  }\n\n  const [status, setStatus] = useState(\"all\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [value, setValue] = useState(\"all\");\n\n  useEffect(() => {\n    let claimsObj = {\n      status: \"all\",\n      page: 1,\n      query: \"\",\n    };\n    getAllClaims(claimsObj);\n  }, [getAllClaims]);\n\n  const handlePageChange = (page) => {\n    let { getAllClaims } = props;\n    let claimsObj = {\n      status,\n      page: page,\n      query: \"\",\n    };\n    getAllClaims(claimsObj);\n    setCurrentPage(page);\n  };\n\n  const getClaimsByStatus = (e) => {\n    let value = e.target.value;\n    let { getAllClaims } = props;\n    setStatus(value);\n    setValue(value);\n    setCurrentPage(1);\n    let claimsObj = {\n      status: value,\n      page: 1,\n      query: \"\",\n    };\n    getAllClaims(claimsObj);\n  };\n\n  const removeClaim = (id) => {\n    let { deleteClaim } = props;\n    deleteClaim(id, currentPage);\n  };\n\n  return (\n    <div>\n      <div className={` ${style.toprow}`}>\n        <div className={style.rowContent}>\n          <div>\n            <h3>Claims</h3>\n          </div>\n          <div>\n            <SearchBar\n              type=\"claims\"\n              title=\"Type first name or email\"\n              claimStatus={status}\n            />\n          </div>\n          <div className={`${style.filter}`}>\n            <i\n              className=\"fa fa-filter dropdown-toggle\"\n              href=\"#\"\n              role=\"button\"\n              id=\"dropdownMenuLink\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            ></i>\n\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n              <RadioGroup\n                aria-label=\"gender\"\n                name=\"gender1\"\n                value={value}\n                onChange={(e) => getClaimsByStatus(e)}\n              >\n                <FormControlLabel\n                  value=\"all\"\n                  control={<Radio />}\n                  label=\"All\"\n                  className=\"dropdown-item\"\n                />\n                <FormControlLabel\n                  value=\"open\"\n                  control={<Radio />}\n                  label=\"Open\"\n                  className=\"dropdown-item\"\n                />\n                <FormControlLabel\n                  value=\"closed\"\n                  control={<Radio />}\n                  label=\"Closed\"\n                  className=\"dropdown-item\"\n                />\n              </RadioGroup>\n            </div>\n          </div>\n          <div className={style.newClaimBtn}>\n            <Link className={style.link} to=\"/claim/add\">\n              <Button className={style.button}>New Claim</Button>{\" \"}\n            </Link>\n          </div>\n        </div>\n      </div>\n      {docs && docs.length > 0 ? (\n        <Claims items={docs} user={user} delete={removeClaim} />\n      ) : ( docs && docs.length == 0 ?\n          <div className=\"text-center\">\n            <img src=\"/images/no-data-found.png\" alt=\"No data found\" />\n          </div> : null\n        )}\n      <div className={style.stylePagination}>\n        <div className={style.pagination}>\n          <Pagination\n            itemCount={totalCount}\n            pageSize={10}\n            currentPage={currentPage}\n            onPageChange={handlePageChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\nvar mapStateToProps = (state) => ({\n  claims: state.claims.claimList,\n  user: state.users.user,\n});\n\nvar actions = {\n  getAllClaims,\n  deleteClaim,\n};\n\nexport default connect(mapStateToProps, actions)(CustomerClaims);\n","import { Button, Chip, TextareaAutosize, TextField } from \"@material-ui/core\";\nimport { cloneDeep } from \"lodash\";\nimport { Modal } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateClaim, getClaim } from \"../../../Redux/Claim/claimActions\";\nimport style from \"./ClaimDetails.module.css\";\nimport TimeAgo from \"react-timeago\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarTimes, faEnvelope, faMobile, faUser, faUserShield } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ClaimDetails = (props) => {\n  const [show, setShow] = useState(false);\n  const [update, setUpdate] = useState(\"\");\n  const [waitTo, setWaitTo] = useState(true);\n  const [claimInput, setClaimInput] = useState('');\n  const [toggleClaim, setToggleClaim] = useState(false)\n\n\n  let {\n    match: {\n      params: { claimId },\n    },\n  } = props;\n\n  let { claims, getClaim, updateClaim } = props;\n\n  useEffect(() => {\n    getClaim(claimId);\n  }, [getClaim, claimId]);\n\n  useEffect(() => {\n    if (claims) {\n      setClaimInput(claims.waitTo);\n    }\n  }, [claims]);\n\n  const handleAddUpdate = (e) => {\n    setUpdate(e.target.value);\n  };\n\n  const handleCloseJob = () => {\n    let { claims } = props;\n\n    claims.status = \"closed\";\n    updateClaim(claims, () => { })\n    setToggleClaim(false)\n\n  };\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n  const updateClaimData = () => {\n    if (update.length > 0) {\n      let ob = {\n        timestamp: new Date(),\n        value: update,\n      };\n      let newData = cloneDeep(claims);\n      newData.updates.unshift(ob);\n      updateClaim(newData, (res) => {\n        claims.updates = res.data.data.updates;\n        setShow(false);\n        setUpdate(\"\");\n      })\n\n    }\n  };\n\n  const editInput = () => {\n    setWaitTo(false);\n  };\n  const handleClaimInput = (e) => {\n    setClaimInput(e.target.value);\n  };\n\n  const disableInput = () => {\n    let { claims } = props;\n    claims.waitTo = claimInput;\n    setWaitTo(true);\n    updateClaim(claims, () => { })\n  };\n\n  const reopenClaim = () => {\n    let { claims } = props;\n    claims.status = 'open';\n    updateClaim(claims, () => { })\n    setToggleClaim(false)\n  };\n\n\n  return (\n    <div>\n      {claims && <div className={style.claimsDetailContainer}>\n        <div className={style.claimDetails}>\n          <div className={style.cards}>\n            <div className={`card ${style.customerCard}`}>\n              <div className=\"card-body\">\n                <h5 className=\"card-title font-weight-bold\">Customer</h5>\n                <h6 className=\"card-subtitle mb-2 text-capitalize\">\n                  <Link\n                    className={style.link}\n                    to={`/customer/detail/${claims.customer._id}`}\n                  > <FontAwesomeIcon icon={faUser} /> {\" \"}\n                    {claims.customer.firstName} {claims.customer.lastName}\n                  </Link>\n                </h6>\n                <div className=\"card-text mb-2\">\n                  <FontAwesomeIcon icon={faMobile} /> {\" \"}\n                  {claims.customer.phone}</div>\n\n                <div className=\"card-text mb-2\">\n                  <FontAwesomeIcon icon={faEnvelope} /> {\" \"}\n                  {claims.customer.email}</div>\n              </div>\n            </div>\n\n            <div className={`card ${style.jobCard}`}>\n              <div className={`card-body `}>\n                <div>\n                  <h5 className=\"font-weight-bold\">Job</h5>\n                </div>\n                {claims.job ? (\n                  <div>\n                    <div>\n                      <Link\n                        to={`/job/detail/${claims.job._id}`}\n                        className=\"card-title\"\n                      >\n                        {\" \"}\n                        {claims.job.title}\n                      </Link>\n\n                    </div>\n                    <div>\n                      <Chip\n                        label={claims.job.status}\n                        clickable\n                        size=\"small\"\n                      />\n                    </div>\n                  </div>\n                ) : (\n                  <div>Not Added</div>\n                )}\n              </div>\n            </div>\n            <div className={`${style.claimButton}`}>\n              <div>\n                {claims.status === \"open\" ? (\n                  <Button className={style.button} onClick={() => handleShow()}>\n                    Add Update\n                  </Button>\n                ) : null}\n              </div>\n              <div>\n                {claims.status === \"open\" ? (\n                  <Button\n                    className={style.button}\n                    onClick={() => setToggleClaim(true)}\n                  >\n                    Close Claim\n                  </Button>\n                ) : (\n                  <Button\n                    className={style.button}\n                    onClick={() => setToggleClaim(true)}\n                  >\n                    Re-Open Claim\n                  </Button>\n                )}\n              </div>\n            </div>\n          </div>\n\n\n\n\n          <div className={`card ${style.claimDetail} `}>\n            <div className={`${style.protectionRow}`}>\n              <div>\n                <h6>{`Protection Type: `}</h6> <span>{claims.claimType}</span>\n              </div>\n              <div>\n                <h6>{`Total: `}</h6> <span>${claims.price}</span>\n              </div>\n              <div>\n                <h6>{`Title: `}</h6> <span>{claims.title}</span>\n              </div>\n            </div>\n\n            <div className={style.description}>\n              <h6>Description:</h6>\n              <div>{claims.description}</div>\n            </div>\n\n            <div className={`${style.waiting}`}>\n              <h6>Waiting To: </h6>\n\n              <div className={style.waitingInput}>\n                <div onDoubleClick={editInput}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    size=\"small\"\n                    name=\"claimInput\"\n                    value={claimInput}\n                    onChange={(e) => handleClaimInput(e)}\n                    disabled={waitTo}\n                  >\n                    {\" \"}\n                  </TextField>\n                </div>\n                <div>\n                  {waitTo === false ? (\n                    <Button className={style.button} onClick={disableInput}>\n                      Save\n                    </Button>\n                  ) : <Button className={style.button} onClick={editInput}>\n                    Edit\n            </Button>\n                  }\n                </div>\n              </div>\n            </div>\n\n            {claims.updates.length > 0 ? (\n              <div className={style.updates}>\n                <div className={style.updateHead}>\n                  <h3>{`Updates`}</h3>\n                </div>\n                <div className={`${style.updateContent}`}>\n                  {claims.updates.map((x, i) => (\n                    <div key={i} className={`card ${style.updateContentRow}`}>\n                      {\" \"}\n                      <div>{`${x.value}`}</div>\n                      <div className={`text-muted ${style.update___time}`}>\n                        <FontAwesomeIcon icon={faCalendarTimes} />{\" \"}\n                        <TimeAgo date={x.timestamp} />\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : null}\n          </div>\n        </div>\n\n        {/* modal for close and reopen claims */}\n        <Modal\n          show={toggleClaim}\n          onHide={() => setToggleClaim(false)}\n          scrollable\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Confirmation</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {claims.status === 'open' ? `Do you want to close this claim ?` : `Do you want to reopen this claim ?`}\n          </Modal.Body>\n          <Modal.Footer>\n            <div className={style.flexEnd}>\n              <Button className={style.button} onClick={() => setToggleClaim(false)}>\n                Close\n            </Button>\n              {claims.status === 'open' ? <Button className={style.button} onClick={() => handleCloseJob()}>\n                Confirm\n            </Button>\n                : <Button className={style.button} onClick={reopenClaim}>\n                  Confirm\n            </Button>\n              }\n            </div>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal\n          show={show}\n          onHide={handleClose}\n          dialogClassName={style.modal}\n          scrollable\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Add Update</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <TextareaAutosize\n              id=\"\"\n              cols=\"65\"\n              rows=\"5\"\n              name=\"Note\"\n              value={update}\n              onChange={handleAddUpdate}\n              className={style.styleTextArea}\n            ></TextareaAutosize>\n          </Modal.Body>\n          <Modal.Footer>\n            <div className={style.flexEnd}>\n              <Button className={style.button} onClick={handleClose}>\n                Close\n            </Button>\n              <Button className={style.button} onClick={updateClaimData}>\n                Add\n            </Button>\n            </div>\n          </Modal.Footer>\n        </Modal>\n      </div>\n      }\n    </div>\n  );\n};\nvar mapStateToProps = (state) => ({\n  claims: state.claims.claim\n});\n\nvar actions = {\n  getClaim,\n  updateClaim\n};\nexport default connect(mapStateToProps, actions)(ClaimDetails);\n","import React, { Component } from \"react\";\nimport style from \"./CreateClaim.module.css\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button, InputAdornment } from \"@material-ui/core\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { connect } from \"react-redux\";\nimport {\n  addClaim,\n  getCustomersAndJobs,\n} from \"../../../Redux/Claim/claimActions\";\nimport { TextareaAutosize, TextField } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {\n  resetClaimForm,\n  setClaimForm,\n} from \"../../../Redux/PersistForms/formActions\";\nimport { cloneDeep } from \"lodash\";\nimport TimeAgo from \"react-timeago\";\nimport VirtualizedAutocomplete from \"../../../components/VirtualizedAutocomplete/VirtualizedAutocomplete\";\n\nclass CreateClaim extends Component {\n  //defining state\n  constructor(props) {\n    super(props);\n    this.state = { ...props.addForm };\n  }\n  initialState = {\n    customerId: \"\",\n    jobId: \"\",\n    claims: {\n      claimType: \"\",\n      price: \"\",\n      description: \"\",\n    },\n    item: \"\",\n    price: \"\",\n    fromDate: \"\",\n    toDate: \"\",\n    locationfrom: \"\",\n    locationto: \"\",\n    customerIdError: \"\",\n    jobIdError: \"\",\n    itemError: \"\",\n    priceError: \"\",\n    descriptionError: \"\",\n    fromDateError: \"\",\n    toDateError: \"\",\n    locationfromError: \"\",\n    locationtoError: \"\",\n    inputValues: \"\",\n    inputValue: \"\",\n    customers: [],\n    jobs: [],\n    selectedCustomer: \"\",\n    selectedJob: \"\",\n    titleError: \"\",\n    title: \"\",\n    waitToError: \"\",\n    waitTo: \"\",\n    customerClaims: false,\n  };\n\n  componentDidMount = () => {\n    //fetch customer id , name and jobs (if navigate from customer) on mount\n    if (\n      this.props.location.customerId !== undefined &&\n      this.props.location.customerName !== undefined\n    ) {\n      this.setState({\n        customerId: this.props.location.customerId,\n        selectedCustomer: this.props.location.customerName,\n        jobs: this.props.location.jobs,\n        selectedJob: \"\",\n      });\n    }\n    //get all customers and all jobs\n    let { getCustomersAndJobs } = this.props;\n    getCustomersAndJobs((res) => {\n      this.setState({ customers: res.data.data });\n    });\n\n  };\n  //onChange handler\n  handleFormInput = (event) => {\n    let { name, value } = event.target;\n    this.setState({ [name]: value });\n    if (value === \"\") {\n      this.setState({ [name + \"Error\"]: \"Should not be empty\" });\n    } else {\n      this.setState({ [name + \"Error\"]: \"\" });\n    }\n  };\n  //validate the form\n  validate = () => {\n    let customerIdError = \"\";\n    let jobIdError = \"\";\n    let priceError = \"\";\n\n    let titleError = \"\";\n    let waitToError = \"\";\n    let descriptionError = \"\";\n\n    if (this.state.selectedCustomer.length === 0) {\n      customerIdError = \"Customer Id should not be empty\";\n    }\n  \n    if (!this.state.selectedJob) {\n      jobIdError = \"Error! should not be empty\";\n    }\n    if (!this.state.title) {\n      titleError = \"Error! should not be empty\";\n    }\n\n    if (!this.state.price) {\n      priceError = \"Error! should not be empty\";\n    }\n    if (!this.state.waitTo) {\n      waitToError = \"Error! should not be empty\";\n    }\n    if (this.state.claims.description === \"\"){\n      descriptionError = \"Desctiption must not be empoty.\";\n    }\n\n    if (\n      (customerIdError || jobIdError || priceError || titleError, waitToError || descriptionError)\n    ) {\n      this.setState({\n        customerIdError,\n        jobIdError,\n        priceError,\n        titleError,\n        waitToError,\n        descriptionError,\n      });\n      return false;\n    }\n\n    return true;\n  };\n  //submit handler\n  mySubmitHandler = (event) => {\n    event.preventDefault();\n    let {\n      selectedJob,\n      title,\n      waitTo,\n      claims: { claimType, price, description },\n    } = this.state;\n    if (this.validate()) {\n      let { history, addClaim } = this.props;\n      let data = {\n        jobId: selectedJob.jobId,\n        claimType,\n        price,\n        description,\n        title,\n        waitTo,\n      };\n      //call add Claim api to add a claim\n      addClaim(data, (res) => {\n        //reset form to its original state\n        this.handleResetForm();\n        history.push(`/claim/detail/${res.data.data}`);\n      });\n    }\n  };\n  //onChange handler of claims(description,type, cost)\n  hanldeClaimsInput = (e) => {\n    let updatedClaims = { ...this.state.claims };\n    updatedClaims[e.target.name] = e.target.value;\n    this.setState({ claims: updatedClaims });\n  };\n  //get (fetch the job of selected customer)\n  getCustomerJobs = (customer) => {\n    if (customer) {\n      if (customer.claim.length > 0) {\n        this.setState({\n          customerClaims: true,\n          showClaimsDetails: customer.claim,\n          customerName: customer.firstName + \" \" + customer.lastName,\n        });\n      }\n      this.setState({\n        jobs: customer.jobs,\n        selectedCustomer: customer.firstName + \" \" + customer.lastName,\n        selectedJob: \"\",\n        customerIdError: \"\",\n      });\n    } else {\n      this.setState({ jobs: [], selectedCustomer: \"\", selectedJob: \"\" });\n    }\n  };\n\n  //close the modal\n  handleClose = () => {\n    this.setState({\n      customerClaims: false,\n    });\n  };\n  //store all fields in redux state upon component will unmount\n  componentWillUnmount() {\n    let { setClaimForm } = this.props;\n    setClaimForm({ ...this.state });\n  }\n  //reset the form\n  handleResetForm = () => {\n    let { resetClaimForm } = this.props;\n    let customers = cloneDeep(this.state.customers);\n    resetClaimForm();\n    this.setState({ ...this.initialState, customers });\n  };\n  setSelectedCustomerJobs = (newValue) => {\n    this.setState({\n      selectedJob: newValue ? newValue : \"\",\n      jobIdError: \"\",\n    })\n  }\n  render() {\n    let { showClaimsDetails, customerName } = this.state;\n    return (\n      <div className={style.claimContainerPage}>\n        <div className={style.claimContainer}>\n          <div className={`${style.form}`}>\n            <h3 className={style.head}>Create Claim</h3>\n            <form>\n              {this.state.customers.length > 0 ? (\n\n                <VirtualizedAutocomplete\n                  optionTextValue={this.state.newCustomer}\n                  value={this.state.selectedCustomer}\n                  options={this.state.customers}\n                  getCustomerJobs={this.getCustomerJobs}\n                  addNewCustomer={this.addNewCustomer}\n                />\n              ) : null}\n              {this.state.customerClaims && (\n                <div>\n                  <Modal\n                    dialogClassName={`${style.modal}`}\n                    show={this.state.customerClaims}\n                    onHide={this.handleClose}\n                    centered\n                    scrollable\n                  >\n                    <Modal.Header closeButton>\n                      <Modal.Title>{`${customerName} Claims`}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                      <div className={style.claimHeader}>\n                        <div>Protection Type</div>\n                        <div>Status</div>\n                        <div>Last Update</div>\n                      </div>\n\n                      {showClaimsDetails.map((claim, i) => (\n                        <div className={style.claimContent} key={i}>\n                          <div> {claim.claimType}</div>\n                          <div>{claim.status}</div>\n                          <div>\n                            <TimeAgo date={claim.updatedAt} />\n                          </div>\n                        </div>\n                      ))}\n                    </Modal.Body>\n                    <Modal.Footer>\n                      <div className={style.modalBtn}>\n                        <Button\n                          className={style.modalButton}\n                          onClick={this.handleClose}\n                        >\n                          Close\n                        </Button>\n                      </div>\n                    </Modal.Footer>\n                  </Modal>\n                </div>\n              )}\n\n              <VirtualizedAutocomplete textField=\"Choose a job\"\n                value={this.state.selectedJob}\n                options={this.state.jobs}\n                setSelectedCustomerJobs={this.setSelectedCustomerJobs}\n              />\n              <TextField\n                variant=\"outlined\"\n                required\n                error={this.state.titleError ? true : false}\n                className={style.styleFormFields}\n                size=\"small\"\n                id=\"title\"\n                label=\"Title\"\n                name=\"title\"\n                value={this.state.title}\n                onChange={(e) => this.handleFormInput(e)}\n                fullWidth\n              />\n\n              <TextField\n                variant=\"outlined\"\n                required\n                error={this.state.waitToError ? true : false}\n                className={style.styleFormFields}\n                size=\"small\"\n                id=\"waitTo\"\n                label=\"Waiting\"\n                name=\"waitTo\"\n                value={this.state.waitTo}\n                onChange={(e) => this.handleFormInput(e)}\n                fullWidth\n              />\n\n              <div className={style.protectionType}>\n                <div>\n                  <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                    <InputLabel id=\"demo-simple-select-outlined-label\">\n                      Protection Type\n                    </InputLabel>\n                    <Select\n                    required\n                      labelId=\"demo-simple-select-outlined-label\"\n                      id=\"demo-simple-select-outlined\"\n                      value={this.state.claims.claimType}\n                      onChange={(e) => this.hanldeClaimsInput(e)}\n                      label=\"Protection Type\"\n                      name=\"claimType\"\n                    >\n                      <MenuItem value={\"BVP\"}>BVP</MenuItem>\n                      <MenuItem value={\"FVP\"}>FVP</MenuItem>\n                    </Select>\n                  </FormControl>\n                </div>\n                <div>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    margin=\"dense\"\n                    fullWidth\n                    size=\"small\"\n                    id=\"price\"\n                    type=\"number\"\n                    label=\"Total Cost\"\n                    name=\"price\"\n                    value={this.state.claims.price}\n                    onChange={(e) => this.hanldeClaimsInput(e)}\n                    InputProps={{\n                      startAdornment: (<InputAdornment position=\"start\">$</InputAdornment>)\n                    }}\n                  />\n                </div>\n              </div>\n\n              <TextareaAutosize\n              required              \n              error={this.state.descriptionError ? true : false}\n                rowsMax={4}\n                id=\"description\"\n                className={`${style.styleFormFields} ${style.styleTextArea}`}\n                placeholder=\"Item Description\"\n                name=\"description\"\n                value={this.state.claims.description}\n                onChange={(e) => this.hanldeClaimsInput(e)}\n                rows=\"3\"\n              />\n\n              <div className={style.buttons}>\n                <Button className={style.button} onClick={this.handleResetForm}>\n                  Reset\n                </Button>\n\n                <Button className={style.button} onClick={this.mySubmitHandler}>\n                  Submit\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nvar mapStateToProps = (state) => ({\n  addForm: state.forms.addClaimForm,\n});\n\nvar actions = {\n  getCustomersAndJobs,\n  addClaim,\n  setClaimForm,\n  resetClaimForm,\n};\nexport default connect(mapStateToProps, actions)(CreateClaim);\n","import React, { useEffect, useState } from \"react\";\nimport style from \"./DepositList.module.css\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Pagination from \"../../../components/Pagination/Pagination\";\nimport {\n  deleteBlanketDeposit,\n  getDeposits,\n} from \"../../../Redux/Deposit/DepositActions\";\nimport Blankets from \"../../../components/Blankets/Blankets\";\nimport SearchBar from \"../../../components/SearchBar/SearchBar\";\n\nconst DepositList = (props) => {\n  let { blanketDeposit } = props;\n  let totalCount = 0;\n  if (blanketDeposit) {\n    var { docs } = blanketDeposit;\n    totalCount = blanketDeposit.total;\n  }\n  const [currentPage, setCurrentPage] = useState(1);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [depositToDelete, setDepositToDelete] = useState(false);\n\n  useEffect(() => {\n    let { getDeposits } = props;\n    let obj = {\n      page: currentPage\n    }\n    getDeposits(obj);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage, getDeposits]);\n\n  //close activities modal\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const removeBlanketDeposit = () => {\n    let { deleteBlanketDeposit } = props;\n    deleteBlanketDeposit(depositToDelete);\n    setDeleteModal(false);\n  };\n  //set deposit\n  const openDeleteModal = (i, deposit) => {\n    setDepositToDelete(deposit);\n    setDeleteModal(true);\n  };\n  const closeDeleteModal = () => {\n    setDeleteModal(false);\n  };\n  const {\n    location: { pathname },\n  } = props;\n\n  return (\n    <div>\n      <div className={style.submitDepositContainer}>\n        <div className={style.submitDeposit}>\n          <div className={` ${style.toprow}`}>\n            <div>\n              <h3>Blanket Deposit</h3>\n            </div>\n            <div>\n              <SearchBar type = \"deposit\" title = \"Type customer name here\"/>\n            </div>\n            <div>\n              <div className={style.btn}>\n                <Link className={style.link} to=\"/deposit/add\">\n                  {\" \"}\n                  <Button className={style.button}>Deposit</Button>{\" \"}\n                </Link>\n              </div>\n            </div>\n          </div>\n\n          {docs && docs.length > 0 && pathname === \"/deposits\" ? (\n            <div className = {style.blanketContainer}>\n              <Blankets\n               items={docs }\n                \n                deleteDeposit={removeBlanketDeposit}\n                openDeleteModal={openDeleteModal}\n                deleteModal={deleteModal}\n                closeDeleteModal={closeDeleteModal}\n                page={currentPage}\n              />\n\n              <div className={style.stylePagination}>\n                <div className={style.pagination}>\n                  <Pagination\n                    itemCount={totalCount}\n                    pageSize={10}\n                    currentPage={currentPage}\n                    onPageChange={handlePageChange}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : blanketDeposit && blanketDeposit.length > 0 ? <div>\n             <Blankets\n               items={blanketDeposit}\n                deleteDeposit={removeBlanketDeposit}\n                openDeleteModal={openDeleteModal}\n                deleteModal={deleteModal}\n                closeDeleteModal={closeDeleteModal}\n                page={currentPage}\n              />\n          </div> : ( docs && docs.length == 0 ?\n              <div className=\"text-center\">\n                <img src=\"/images/no-data-found.png\" alt=\"No data found\" />\n              </div> : null\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nvar actions = {\n  getDeposits,\n  deleteBlanketDeposit,\n};\n\nvar mapStateToProps = (state) => ({\n  blanketDeposit: state.blankets.depositList,\n});\n\nexport default connect(mapStateToProps, actions)(DepositList);\n","import React, { Component } from \"react\";\nimport style from \"./CreateDeposit.module.css\";\nimport { Button } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { TextField } from \"@material-ui/core\";\nimport { getCustomersAndJobs } from \"../../../Redux/Claim/claimActions\";\nimport {\n  resetDepositForm,\n  setDepositForm,\n} from \"../../../Redux/PersistForms/formActions\";\nimport { addDeposit } from \"../../../Redux/Deposit/DepositActions\";\nimport { cloneDeep } from \"lodash\";\nimport VirtualizedAutocomplete from \"../../../components/VirtualizedAutocomplete/VirtualizedAutocomplete\";\n\nclass CreateDeposit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...props.addForm };\n  }\n\n  initialState = {\n    quantity: \"\",\n    cost: \"\",\n    customers: [],\n    jobs: [],\n    selectedCustomer: \"\",\n    selectedJob: \"\",\n    customerIdError: \"\",\n    jobIdError: \"\",\n    quantityError: \"\",\n    costError: \"\",\n    disabled: true,\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.location.customerId !== undefined &&\n      this.props.location.customerName !== undefined\n    ) {\n      this.setState({\n        customerId: this.props.location.customerId,\n        selectedCustomer: this.props.location.customerName,\n        jobs: this.props.location.jobs,\n        selectedJob: \"\",\n      });\n    }\n    let { getCustomersAndJobs } = this.props;\n    getCustomersAndJobs((res) => \n    this.setState({ customers: res.data.data }));\n  };\n\n  handleValidate = () => {\n    let { selectedCustomer, selectedJob, quantity, cost } = this.state;\n    let customerIdError = \"\";\n    let jobIdError = \"\";\n    let quantityError = \"\";\n    let costError = \"\";\n\n    if (selectedCustomer === \"\") {\n      customerIdError = \"Customer Id should not be empty\";\n    }\n\n    if (selectedJob === \"\") {\n      jobIdError = \"Job Id should not be empty\";\n    }\n\n    if (quantity === \"\") {\n      quantityError = \"Quantity should not be empty\";\n    }\n\n    if (cost === \"\") {\n      costError = \"Cost should not be empty\";\n    }\n\n    if (customerIdError || jobIdError || quantityError || costError) {\n      this.setState({ customerIdError, jobIdError, quantityError, costError });\n      return false;\n    }\n\n    return true;\n  };\n\n  handleSearchFormInput = (value) => {\n    this.setState({\n      customer: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    let { quantity, selectedJob, cost } = this.state;\n    e.preventDefault();\n    let obj = {\n      quantity,\n      jobId: selectedJob.jobId,\n      cost,\n    };\n    let { addDeposit, history } = this.props;\n    if (this.handleValidate()) {\n      addDeposit(obj, () => {\n        //reset form to its original state\n        this.handleResetDeposit();\n        history.push(\"/deposits\");\n      });\n    }\n  };\n\n  handleQuantityFormInput = (e) => {\n    let { value } = e.target;\n    if (value === \"\") {\n      this.setState({ quantityError: \"Should not be empty\", quantity: \"\" });\n    } else {\n      this.setState({\n        quantity: value,\n        cost: value * 15,\n        costError: \"\",\n        quantityError: \"\",\n      });\n    }\n  };\n\n  handleCostFormInput = (e) => {\n    let { value } = e.target;\n    if (value === \"\") {\n      this.setState({ costError: \"Should not be empty\", cost: \"\" });\n    } else {\n      this.setState({ cost: value, costError: \"\" });\n    }\n  };\n\n  getCustomerJobs = (customer) => {\n    if (customer) {\n      this.setState({\n        jobs: customer.jobs,\n        selectedCustomer: customer.firstName + \" \" + customer.lastName,\n        selectedJob: \"\",\n        customerIdError: \"\",\n      });\n    } else {\n      this.setState({ jobs: [], selectedCustomer: \"\", selectedJob: \"\" });\n    }\n  };\n\n  componentWillUnmount() {\n    let { setDepositForm } = this.props;\n    setDepositForm({ ...this.state });\n  }\n  handleResetDeposit = () => {\n    let { resetDepositForm } = this.props;\n    let customers = cloneDeep(this.state.customers);\n    resetDepositForm();\n    this.setState({ ...this.initialState, customers });\n  };\n  setSelectedCustomerJobs = (newValue) => {\n    this.setState({\n      selectedJob: newValue ? newValue : \"\",\n      jobIdError: \"\",\n    });\n  };\n  render() {\n    let { quantity, cost } = this.state;\n    return (\n      <div className={style.depositFormContainer}>\n        <div className={style.depositForm}>\n          <div className={`${style.form}`}>\n            <form onSubmit={this.handleSubmit}>\n              <h3 className={style.head}>Create Deposit</h3>\n              \n              {this.state.customers.length > 0 ? (\n                <VirtualizedAutocomplete\n                  optionTextValue={this.state.newCustomer}\n                  value={this.state.selectedCustomer}\n                  options={this.state.customers}\n                  getCustomerJobs={this.getCustomerJobs}\n                  addNewCustomer={this.addNewCustomer}\n                />\n              ) : null}\n             \n             {this.state.jobs.length > 0 ? (\n               <VirtualizedAutocomplete\n                textField=\"Choose a job\"\n                value={this.state.selectedJob}\n                options={this.state.jobs}\n                setSelectedCustomerJobs={this.setSelectedCustomerJobs}\n                \n              />\n             ) : null }\n              {/* <VirtualizedAutocomplete\n                textField=\"Choose a job\"\n                value={this.state.selectedJob}\n                options={this.state.jobs}\n                setSelectedCustomerJobs={this.setSelectedCustomerJobs}\n                \n              /> */}\n\n              <TextField\n                variant=\"outlined\"\n                type=\"number\"\n                size=\"small\"\n                name=\"quantity\"\n                value={quantity}\n                className={style.styleFormFields}\n                label=\"Blanket Quantity\"\n                onChange={this.handleQuantityFormInput}\n                error={this.state.quantityError ? true : false}\n                fullWidth\n              />\n\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                name=\"cost\"\n                className={style.styleFormFields}\n                type=\"number\"\n                value={cost}\n                label=\"Cost in $\"\n                onChange={this.handleCostFormInput}\n                error={this.state.costError ? true : false}\n              />\n\n              <div className={style.depositBtn}>\n                <div>\n                  <Button\n                    className={style.button}\n                    onClick={this.handleResetDeposit}\n                    type=\"button\"\n                  >\n                    Reset\n                  </Button>\n                </div>\n\n                <div>\n                  <Button type=\"submit\" className={style.button}>\n                    Submit\n                  </Button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nvar mapStateToProps = (state) => ({\n  addForm: state.forms.addDepositForm,\n});\n\nvar actions = {\n  addDeposit,\n  getCustomersAndJobs,\n  setDepositForm,\n  resetDepositForm,\n};\n\nexport default connect(mapStateToProps, actions)(CreateDeposit);\n","import React, { useState, useEffect } from 'react'\nimport style from './DepositDetails.module.css'\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarTimes, faEnvelope, faMobile, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button, Chip, TextareaAutosize, TextField } from \"@material-ui/core\";\nimport { getDeposit, updateDeposit } from '../../../Redux/Deposit/DepositActions'\nimport { connect } from \"react-redux\";\nimport ActivitiesModal from '../../../components/ActivitiesModal/ActivitiesModal';\n\nconst DepositDetails = (props) => {\n\n    let { getDeposit, updateDeposit, deposit } = props;\n\n    const [show, setShow] = useState(false);\n    const [toggleEdit, setToggleEdit] = useState(false)\n    const [updatedDeposit, setUpdatedDeposit] = useState({\n        quantity: 0,\n        cost: 0\n    })\n\n\n    let {\n        match: {\n            params: { depositId },\n        },\n    } = props;\n\n    useEffect(() => {\n        getDeposit(depositId)\n    }, [])\n\n    useEffect(() => {\n        if (deposit) {\n            setUpdatedDeposit({\n                quantity: deposit.quantity,\n                cost: deposit.cost,\n            })\n        }\n    }, [deposit])\n\n    const handleShow = () => {\n        setShow(true);\n    };\n\n    const handleOnChange = (e) => {\n        let { name, value } = e.target;\n        if(name == 'quantity') {\n            setUpdatedDeposit({ ...updatedDeposit, [name]: value, cost: value * 15 })\n        } else {\n            setUpdatedDeposit({ ...updatedDeposit, [name]: value })\n        }\n    }\n    const update = () => {\n        let obj = {\n            ...updatedDeposit,\n            id: deposit._id,\n        }\n        updateDeposit(obj)\n        setToggleEdit(false)\n    }\n\n    return (\n        <div>{deposit &&\n            <div className={style.depositDetailsContainer}>\n                <div className={style.depositDetails}>\n                    <div className={style.cards}>\n                        <div className={`card ${style.customerCard}`}>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title font-weight-bold\">Customer</h5>\n                                <h6 className=\"card-subtitle mb-2\">\n                                    <Link\n                                        className={style.link}\n                                        to={`/customer/detail/${deposit.customer._id}`}\n                                    > <FontAwesomeIcon icon={faUser} /> {\" \"}\n                                        {deposit.customer.firstName} {deposit.customer.lastName}\n                                    </Link>\n                                </h6>\n                                <div className=\"card-text mb-2\">\n                                    <FontAwesomeIcon icon={faMobile} /> {\" \"}\n                                    {deposit.customer.phone}\n                                </div>\n\n                                <div className=\"card-text mb-2\">\n                                    <FontAwesomeIcon icon={faEnvelope} /> {\" \"}\n                                    {deposit.customer.email}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className={`card ${style.jobCard}`}>\n                            <div className={`card-body `}>\n                                <div>\n                                    <h5 className=\"font-weight-bold\">Job</h5>\n                                </div>\n                                {deposit.job ? (\n                                    <div>\n                                        <div>\n                                            <Link\n                                                to={`/job/detail/${deposit.job._id}`}\n                                                className=\"card-title\"\n                                            >\n                                                {\" \"}\n                                                {deposit.job.title}\n                                            </Link>\n\n                                        </div>\n                                        <div>\n                                            <Chip\n                                                label={deposit.job.status}\n                                                clickable\n                                                size=\"small\"\n                                            />\n                                        </div>\n                                    </div>\n                                ) : (\n                                        <div>Not Added</div>\n                                    )}\n                            </div>\n                        </div>\n                        <div className={`${style.claimButton}`}>\n                            <Button\n                                onClick={handleShow}\n                                className={style.button}\n                            >\n                                Activities\n                                </Button>\n                        </div>\n                    </div>\n\n                    <div className={`card ${style.claimDetail} `}>\n                        <div className={`${style.pricing}`}>\n\n\n                            <div className={style.pricingInput}>\n                                <div>\n                                    <h6>Quantity: </h6>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        required\n                                        type=\"number\"\n                                        fullWidth\n                                        size=\"small\"\n                                        name=\"quantity\"\n                                        value={updatedDeposit.quantity}\n                                        onChange={(e) => handleOnChange(e)}\n                                        disabled={!toggleEdit}\n                                        onDoubleClick={() => setToggleEdit(true)}\n                                    >\n                                        {\" \"}\n                                    </TextField>\n                                </div>\n                                <div>\n                                    <h6>Deposit: </h6>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        type=\"number\"\n                                        required\n                                        fullWidth\n                                        size=\"small\"\n                                        name=\"cost\"\n                                        value={updatedDeposit.cost}\n                                        onChange={(e) => handleOnChange(e)}\n                                        disabled={!toggleEdit}\n                                        onDoubleClick={() => setToggleEdit(true)}\n                                    >\n                                        {\" \"}\n                                    </TextField>\n                                </div>\n\n                            </div>\n\n                        </div>\n                        <div className={style.editButon}>\n                            {toggleEdit ? (\n                                <Button className={style.button} onClick={update}>\n                                    Save\n                                </Button>\n                            ) : <Button className={style.button} onClick={() => setToggleEdit(true)}>\n                                    Edit\n                                </Button>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <ActivitiesModal\n                    show={show}\n                    activities={deposit.activities}\n                    handleClose={() => setShow(false)}\n                />\n            </div>\n        }\n        </div>\n\n    )\n}\nvar mapStateToProps = (state) => ({\n    deposit: state.blankets.deposit\n});\n\nvar actions = {\n    getDeposit,\n    updateDeposit\n};\n\nexport default connect(mapStateToProps, actions)(DepositDetails)\n","import React, { useEffect, useState } from \"react\";\nimport style from \"./JobList.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { getMover, updateJob } from \"../../../Redux/Mover/moverActions\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  FormControlLabel,\n  Popover,\n  Radio,\n  RadioGroup,\n  Typography,\n  Chip\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { compose } from \"redux\";\nimport SearchBar from \"../../../components/SearchBar/SearchBar\";\nimport Pagination from \"../../../components/Pagination/Pagination\";\n\nconst styles = (theme) => ({\n  popover: {\n    pointerEvents: \"none\",\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n});\n\nconst MoversJobList = (props) => {\n  const [state, setState] = useState({\n    isLoading: true,\n    data: [],\n    status: \"booked\",\n    anchorEl: null,\n    openedDatePopoverId: null,\n    openedAssigneePopoverId: null,\n    pageSize: 10,\n    dates: \"\",\n    value: \"\",\n    currentPage: 1,\n    recentlyAdded: false,\n    sortByStatus: false,\n  });\n\n  let { pageSize, currentPage } = state;\n  const open = Boolean(state.anchorEl);\n  const { classes } = props;\n\n  const { moverJobs } = props;\n  let totalCount = 0;\n  if (moverJobs) {\n    totalCount = moverJobs.total;\n  }\n\n  useEffect(() => {\n    let { getMover } = props;\n\n    let moversObj = {\n      filters: {\n        jobStatus: \"\",\n        dates: null,\n        nearestDate: \"\",\n      },\n      sort: {\n        createdAt: null,\n      },\n      page: 1,\n    };\n    getMover(moversObj);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleChange = (event) => {\n    var newState = state;\n    newState.status = event.target.value;\n    setState(newState);\n    filterJobByStatus(event.target.value);\n  };\n\n  const markComplete = (list) => {\n    let { updateJob } = props;\n    updateJob(list._id, { status: \"completed\" },\n    );\n  };\n\n  const handleDatePopoverOpen = (event, id) => {\n    setState({\n      ...state,\n      anchorEl: event.currentTarget,\n      openedDatePopoverId: id,\n    });\n  };\n\n  const handleDatePopoverClose = () => {\n    setState({\n      ...state,\n      anchorEl: null,\n      openedDatePopoverId: null,\n    });\n  };\n\n  const handleAssigneePopoverOpen = (event, id) => {\n    setState({\n      ...state,\n      anchorEl: event.currentTarget,\n      openedAssigneePopoverId: id,\n    });\n  };\n\n  const handleAssigneePopoverClose = () => {\n    setState({\n      ...state,\n      anchorEl: null,\n      openedAssigneePopoverId: null,\n    });\n  };\n\n  const handleRecentlyAdded = () => {\n    let { getMover } = props;\n\n    let fetchMoverJobs = {\n      filters: {\n        jobStatus: \"\",\n        dates: \"\",\n        nearestDate: \"\",\n      },\n      sort: {\n        createdAt: -1,\n      },\n      page: 1,\n    };\n    setState({\n      ...state,\n      recentlyAdded: true,\n      sortByStatus: false,\n      currentPage: 1,\n    });\n\n    getMover(fetchMoverJobs);\n  };\n\n  const filterJobByStatus = (value) => {\n    let { getMover } = props;\n\n    let fetchMoverJobs = {\n      filters: {\n        jobStatus: value,\n        dates: \"\",\n        nearestDate: \"\",\n      },\n      sort: {\n        createdAt: null,\n      },\n      page: 1,\n    };\n    setState({\n      ...state,\n      recentlyAdded: false,\n      sortByStatus: true,\n      currentPage: 1,\n    });\n\n    getMover(fetchMoverJobs);\n  };\n\n  const filterJobByDate = (e) => {\n    let { getMover } = props;\n\n    let date = new Date(e.target.value);\n    let DateFilters = {\n      filters: {\n        dates: date.toDateString(),\n        jobStatus: \"\",\n        nearestDate: \"\",\n      },\n      sort: {\n        createdAt: null,\n      },\n      page: 1,\n    };\n    setState({\n      ...state,\n      dates: e.target.value,\n      currentPage: 1,\n    });\n\n    getMover(DateFilters);\n  };\n\n  const handlePageChange = (page) => {\n    let { getMover } = props;\n    let fetchMoverJobs;\n    if (state.recentlyAdded === true) {\n      fetchMoverJobs = {\n        filters: {\n          jobStatus: \"\",\n          dates: \"\",\n          nearestDate: \"\",\n        },\n        sort: {\n          createdAt: -1,\n        },\n        page: page,\n      };\n      setState({\n        ...state,\n        currentPage: page,\n      });\n    } else if (state.sortByStatus === true) {\n      fetchMoverJobs = {\n        filters: {\n          jobStatus: state.value,\n          dates: \"\",\n          nearestDate: \"\",\n        },\n        sort: {\n          createdAt: null,\n        },\n        page: page,\n      };\n      setState({\n        ...state,\n        currentPage: page,\n      });\n    } else {\n      fetchMoverJobs = {\n        filters: {\n          jobStatus: \"\",\n          dates: \"\",\n          nearestDate: \"\",\n        },\n        sort: {\n          createdAt: null,\n        },\n        page: page,\n      };\n      setState({\n        ...state,\n        currentPage: page,\n      });\n    }\n    getMover(fetchMoverJobs);\n  };\n\n  return (\n    <div>\n      <div className={style.toprow}>\n        <div className={style.rowContent}>\n          <div>\n            <h3>Jobs List</h3>\n          </div>\n          <div>\n            <SearchBar type=\"mover\" title=\"Type title or services\" />\n          </div>\n\n          <div className={`${style.filter}`}>\n            <i\n              className=\"fa fa-filter dropdown-toggle\"\n              href=\"#\"\n              role=\"button\"\n              id=\"dropdownMenuLink\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            ></i>\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n              <h5 className=\"dropdown-item\">Sort</h5>\n              <p className=\"dropdown-item\" onClick={handleRecentlyAdded}>\n                Sort By Recently Added\n              </p>\n              <hr />\n              <h5 className=\"dropdown-item\">Filters</h5>\n              <p className=\"dropdown-item\">Filter By Date</p>\n              <input\n                type=\"date\"\n                name=\"dates\"\n                id=\"\"\n                className={style.styleDates}\n                onChange={(e) => filterJobByDate(e)}\n              />{\" \"}\n              <hr />\n              <p className=\"dropdown-item\">Filter By Status</p>\n              <RadioGroup\n                aria-label=\"gender\"\n                name=\"gender1\"\n                value={state.status}\n                size=\"small\"\n                onChange={handleChange}\n              >\n                <FormControlLabel\n                  value=\"completed\"\n                  className=\"dropdown-item\"\n                  control={<Radio />}\n                  label=\"completed\"\n                />\n                <FormControlLabel\n                  value=\"booked\"\n                  className=\"dropdown-item\"\n                  control={<Radio />}\n                  label=\"booked\"\n                />\n              </RadioGroup>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* {moverJobs && moverJobs.length > 0 ? (\n        <div className={style.jobListHeaderContainer}>\n          <div className={style.jobListHeader}>\n            <div>Title</div>\n            <div>Date</div>\n            <div>Assignee</div>\n            <div>Status</div>\n          </div>\n        </div>\n      ) : null} */}\n\n      {moverJobs && moverJobs.length > 0 ? (\n        <div>\n          {moverJobs.map((list, i) => {\n            return (\n              <div className={style.listContainer} key={i}>\n                <div className={`${style.listContent}`}>\n                  <Link\n                    className={style.styleLink}\n                    to={\"/mover/jobdetails/\" + list._id}\n                  >\n                    <div className={`${style.jobList}`}>\n                      <div\n                        className={`${style.title} \n                        ${style.flex} \n                        ${style.item}`}\n                      >\n                        <div className={`text-muted ${style.heading}`}>{`title: `}</div>\n                        <div className={`text-capitalize ${style.headingSub}`}>{list.title}</div>\n                      </div>\n                      <div\n                        className={`${style.date} ${style.flex} ${style.item}`}\n                      >\n                        <div className={`text-muted ${style.heading}`}>{`Date:`}</div>\n                        <span className={`${style.headingSub} ${style.styleSpan}`}>\n                          {list.dates[0].date}\n                          {list.dates.length > 1 && (\n                            <div>\n                              <Typography\n                                aria-owns={\n                                  open ? \"mouse-over-popover\" : undefined\n                                }\n                                aria-haspopup=\"true\"\n                                onMouseEnter={(e) =>\n                                  handleDatePopoverOpen(e, list._id)\n                                }\n                                onMouseLeave={handleDatePopoverClose}\n                              >\n                                ...\n                              </Typography>\n\n                              <Popover\n                                id=\"mouse-over-popover\"\n                                className={classes.popover}\n                                classes={{\n                                  paper: classes.paper,\n                                }}\n                                open={state.openedDatePopoverId === list._id}\n                                anchorEl={state.anchorEl}\n                                anchorOrigin={{\n                                  vertical: \"bottom\",\n                                  horizontal: \"left\",\n                                }}\n                                transformOrigin={{\n                                  vertical: \"top\",\n                                  horizontal: \"left\",\n                                }}\n                                onClose={handleDatePopoverClose}\n                                disableRestoreFocus\n                              >\n                                {list.dates.map((dates, i) => (\n                                  <Typography key={i}>{dates.date}</Typography>\n                                ))}\n                              </Popover>\n                            </div>\n                          )}\n                        </span>\n                      </div>\n\n                      <div\n                        className={`${style.assignee} ${style.flex}  ${style.item}`}\n                      ><div className={`text-muted ${style.heading}`}>{`Assignee: `}</div>\n                        <span className={`text-capitalize ${style.headingSub} ${style.styleSpan}`}>\n                          {/* <FontAwesomeIcon\n                            icon={faUser}\n                            className={style.icon}\n                          />{\" \"} */}\n                          {list.assignee.length > 0\n                            ? list.assignee[0].name\n                            : \"No Assignees\"}\n                          {list.assignee.length > 1 && (\n                            <div>\n                              <Typography\n                                aria-owns={\n                                  open ? \"mouse-over-popover\" : undefined\n                                }\n                                aria-haspopup=\"true\"\n                                onMouseEnter={(e) =>\n                                  handleAssigneePopoverOpen(e, list._id)\n                                }\n                                onMouseLeave={handleAssigneePopoverClose}\n                              >\n                                ...\n                              </Typography>\n\n                              <Popover\n                                id=\"mouse-over-popover\"\n                                className={classes.popover}\n                                classes={{\n                                  paper: classes.paper,\n                                }}\n                                open={\n                                  state.openedAssigneePopoverId === list._id\n                                }\n                                anchorEl={state.anchorEl}\n                                anchorOrigin={{\n                                  vertical: \"bottom\",\n                                  horizontal: \"left\",\n                                }}\n                                transformOrigin={{\n                                  vertical: \"top\",\n                                  horizontal: \"left\",\n                                }}\n                                onClose={handleAssigneePopoverClose}\n                                disableRestoreFocus\n                              >\n                                {list.assignee.map((assignee, i) => (\n                                  <Typography key={i}>\n                                    {assignee.name}\n                                  </Typography>\n                                ))}\n                              </Popover>\n                            </div>\n                          )}\n                        </span>\n                      </div>\n                    </div>\n                  </Link>\n\n\n                  {list.status === \"booked\" ? (\n                    <div className={`${style.flex} ${style.jobStatus}  ${style.item}`}>\n                      <div className={`text-muted ${style.heading}`}>{`Status:`}</div>\n\n                      <div className={`text-capitalize ${style.headingSub}`}>\n                        <input\n                          className={style.styleCheckBox}\n                          onClick={() => markComplete(list)}\n                          type=\"checkbox\"\n                        ></input>\n                        <Chip\n                          size=\"small\"\n                          label={`Mark Complete`} />\n                      </div>\n\n                    </div>\n                  ) : (\n                    <div className={`${style.status} ${style.flex} ${style.item}`}>\n                      <div className={`text-muted ${style.heading}`}>{`Status:`}</div>\n                      <div className={`text-capitalize ${style.headingSub}`}>\n                        <Chip\n                          size=\"small\"\n                          label={list.status}\n                        />\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n            );\n          })}\n          <div className={style.stylePagination}>\n            <div className={style.pagination}>\n              <Pagination\n                itemCount={totalCount}\n                pageSize={pageSize}\n                currentPage={currentPage}\n                onPageChange={handlePageChange}\n              />\n            </div>\n          </div>\n        </div>\n      ) : ( moverJobs && moverJobs.length == 0 ?\n        <div className=\"text-center\">\n          <img src=\"/images/no-data-found.png\" alt=\"\" />\n        </div> : null\n      )}\n    </div>\n  );\n};\n\nvar mapStateToProps = (state) => ({\n  moverJobs: state.moverJobs.jobList,\n});\n\nvar actions = {\n  getMover,\n  updateJob,\n};\n\nexport default compose(\n  connect(mapStateToProps, actions),\n  withStyles(styles)\n)(MoversJobList);\n","import React, { useEffect } from \"react\";\nimport style from \"./JobDetails.module.css\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { getMoverJobDetail, updateJob } from \"../../../Redux/Mover/moverActions\";\nimport { connect } from \"react-redux\";\nimport { Chip } from \"@material-ui/core\";\nimport parse from \"html-react-parser\";\nimport { faDotCircle, faEnvelope, faMapMarkedAlt, faMapMarker, faMapMarkerAlt, faMobile, faUser, faUserShield } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst MoverJobDetails = (props) => {\n  let { getMoverJobDetail } = props;\n  let {\n    match: {\n      params: { jobId },\n    },\n  } = props;\n\n  useEffect(() => {\n    getMoverJobDetail(jobId);\n  }, [getMoverJobDetail, jobId]);\n\n  const paidInCash = () => {\n    let { history, updateJob } = props;\n    updateJob(job._id, { status: \"Paid Cash\" }, () => history.push(\"/mover\"))\n  };\n  let { job } = props;\n  return (\n    <div className={style.jobEditContainer}>\n      {job && (\n        <>\n          <div className={style.containerContent}>\n            <div className={style.cards}>\n              <div className={`card ${style.customerCard}`}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title font-weight-bold\">Customer</h5>\n                  <h6 className=\"card-subtitle mb-2 text-capitalize\">\n                    <FontAwesomeIcon icon={faUser} />{\" \"}\n                    {job.customer.firstName} {job.customer.lastName}\n                  </h6>\n                  <div className=\"card-text mb-2\">\n                    <FontAwesomeIcon icon={faMobile} />{\" \"}\n                    {job.customer.phone}\n                  </div>\n                  <div className=\"card-text\">\n                    <FontAwesomeIcon icon={faEnvelope} />{\" \"}\n                    {job.customer.email}\n                  </div>\n                </div>\n              </div>\n              {/* assignee card */}\n              <div className={`card ${style.assigneeCard}`}>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title font-weight-bold\">Assignees</h5>\n                  {job.assignee.map((assignee, i) => (\n                    <div className={style.assigneehead} key={i}>\n                      <li><FontAwesomeIcon icon={faUserShield} />{\" \"}{assignee.name}</li>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className={`${style.activityBtn}`}>\n                {job.status === \"booked\" || job.status === \"completed\" ? (\n                  <div className={style.payBtns}>\n                    <div className={style.payOnlineBtn}>\n                      <Button\n                        className={style.buttons}\n                        type=\"button\"\n                        onClick={paidInCash}\n                      >\n                        Pay in Cash\n                    </Button>\n                    </div>\n                    <div className={style.payCashBtn}>\n                      <Link\n                        className={style.link}\n                        to={{\n                          pathname: \"/mover/payment\",\n                          jobId: job._id,\n                        }}\n                      >\n                        {\" \"}\n                        <Button className={style.buttons} type=\"button\">\n                          Pay Online\n                      </Button>\n                      </Link>\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n            <div className={`${style.jobDetail}`}>\n              <div className={style.jobHeader}>\n                <h5>{job.title}</h5>\n\n                <div className={style.jobHeader___childs}>\n                  <div className={`text-muted ${style.jobDates}`}>\n                    {job.dates.map((x, i) =>\n                      i === 0 ? (\n                        <span key={i}>{x.date}</span>\n                      ) : (\n                        <span key={i}> | {x.date} </span>\n                      )\n                    )}\n                  </div>\n                  <div className={style.job___IdStatus}>\n                    <div>\n                      {`Job Id: `}\n                      <Chip\n                        size=\"small\"\n                        label={job.jobId}\n                        clickable\n                        color=\"primary\"\n                      />\n                    </div>\n                    <div>\n                      {`Status: `}\n                      <Chip\n                        size=\"small\"\n                        label={job.status}\n                        clickable\n                        color=\"primary\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className={style.service}>\n                <div>\n                  <div><h5>Job Type:</h5></div>\n                  <Chip\n                    clickable\n                    size=\"small\"\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    label={job.jobType}\n                  />\n                </div>\n                <div>\n                  <div><h5>Services:</h5></div>\n                  {job.services.map((service, i) => (\n                    <Chip\n                      key={i}\n                      size=\"small\"\n                      color=\"primary\"\n                      variant=\"outlined\"\n                      label={service.name}\n                      clickable\n                    />\n                  ))}\n                </div>\n              </div>\n\n              <div className={style.jobDescription}>\n                <div className={style.jobDescription___title}>\n                  {`Job Description: `}\n                </div>\n                <div className={style.jobDescription___text}>\n                  {parse(job.description)}\n                </div>\n              </div>\n\n              {job.note.length !== 0 && (\n                <div className={style.notes}>\n                  <div className={style.notes___title}>\n                    <h5>Notes:</h5>\n                  </div>\n                  {job.note.map((x, i) => (\n                    <div className={style.notes___text} key={i}>{x.text}</div>\n                  ))}\n                </div>\n              )}\n\n              {job.locations && (\n                <div className={style.locations}>\n                  {job.locations.map((list, i) =>\n                    list.type === \"pickup\" ? (\n                      <div key={i}>\n                        <FontAwesomeIcon icon={faMapMarker} />{\" \"}\n                        <span className={style.locationType}>{`Pickup`} </span>{\" \"}\n                        <div className={style.location}>{list.value}</div>\n                      </div>\n                    ) : (\n                      <div key={i}>\n                        <FontAwesomeIcon icon={faMapMarkerAlt} />{\" \"}\n                        <span className={style.locationType}>{`Dropoff`}</span>\n                        <div className={style.location}>{list.value}</div>\n                        <div className=\"text-muted\">\n                          {`Property Type: `}\n                          <Chip\n                            clickable\n                            color=\"primary\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            label={list.propertyType}\n                          /></div>\n                      </div>\n                    )\n                  )}\n                </div>\n              )}\n\n              {/* {job.status === \"booked\" || job.status === \"completed\" ? (\n                <div className={style.payBtns}>\n                  <div className={style.payOnlineBtn}>\n                    <Button\n                      className={style.buttons}\n                      type=\"button\"\n                      onClick={paidInCash}\n                    >\n                      Pay in Cash\n                    </Button>\n                  </div>\n                  <div className={style.payCashBtn}>\n                    <Link\n                      className={style.link}\n                      to={{\n                        pathname: \"/mover/payment\",\n                        jobId: job._id,\n                      }}\n                    >\n                      {\" \"}\n                      <Button className={style.buttons} type=\"button\">\n                        Pay Online\n                      </Button>\n                    </Link>\n                  </div>\n                </div>\n              ) : null} */}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nvar actions = {\n  getMoverJobDetail,\n  updateJob\n};\nvar mapStateToProps = (state) => ({\n  job: state.moverJobs.job\n});\n\nexport default connect(mapStateToProps, actions)(MoverJobDetails);\n","import React, { useEffect, useState } from \"react\";\nimport style from \"./Payment.module.css\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { payAmount } from \"../../../Redux/Mover/moverActions\";\nimport { connect } from \"react-redux\";\n\nconst Payment = (props) => {\n  const [state, setState] = useState({\n    number: \"\",\n    exp_month: \"\",\n    exp_year: \"\",\n    cvc: \"\",\n    amount: \"\",\n  })\n  useEffect(() => {\n    loadStripe();\n    const { history } = props;\n    if (!props.location.jobId) {\n      history.push(\"/mover\");\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const changeHandler = (e) => {\n    let { name, value } = e.target;\n    setState({ ...state, [name]: value });\n  };\n\n  const loadStripe = () => {\n    if (!window.document.getElementById(\"stripe-script\")) {\n      let s = window.document.createElement(\"script\");\n      s.id = \"stripe-script\";\n      s.type = \"text/javascript\";\n      s.src = \"https://js.stripe.com/v2/\";\n      s.onload = () => {\n        window[\"Stripe\"].setPublishableKey(\n          \"pk_test_51HfgSrIoqQ2sulu0x4TK6K2atQHghj1iIthjdrpD9qkE1yLx8nEFEYysxJrXn16tz6caSn1kMFFD6YnUl2MK05C800tBcU5bIH\"\n        );\n      };\n      window.document.body.appendChild(s);\n    }\n  };\n\n\n  const pay = (e) => {\n    e.preventDefault();\n    window.Stripe.card.createToken(\n      {\n        number: state.number,\n        exp_month: state.exp_month,\n        exp_year: state.exp_year,\n        cvc: state.cvc,\n      },\n      (status, response) => {\n        if (status === 200) {\n          // Send Token To Backend\n          let obj = {\n            stripeToken: response.id,\n            amount: state.amount,\n            jobId: props.location.jobId,\n          };\n          let { history, payAmount } = props;\n          payAmount(obj, res => history.push(\"/mover\"));\n        }\n      }\n    );\n  };\n\n\n  return (\n    <div className={style.main}>\n      <div className={style.form}>\n        <div className={style.tophead}>\n          <h3>Credit Card Information</h3>\n\n          <div>\n            <span className={style.logo}>\n              <i className=\"fa fa-cc-paypal\"></i>\n            </span>\n            <span className={style.logo}>\n              <i className={`fa fa-cc-visa ${style.visaIcon}`}></i>\n            </span>\n            <span className={style.logo}>\n              <i className=\"fa fa-cc-mastercard\"></i>\n            </span>\n          </div>\n        </div>\n        <form>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            className={style.styleFormFields}\n            size=\"small\"\n            name=\"number\"\n            label=\"Card Number\"\n            onChange={changeHandler}\n          />\n\n          <p>Testing Card #: 4242424242424242</p>\n          <div className={style.styleCurrentYear}>\n            <div>\n              <TextField\n                variant=\"outlined\"\n                className={style.styleFormFields}\n                fullWidth\n                size=\"small\"\n                name=\"exp_month\"\n                label=\"Month\"\n                onChange={changeHandler}\n              />\n            </div>\n\n            <div>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                className={style.styleFormFields}\n                name=\"exp_year\"\n                label=\"Year\"\n                onChange={changeHandler}\n              />\n            </div>\n          </div>\n\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            name=\"cvc\"\n            label=\"CVC\"\n            className={style.styleFormFields}\n            onChange={changeHandler}\n          />\n\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            id=\"amount\"\n            className={style.styleFormFields}\n            label=\"Amount (Plus tip if any)\"\n            name=\"amount\"\n            onChange={changeHandler}\n          />\n\n          <div className={style.flexEnd}>\n            <Button className={style.button} type=\"button\" onClick={pay}>\n              Pay\n              </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\n\nvar actions = {\n  payAmount\n};\n\nexport default connect(null, actions)(Payment);\n","import { Button } from '@material-ui/core'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport CalendarApp from '../../../components/CalendarApp/CalendarApp'\nimport style from \"./MoverCalendar.module.css\"\n\nconst MoverCalendar = () => {\n  return (\n    <div className={style.calenderContainer}>\n      <div className={style.availibityBtns}>\n        <div className={`${style.buttons}`}>\n          <Link className={style.link} to=\"/mover/availability\">\n            <Button type=\"button\" className={style.button}>\n              Set Availability\n                </Button>\n          </Link>\n\n          <Link className={style.link} to=\"/mover/holidaycalendar\">\n            <Button type=\"button\" className={style.button}>\n              Request Holidays\n                </Button>\n          </Link>\n        </div>\n      </div>\n      <div className={style.calenderContent}>\n\n        <CalendarApp />\n      </div>\n    </div>\n  )\n}\n\nexport default MoverCalendar\n","import React, { useEffect, useState } from \"react\";\n\nimport style from \"./Availability.module.css\";\nimport { setAvailability } from \"../../../Redux/Mover/moverActions\";\nimport { cloneDeep } from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\n\nconst Availability = (props) => {\n  const [state, setState] = useState({\n    days: \"\",\n    user: \"\",\n    weeklySchedule: [],\n    update: true,\n  });\n\n  let {user} = props\n  \n  useEffect(() => {\n    if (user) {\n      setState({\n        ...state,\n        user: user,\n        weeklySchedule: user.weeklySchedule,\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n  const handleChange = (e) => {\n    let newData = cloneDeep(state);\n    let index = newData.weeklySchedule.findIndex(\n      (x) => x.day === e.target.value\n    );\n    newData.weeklySchedule[index].status = !newData.weeklySchedule[index]\n      .status;\n    setState({ ...newData });\n  };\n\n  const handleSubmit = (e) => {\n    let {setAvailability } = props;\n    e.preventDefault();\n    let obj = {\n      weeklySchedule: state.weeklySchedule,\n    };\n    setAvailability(obj, state.user._id)\n  };\n\n\n  return (\n    <div className={style.availabilityContainer}>\n      <div className={`${style.availabilityHeader} ${style.flex}`}>\n        <h3>Select Your Availability</h3>\n      </div>\n      <div className={style.availabilitySchedule}>\n        { state.weeklySchedule && state.weeklySchedule.map((list, i) => {\n          return (\n            <div className={`${style.scheduleContainer}`} key={i}>\n              <div className={`${style.schedule}`}>\n                <div className={style.checkbox}>\n                  <input\n                    checked={list.status}\n                    type=\"checkbox\"\n                    name={list.day}\n                    onChange={handleChange}\n                    value={list.day}\n                    id=\"defaultCheck1\"\n                  />\n                </div>\n                <div className={style.dayName}>\n                  <h5>{list.day}</h5>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div className={`${style.saveBtn} ${style.flex}`}>\n        <Button\n          className={style.button}\n          type=\"button\"\n          onClick={handleSubmit}\n        >\n          Save\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nvar actions = {\n  setAvailability,\n};\n\nvar mapStateToProps = (state) => ({\n  user: state.users.user,\n});\n\nexport default connect(mapStateToProps, actions)(Availability);\n","import React, { useState } from \"react\";\nimport DayPicker from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport style from \"./HolidayCalendar.module.css\";\n\nimport { holidayCalendar } from \"../../../Redux/Mover/moverActions\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button, TextareaAutosize } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { cloneDeep } from \"lodash\";\n\nfunction renderDay(day) {\n  const date = day.getDate();\n\n  return (\n    <div className={style.cellStyle}>\n      <div className={style.dateStyle}>{date}</div>\n      <div className={style.birthdayStyle}>\n        <input\n          type=\"checkbox\"\n          className=\"form-check-input\"\n          id=\"exampleCheck1\"\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction RequestHolidays(props) {\n  const [show, setShow] = useState(false);\n  const [note, setNote] = useState(\"\");\n  const [dates, setDates] = useState([]);\n  const [emptyReasonError, setEmptyReasonError] = useState(\"\");\n  const handleShow = () => {\n    setShow(true);\n  };\n  const handleClose = () => {\n    setEmptyReasonError(\"\");\n    setShow(false);\n    setNote('')\n  };\n  const handleDayClick = (e) => {\n    let newDates = cloneDeep(dates);\n    let index = newDates.findIndex((x) => x === e.toString());\n    if (index !== -1) {\n      newDates.splice(index, 1);\n      setDates(newDates);\n    } else {\n      setDates([...newDates, e.toString()]);\n    }\n  };\n\n  const addNote = () => {\n    let { holidayCalendar } = props;\n    if (dates.length > 0 && note.length > 0) {\n      let obj = {\n        dates,\n        reason: note,\n      };\n      holidayCalendar(obj, res =>{ \n        setNote('')\n        setShow(false)\n      });\n    } else if (note.length === 0) {\n      setEmptyReasonError(\"Error\");\n    }\n  };\n\n  const handleAddNote = (e) => {\n    setNote(e.target.value);\n  };\n  return (\n    <div className={style.holidayCalendarContainer}>\n      <div className={style.buttons}>\n        <Button className={style.button} onClick={handleShow} type=\"submit\">\n          Add Reason\n        </Button>\n      </div>\n      <div className={style.calender}>\n        <DayPicker\n          canChangeMonth={true}\n          renderDay={renderDay}\n          onDayClick={(e) => handleDayClick(e)}\n          className={style.flex}\n        />\n      </div>\n      <Modal\n        dialogClassName={`${style.modal}`}\n        show={show}\n        onHide={handleClose}\n        centered\n        scrollable\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add Reason</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            <TextareaAutosize\n\n              id=\"\"\n              rows=\"5\"\n              name=\"note\"\n              value={note}\n              className={\n                emptyReasonError !== \"\" ? style.redBorder : style.blackBorder\n              }\n              onChange={handleAddNote}\n            ></TextareaAutosize>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <div className={style.modalBtn}>\n            <Button\n              className={style.button}\n              type=\"button\"\n              onClick={handleClose}\n            >\n              Close\n            </Button>\n\n            <Button className={style.button} type=\"button\" onClick={addNote}>\n              Send Request\n            </Button>\n          </div>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\nvar actions = {\n  holidayCalendar,\n};\n\nexport default connect(null, actions)(RequestHolidays);\n","import React, { useEffect } from \"react\";\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport PrivateRoute from \"./utils/private-routes\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport ErrorBoundary from \"./components/ErrorBoundary/ErrorBoundary\";\nimport DefaultRoute from './DefaultRoute'\n\n/* Auth */\nimport SignIn from \"./pages/SignIn/SignIn\";\nimport EmailVerification from \"./pages/ForgetPassword/EmailVerification/EmailVerification\";\nimport CodeVerification from \"./pages/ForgetPassword/CodeVerification/CodeVerification\";\nimport ResetPassword from \"./pages/ForgetPassword/ResetPassword/ResetPassword\";\n\n/* Customer */\nimport CustomerList from \"./pages/Customer/CustomerList/CustomerList\";\nimport CustomerDetails from \"./pages/Customer/CustomerDetails/CustomerDetails\";\nimport CreateCustomer from \"./pages/Customer/CreateCustomer/CreateCustomer\";\nimport UpdateCustomer from \"./pages/Customer/UpdateCustomer/UpdateCustomer\";\n\n/* Job */\nimport JobList from \"./pages/Job/JobList/JobList\";\nimport JobDetails from \"./pages/Job/JobDetails/JobDetails\";\nimport CreateJob from \"./pages/Job/CreateJob/CreateJob\";\nimport UpdateJob from \"./pages/Job/UpdateJob/UpdateJob\";\n\n/* Calendar */\nimport Calendar from \"./pages/Calendar/Calendar\";\n\n/* Schedule */\nimport UnavailableSchedule from \"./pages/Schdule/Unavailable/Unavailable\";\nimport DailySchedule from \"./pages/Schdule/Daily/Daily\";\nimport MoversSchedule from \"./pages/Schdule/Movers/Movers\";\n\n/* User */\nimport UserList from \"./pages/User/UserList/UserList\";\nimport CreateUser from \"./pages/User/CreateUser/CreateUser\";\nimport UpdateUser from \"./pages/User/UpdateUser/UpdateUser\";\n\n/* Account */\nimport Account from \"./pages/Account/Account\";\n\n/* Claim */\nimport ClaimList from \"./pages/Claim/ClaimList/ClaimList\";\nimport ClaimDetails from \"./pages/Claim/ClaimDetails/ClaimDetails\";\nimport CreateClaim from \"./pages/Claim/CreateClaim/CreateClaim\";\n\n/* Deposit */\nimport DepositList from \"./pages/Deposit/DepositList/DepositList\";\nimport CreateDeposit from \"./pages/Deposit/CreateDeposit/CreateDeposit\";\nimport DepositDetails from \"./pages/Deposit/DepositDetails/DepositDetails\"\n\n/* Mover */\nimport MoversJobList from \"./pages/Mover/JobList/JobList\";\nimport MoverJobDetails from \"./pages/Mover/JobDetails/JobDetails\";\nimport Payment from \"./pages/Mover/Payment/Payment\";\nimport MoversCalendar from \"./pages/Mover/MoverCalendar/MoverCalendar\";\nimport Availability from \"./pages/Mover/Availability/Availability\";\nimport RequestHolidays from \"./pages/Mover/HolidayCalendar/HolidayCalendar\";\nimport BackButton from \"./components/BackButton/BackButton\";\n\nfunction App(props) {\n  // To show server responses to user.\n  const { totalRequest, showMessage } = props;\n  useEffect(() => {\n    if (showMessage) {\n      notify(showMessage);\n    }\n  }, [showMessage]);\n  const notify = (message) => toast(message);\n\n  const location = useLocation();\n  let { pathname } = location;\n  let appRoles = [\"mover\", \"admin\"]\n  let moverRoles = [\"mover\"]\n  let adminRoles = [\"admin\"]\n\n  return (\n    <div className={pathname !== \"/\" ? \"app\" : \"app-without-nav\"}>\n      {totalRequest > 0 ? (\n        <div className=\"loader\">\n          <CircularProgress />\n        </div>\n      ) : null}\n      <div className=\"navigation-menu\">\n        <Navbar />\n        <BackButton />\n      </div>\n      <div\n        className={\n          pathname !== \"/\" ? \"app-content-container\" : \"app-content-without-nav\"\n        }\n      >\n        <ToastContainer position=\"bottom-right\" />\n        <Switch>\n          <ErrorBoundary>\n\n            {/* Auth */}\n            <Route path=\"/\" exact={true} component={SignIn} roles={appRoles} />\n            <Route path=\"/email-verification\" component={EmailVerification} roles={appRoles} />\n            <Route path=\"/verifycode\" component={CodeVerification} roles={appRoles} />\n            <PrivateRoute path=\"/rest-password\" component={ResetPassword} roles={appRoles} />\n\n            {/* Customer */}\n            <PrivateRoute path=\"/customers\" exact component={CustomerList} roles={adminRoles} />\n            <PrivateRoute path=\"/customer/detail/:customerId\" component={CustomerDetails} roles={adminRoles} />\n            <PrivateRoute path=\"/customer/add\" component={CreateCustomer} roles={adminRoles} />\n            <PrivateRoute path=\"/customer/update/:customerId\" component={UpdateCustomer} roles={adminRoles} />\n\n            {/* Job */}\n            <PrivateRoute path=\"/jobs\" component={JobList} exact roles={adminRoles} />\n            <PrivateRoute path=\"/job/detail/:jobId\" component={JobDetails} roles={adminRoles} />\n            <PrivateRoute path=\"/job/add\" component={CreateJob} roles={adminRoles} />\n            <PrivateRoute path=\"/job/update/:jobId\" component={UpdateJob} roles={adminRoles} />\n\n            {/* Calendar */}\n            <PrivateRoute path=\"/calendar\" component={Calendar} roles={adminRoles} />\n\n            {/* Schedule */}\n            <PrivateRoute path=\"/schedule\" component={DailySchedule} exact roles={adminRoles} />\n            <PrivateRoute path=\"/schedule/unavailable\" component={UnavailableSchedule} exact roles={adminRoles} />\n            <PrivateRoute path=\"/schedule/movers\" component={MoversSchedule} roles={adminRoles} />\n\n            {/* User */}\n            <PrivateRoute path=\"/users\" component={UserList} exact roles={adminRoles} />\n            <PrivateRoute path=\"/user/add\" component={CreateUser} roles={adminRoles} />\n            <PrivateRoute path=\"/user/update/:userId\" component={UpdateUser} roles={adminRoles} />\n\n\n            {/* Account */}\n            <PrivateRoute path=\"/account\" component={Account} exact roles={adminRoles} />\n\n            {/* Claim */}\n            <PrivateRoute path=\"/claims\" component={ClaimList} roles={adminRoles} />\n            <PrivateRoute path=\"/claim/detail/:claimId\" component={ClaimDetails} roles={adminRoles} />\n            <PrivateRoute path=\"/claim/add\" component={CreateClaim} exact roles={adminRoles} />\n\n            {/* Deposit */}\n            <PrivateRoute path=\"/deposits\" exact component={DepositList} roles={adminRoles} />\n            <PrivateRoute path=\"/deposit/detail/:depositId\" component={DepositDetails} roles={adminRoles} />\n            <PrivateRoute path=\"/deposit/add\" component={CreateDeposit} roles={adminRoles} />\n\n            {/* Mover */}\n            <PrivateRoute path=\"/mover\" component={MoversJobList} exact roles={moverRoles} />\n            <PrivateRoute path=\"/mover/jobdetails/:jobId\" component={MoverJobDetails} roles={moverRoles} />\n            <PrivateRoute path=\"/mover/payment\" component={Payment} roles={moverRoles} />\n            <PrivateRoute path=\"/mover/calendar\" component={MoversCalendar} roles={moverRoles} />\n            <PrivateRoute path=\"/mover/availability\" component={Availability} roles={moverRoles} />\n            <PrivateRoute path=\"/mover/holidaycalendar\" component={RequestHolidays} roles={moverRoles} />\n\n            {/* <PrivateRoute path=\"/:id\" component={()=><h4>not found </h4>} roles={appRoles}/>   */}\n            {/* <Redirect exact to=\"/\"/> */}\n            {/* <Route component={DefaultRoute}/> */}\n\n          </ErrorBoundary>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  showMessage: state.common.displayMessage.message,\n  totalRequest: state.common.totalRequest,\n});\n\nexport default connect(mapStateToProps, null)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GET_CUSTOMERS, GET_CUSTOMER, DELETE_CUSTOMER } from \"./customerConstants\"\n\n\nlet initialState = {\n    customerList: []\n}\nconst customerReducer = (state = initialState, action) => {\n    let { type, payload } = action\n\n    switch (type) {\n\n        case GET_CUSTOMERS:\n\n            return { ...state, customerList: payload }\n\n        case GET_CUSTOMER:\n            return { ...state, customer: payload }\n\n        case DELETE_CUSTOMER:\n            return { ...state, customerList: payload }\n        default:\n            return state\n    }\n\n\n}\nexport default customerReducer\n","import { GET_JOBS, GET_JOB, FILTER_JOB, DELETE_JOB } from \"./jobConstants\"\n\nlet initialState = {\n    job: ''\n}\n\n\nconst jobReducer = (state = initialState, action) => {\nlet {type, payload} = action\n\nswitch (type) {\n    case GET_JOBS:\n        return {...state, jobList:payload}\n        \n        case GET_JOB:\n        return {...state,job: payload}\n        \ncase FILTER_JOB:\n    return {...payload.dateFilter}\n    case DELETE_JOB:\n        return {jobList:payload}\n    default:\n        return state\n}\n\n}\nexport default jobReducer","import { DELETE_CLAIM, GET_CLAIM, GET_CLAIMS} from \"./claimConstants\"\n\nlet initialState = {\n    claim: ''\n}\nconst claimReducer = (state = initialState, action) => {\n    let { type, payload } = action\n    switch (type) {\n        case GET_CLAIMS:\n            return { ...state, claimList: payload }\n\n       \n\n        case GET_CLAIM:\n            return { ...state, claim: payload }\n\n        case DELETE_CLAIM:\n            return { ...state, claimList: payload }\n\n        default:\n            return state\n    }\n}\nexport default claimReducer","import { GET_USERS, LOGGEDIN_USER } from \"./userConstants\";\n\nlet initialState = {\n  user: null,\n  userList: {}\n};\n\nconst userReducer = (state = initialState, action) => {\n  let { type, payload } = action;\n\n  switch (type) {\n    case GET_USERS:\n      return { ...state, userList: payload };\n          case LOGGEDIN_USER:\n      return { ...state, user: payload };\n\n    default:\n      return state;\n  }\n};\nexport default userReducer;\n","import {\n  GET_MOVER,\n  GET_MOVER_JOB_DETAIL,\n  GET_UPDATED_JOB_LIST,\n  SEARCH_FILTER,\n} from \"./moverConstants\";\n\nlet initialState = {\n  job: \"\",\n};\nconst moverReducer = (state = initialState, action) => {\n  let { type, payload } = action;\n  switch (type) {\n    case GET_MOVER:\n      return { jobList: payload };\n      case GET_UPDATED_JOB_LIST:\n        return { jobList: payload };\n  \n    case GET_MOVER_JOB_DETAIL:\n      return { job: payload };\n    case SEARCH_FILTER:\n      return { jobList: payload };\n\n    default:\n      return state;\n  }\n};\nexport default moverReducer;\n","import { START_LOADING, FINISH_LOADING, SHOW_MESSAGE, SCHEDULE_DATE } from \"./commonConstants\"\n\nlet initialState = {\n    loading: false,\n    displayMessage: '',\n    totalRequest: 0,\n    scheduleDate: new Date()\n}\nconst commonReducer = (state = initialState, action) => {\n    let { type, payload } = action\n    switch (type) {\n        case START_LOADING:\n            let currentState = { ...state };\n            return {\n                ...state,\n                totalRequest: ++currentState.totalRequest\n            }\n        case FINISH_LOADING:\n            let currentStates = { ...state };\n            return {\n                ...state,\n                totalRequest: --currentStates.totalRequest\n            }\n        case SHOW_MESSAGE:\n            return { ...state, displayMessage: payload }\n        case SCHEDULE_DATE:\n            return { ...state, scheduleDate: payload }\n        default:\n            return state\n    }\n}\n\nexport default commonReducer","import { GET_UNAVAILABLE_LIST } from \"./unavailableConstant\";\n\nlet initialState = null;\n\nconst unavailableReducer = (state = initialState, action) => {\n  let { type, payload } = action;\n  switch (type) {\n    case GET_UNAVAILABLE_LIST:\n      return payload;\n\n    default:\n      return state;\n  }\n};\nexport default unavailableReducer;\n","import { GET_ALLJOBS, GET_ALLJOBS_FIVEDAYS } from \"./scheduleConstant\"\n\n\nlet initialState = {\n    jobList: null,\n    moverList: null\n}\nconst scheduleReducer = (state = initialState, action) => {\n    let {type, payload} = action\n    switch (type) {\n        case GET_ALLJOBS:\n            return {...state, jobList: payload}\n        case GET_ALLJOBS_FIVEDAYS:\n            return {...state, moverList: payload} \n  \n        default:\n            return state\n    }\n   \n        \n}\nexport default scheduleReducer","import { GET_CUSTOMER_FORM, SET_CUSTOMER_FORM, GET_JOB_FORM, SET_JOB_FORM, GET_CLAIM_FORM, SET_CLAIM_FORM, SET_DEPOSIT_FORM, GET_DEPOSIT_FORM, RESET_CUSTOMER_FORM, RESET_JOB_FORM, RESET_CLAIM_FORM, RESET_DEPOSIT_FORM } from \"./formConstants\"\nimport { EditorState } from 'draft-js';\n\n\nlet initialState = {\n    addCustomerForm: {\n        firstName: \"\",\n        lastName: \"\",\n        phone: \"\",\n        email: \"\",\n        subContacts: [\n            {\n                name: \"\",\n                phone: \"\",\n                email: \"\"\n            }\n        ],\n        firstNameError: \"\",\n        lastNameError: \"\",\n        emailError: \"\",\n        phoneNumberError: \"\",\n        subContactPhoneError: \"\",\n        subContactEmailError: \"\"\n    },\n    addJobForm: {\n        editorState: EditorState.createEmpty(),\n        title: \"\",\n        description: \"\",\n        services: [],\n        customerId: \"\",\n        startDate: \"\",\n        dates: [{ date: new Date(), time: new Date('2014-08-18T09:00:00') }],\n        startTime: \"\",\n        anchorEl: \"\",\n        meetTime: \"\",\n        assigneeRequired: \"\",\n        from: \"\",\n        to: \"\",\n        customerIdError: \"\",\n        titleError: \"\",\n        descriptionError: \"\",\n        multiError: \"\",\n        dateError: \"\",\n        timeError: \"\",\n        assigneeError: \"\",\n        locationfromError: \"\",\n        locationtoError: \"\",\n        assigneeList: [],\n        jobType: \"Hourly Based\",\n        status: \"pending\",\n        note: [],\n        assigneesId: [],\n        add: 1,\n        locations: [{ type: \"\", value: \"\", default: false, propertyType: '' }],\n        fromTo: [],\n        assigneeRequiredError: \"\",\n        selectedDate: new Date(),\n        newService: \"\",\n        newProperty: \"\",\n        customers: [],\n        selectedCustomer: \"\",\n        newCustomer: \"\",\n        showAddCustomer: false,\n        propertyType: '',\n        price: \"\",\n        trucks: [{ type: \"\", number: \"\" }],\n        // truck: \"\",\n        // truckSize: \"None\",\n        serviceOptions: [\n            { id: 1, name: \"Packing\" },\n            { id: 2, name: \"Loading\" },\n            { id: 3, name: \"Unloading\" },\n            { id: 4, name: \"Grand Piano\" },\n            { id: 5, name: \"Baby\" },\n            { id: 6, name: \"Hot Tub\" },\n        ],\n        propertyOptions: [\n            { id: 1, name: \"House\" },\n            { id: 2, name: \"Condominium\" },\n            { id: 3, name: \"Duplex\" },\n            { id: 4, name: \"Trailer\" },\n            { id: 5, name: \"Office\" },\n            { id: 6, name: \"Indoor Storage\" },\n            { id: 7, name: \"Outdoor Storage\" },\n            { id: 8, name: \"Town House\" },\n            { id: 9, name: \"Apartment\" }\n        ],\n        truckOptions: [\n            \"Pickup Truck\",\n            \"Cargo Van\",\n            \"15 ft truck\",\n            \"17 ft truck\",\n            \"20 ft truck\",\n            \"26 ft truck\"\n        ]\n    },\n    addClaimForm: {\n        customerId: \"\",\n        jobId: \"\",\n        claims: {\n            claimType: \"\",\n            price: \"\",\n            description: \"\"\n        },\n        item: \"\",\n        price: \"\",\n        fromDate: \"\",\n        toDate: \"\",\n        locationfrom: \"\",\n        locationto: \"\",\n        customerIdError: \"\",\n        jobIdError: \"\",\n        itemError: \"\",\n        priceError: \"\",\n        descriptionError: \"\",\n        fromDateError: \"\",\n        toDateError: \"\",\n        locationfromError: \"\",\n        locationtoError: \"\",\n        inputValues: \"\",\n        inputValue: \"\",\n        customers: [],\n        jobs: [],\n        selectedCustomer: \"\",\n        selectedJob: \"\",\n        titleError: \"\",\n        title: \"\",\n        waitToError: \"\",\n        waitTo: \"\",\n\n        customerClaims: false,\n    },\n    addDepositForm: {\n        quantity: \"\",\n        cost: \"\",\n        customers: [],\n        jobs: [],\n        selectedCustomer: \"\",\n        selectedJob: \"\",\n        customerIdError: \"\",\n        jobIdError: \"\",\n        quantityError: \"\",\n        costError: \"\",\n        disabled: true,\n    },\n};\nconst formsReducer = (state = initialState, action) => {\n    let { type, payload } = action;\n    switch (type) {\n        // CUSTOMER\n        case SET_CUSTOMER_FORM:\n            return { ...state, addCustomerForm: payload };\n        case GET_CUSTOMER_FORM:\n            return { ...payload.addCustomerForm };\n        case RESET_CUSTOMER_FORM:\n            return { ...state, addCustomerForm: initialState.addCustomerForm }\n\n        // JOB\n        case SET_JOB_FORM:\n            return { ...state, addJobForm: payload };\n        case GET_JOB_FORM:\n            return { ...payload.addJobForm };\n        case RESET_JOB_FORM:\n            return { ...state, addJobForm: initialState.addJobForm }\n\n        // CLAIM\n        case SET_CLAIM_FORM:\n            return { ...state, addClaimForm: payload };\n        case GET_CLAIM_FORM:\n            return { ...payload.addClaimForm };\n        case RESET_CLAIM_FORM:\n            return { ...state, addClaimForm: initialState.addClaimForm }\n\n        // BLANKET\n        case SET_DEPOSIT_FORM:\n            return { ...state, addDepositForm: payload };\n        case GET_DEPOSIT_FORM:\n            return { ...payload.addDepositForm };\n\n        case RESET_DEPOSIT_FORM:\n            return { ...state, addDepositForm: initialState.addDepositForm }\n        default:\n            return state;\n    }\n};\nexport default formsReducer;\n","import { EDIT_DEPOSIT, GET_ALL_DEPOSITS, GET_DEPOSIT } from \"./DepositConstants\"\n\nlet initialState = {\n    depositList: [],\n    deposit: null\n}\n\nconst depositReducer = (state = initialState, action) => {\n    let { type, payload } = action\n    switch (type) {\n        case GET_ALL_DEPOSITS:\n            return { ...state, depositList: payload }\n\n        case GET_DEPOSIT:\n            return { ...state, deposit: payload }\n\n        case EDIT_DEPOSIT:\n            return { ...state, depositList: payload }\n\n\n\n        default:\n            return state\n    }\n}\nexport default depositReducer","import { combineReducers } from 'redux'\nimport customerReducer from './Customer/customerReducer'\nimport jobReducer from './Job/jobReducer'\nimport claimReducer from './Claim/claimReducers'\nimport userReducer from './User/userReducer'\nimport moverReducer from './Mover/moverReducer'\nimport commonReducer from './Common/commanReducers'\nimport unavailableReducer from './Unavailable/unavailableReducer';\nimport scheduleReducer from './Schedule/scheduleReducer';\nimport formsReducer from './PersistForms/formReducer';\nimport depositReducer from './Deposit/DepositReducer'\n\nconst rootReducer = combineReducers({\n    customers: customerReducer,\n    jobs: jobReducer,\n    claims: claimReducer,\n    users: userReducer,\n    moverJobs: moverReducer,\n    common: commonReducer,\n    unavailable: unavailableReducer,\n    schedule: scheduleReducer,\n    forms: formsReducer,\n    blankets: depositReducer\n\n})\nexport default rootReducer","\nimport {createStore,applyMiddleware} from 'redux'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport rootReducer from \"./rootReducer\"\nimport thunk from 'redux-thunk'\n\nlet middlewares = [thunk]\n\nlet store = createStore(rootReducer,composeWithDevTools(applyMiddleware(...middlewares)))\nexport default store","import axios from 'axios';\nimport store from '../Redux/store'\nimport { showMessage } from '../Redux/Common/commonActions';\n\n\nconst isHandlerEnabled = (config = {}) => {\n  return config.hasOwnProperty('handlerEnabled') && config.handlerEnabled ?\n    true : false\n}\n\nconst requestHandler = (request) => {\n  if (isHandlerEnabled(request.config)) {\n    // Modify request here\n    request.headers['Authorization'] = localStorage.getItem('athens-token')\n  }\n  return request\n}\n\nconst Axios = () => {\n  // axios.defaults.baseURL = 'https://athens-backend.herokuapp.com/api/';\n  // axios.defaults.baseURL = 'http://localhost:3001/api/';\n  axios.defaults.baseURL = '/api/';\n  // axios.defaults.baseURL = 'http://10.0.6.197:3000/api';\n\n\n\n  // Request Interceptor\n  axios.interceptors.request.use(req => {\n    if (navigator.onLine) {\n      requestHandler(req)\n      store.dispatch({ type: 'START_LOADING' })\n    } else {\n      // 'Please check internet connection.'\n      throw new axios.Cancel('Operation canceled due to disconnection of internet.');\n    }\n    return req\n  }, err => {\n    store.dispatch({ type: 'FINISH_LOADING' })\n    return Promise.reject(err);\n  })\n\n  // Response Interceptor\n  axios.interceptors.response.use(res => {\n    store.dispatch({ type: 'FINISH_LOADING' })\n    return res\n  }, err => {\n    store.dispatch({ type: 'FINISH_LOADING' })\n    if (axios.isCancel(err)) {\n    } else {\n      // handle error\n      if (err.message === \"Network Error\") {\n        // Server Is Down, Try Latter\n        // store.dispatch(showMessage('Server Is Down, Try Latter.'))\n      }\n      else if (err.message === \"Request failed with status code 401\") {\n        localStorage.clear();\n        window.location.reload();\n      }\n    }\n    return Promise.reject(err);\n  })\n}\n\nexport default Axios;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\"\nimport store from './Redux/store';\nimport {Provider} from 'react-redux'\nimport Axios from \"./utils/api\";\n\nAxios();\n\nReactDOM.render(\n  <Provider store = {store}>\n  <React.Fragment>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.Fragment>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signInContainer\":\"SignIn_signInContainer__3_YPn\",\"image\":\"SignIn_image__1wrQn\",\"form\":\"SignIn_form__1Q3Ky\",\"signIn\":\"SignIn_signIn__UNtGa\",\"head\":\"SignIn_head__2dJSs\",\"textFields\":\"SignIn_textFields__26KJT\",\"email\":\"SignIn_email__3uHaL\",\"password\":\"SignIn_password__21erv\",\"forgetPs\":\"SignIn_forgetPs__zUva_\",\"signinBtn\":\"SignIn_signinBtn__1xhNz\",\"button\":\"SignIn_button__P86TX\",\"flex\":\"SignIn_flex__2TsZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calenderContainer\":\"CalendarApp_calenderContainer__2-Ene\",\"calender\":\"CalendarApp_calender__1vz28\",\"calenderContent\":\"CalendarApp_calenderContent__X1rNn\",\"sideContent\":\"CalendarApp_sideContent__WbJdq\",\"flexCenter\":\"CalendarApp_flexCenter__1fUth\",\"jobInfo\":\"CalendarApp_jobInfo__2wA3w\",\"styleCalender\":\"CalendarApp_styleCalender__3mc9B\",\"flex\":\"CalendarApp_flex__2uMV0\",\"link\":\"CalendarApp_link__2iOPr\",\"flexEnd\":\"CalendarApp_flexEnd__1BbRE\",\"cardBody\":\"CalendarApp_cardBody__3085a\",\"jobDescription\":\"CalendarApp_jobDescription__2vzi0\",\"heading\":\"CalendarApp_heading__16VXt\",\"jobText\":\"CalendarApp_jobText__1D2_N\",\"customerMail\":\"CalendarApp_customerMail__qkOLc\",\"cardHeader\":\"CalendarApp_cardHeader__A293u\",\"card\":\"CalendarApp_card__30dZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"CreateClaim_head__2t6RP\",\"claimContainerPage\":\"CreateClaim_claimContainerPage__2VfkN\",\"claimContainer\":\"CreateClaim_claimContainer__2hSbl\",\"form\":\"CreateClaim_form__ZT0qx\",\"protectionType\":\"CreateClaim_protectionType__3xdUi\",\"modal\":\"CreateClaim_modal__1Dckp\",\"claimHeader\":\"CreateClaim_claimHeader__33YjO\",\"claimContent\":\"CreateClaim_claimContent__1c5Wc\",\"styleTextArea\":\"CreateClaim_styleTextArea__28spO\",\"styleFormFields\":\"CreateClaim_styleFormFields__x1bhx\",\"buttons\":\"CreateClaim_buttons__1VjqA\",\"button\":\"CreateClaim_button__kZnPX\",\"modalBtn\":\"CreateClaim_modalBtn__7ioPO\",\"modalButton\":\"CreateClaim_modalButton__1ImLy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"locationInput\":\"AddLocation_locationInput__12fFy\",\"rowFlex\":\"AddLocation_rowFlex__yJmya\",\"radioButtons\":\"AddLocation_radioButtons__1p7IS\",\"propertyType\":\"AddLocation_propertyType__2c0Tl\",\"inputField\":\"AddLocation_inputField__2-prK\",\"checkBox\":\"AddLocation_checkBox__3stMD\",\"checkBoxTick\":\"AddLocation_checkBoxTick__2SqNh\",\"TrashIcon\":\"AddLocation_TrashIcon__1f3uj\",\"styleRadio\":\"AddLocation_styleRadio__14Jqg\",\"alignRight\":\"AddLocation_alignRight__3au_5\",\"plusIcon\":\"AddLocation_plusIcon__3UiLO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Payment_main__2P5UB\",\"form\":\"Payment_form__q0zXA\",\"logo\":\"Payment_logo__3h--n\",\"visaIcon\":\"Payment_visaIcon__2-9Nd\",\"tophead\":\"Payment_tophead__3L5Yh\",\"styleFormFields\":\"Payment_styleFormFields__1jvZr\",\"styleCurrentYear\":\"Payment_styleCurrentYear__1LOJb\",\"flexEnd\":\"Payment_flexEnd__2V3Il\",\"button\":\"Payment_button__2SOY3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createJob\":\"CreateJob_createJob__3tiaW\",\"form\":\"CreateJob_form__28jnJ\",\"DateTimeInput\":\"CreateJob_DateTimeInput__2khmS\",\"mainDate\":\"CreateJob_mainDate__16NcR\",\"centeredIcon\":\"CreateJob_centeredIcon__2w91J\",\"alignRight\":\"CreateJob_alignRight__SrWLO\",\"plusIcon\":\"CreateJob_plusIcon__3eCjI\",\"modal\":\"CreateJob_modal__1mxAE\",\"head\":\"CreateJob_head__11UMK\",\"btnsubmit\":\"CreateJob_btnsubmit__1Mkl4\",\"styleDate\":\"CreateJob_styleDate__2CPqY\",\"styleEditor\":\"CreateJob_styleEditor__irza9\",\"styleEditorValid\":\"CreateJob_styleEditorValid__4_RXx\",\"styleEditorInValid\":\"CreateJob_styleEditorInValid__3urvf\",\"propertyTypeRow\":\"CreateJob_propertyTypeRow__1hpAw\",\"movers\":\"CreateJob_movers__2EIA1\",\"moversChild\":\"CreateJob_moversChild__1mRLZ\",\"addLocationBtn\":\"CreateJob_addLocationBtn__UScUp\",\"button\":\"CreateJob_button__2Nxj4\",\"styleFormFields\":\"CreateJob_styleFormFields__2U_Xs\",\"resetBtns\":\"CreateJob_resetBtns__3-NcX\",\"flex\":\"CreateJob_flex__1nJb7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"depositDetailsContainer\":\"DepositDetails_depositDetailsContainer__3Qh1h\",\"depositDetails\":\"DepositDetails_depositDetails__2LYGu\",\"cards\":\"DepositDetails_cards__3f2mT\",\"link\":\"DepositDetails_link__1R5R5\",\"customerCard\":\"DepositDetails_customerCard__ajvGZ\",\"jobCard\":\"DepositDetails_jobCard__23f9-\",\"claimButton\":\"DepositDetails_claimButton__2rK6-\",\"button\":\"DepositDetails_button__3BNcj\",\"protectionRow\":\"DepositDetails_protectionRow__2VZ_l\",\"waiting\":\"DepositDetails_waiting__NdO7N\",\"claimDetail\":\"DepositDetails_claimDetail__1Z2b0\",\"pricing\":\"DepositDetails_pricing__1B5Cb\",\"pricingInput\":\"DepositDetails_pricingInput__RMxqH\",\"editButon\":\"DepositDetails_editButon__1fSkp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"HolidayCalendar_flex__2kA8u\",\"holidayCalendarContainer\":\"HolidayCalendar_holidayCalendarContainer__3_it7\",\"buttons\":\"HolidayCalendar_buttons__3y8Hp\",\"calender\":\"HolidayCalendar_calender__3q0FE\",\"button\":\"HolidayCalendar_button__3N3iL\",\"dateStyle\":\"HolidayCalendar_dateStyle__2tWZa\",\"birthdayStyle\":\"HolidayCalendar_birthdayStyle__1sYeE\",\"cellStyle\":\"HolidayCalendar_cellStyle__3wqgK\",\"modal\":\"HolidayCalendar_modal__1A-fQ\",\"redBorder\":\"HolidayCalendar_redBorder__7MT5D\",\"blackBorder\":\"HolidayCalendar_blackBorder__1gfaY\",\"modalBtn\":\"HolidayCalendar_modalBtn__kVkWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unavailableContainer\":\"Unavailable_unavailableContainer__1qtuN\",\"unavailableContent\":\"Unavailable_unavailableContent__10PQ_\",\"unavailableHeader\":\"Unavailable_unavailableHeader__WUAQu\",\"dropDownIcon\":\"Unavailable_dropDownIcon__3Pycw\",\"approveBtn\":\"Unavailable_approveBtn__15Kyy\",\"button\":\"Unavailable_button__3pUdS\",\"unavailableList\":\"Unavailable_unavailableList__3LrOx\",\"checkBox\":\"Unavailable_checkBox__1WkOa\",\"item\":\"Unavailable_item__3uIcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userContainer\":\"UpdateUser_userContainer__7aZs4\",\"userForm\":\"UpdateUser_userForm__RkU2z\",\"head\":\"UpdateUser_head__vLXCO\",\"styleFormFields\":\"UpdateUser_styleFormFields__25zTM\",\"styleAddress\":\"UpdateUser_styleAddress__1EGK0\",\"updateBtn\":\"UpdateUser_updateBtn__1FOG1\",\"button\":\"UpdateUser_button__1D2he\",\"flexEnd\":\"UpdateUser_flexEnd__2a5rX\"};"],"sourceRoot":""}